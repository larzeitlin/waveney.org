shadow$provide.module$node_modules$ol$interaction$KeyboardPan = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  var require$_DOT__DOT__SLASH_coordinate_DOT_js = require("module$node_modules$ol$coordinate");
  module = require("module$node_modules$ol$events$EventType");
  global = require("module$node_modules$ol$events$Key");
  var require$_DOT__DOT__SLASH_events_SLASH_condition_DOT_js = require("module$node_modules$ol$events$condition"), require$_DOT__SLASH_Interaction_DOT_js = require("module$node_modules$ol$interaction$Interaction"), default$$require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js = require.esmDefault(module);
  module = require.esmDefault(require$_DOT__SLASH_Interaction_DOT_js);
  var default$$require$_DOT__DOT__SLASH_events_SLASH_Key_DOT_js = require.esmDefault(global);
  class KeyboardPan extends module.default {
    constructor(options) {
      super();
      options = options || {};
      this.defaultCondition_ = function(mapBrowserEvent) {
        return (0,require$_DOT__DOT__SLASH_events_SLASH_condition_DOT_js.noModifierKeys)(mapBrowserEvent) && (0,require$_DOT__DOT__SLASH_events_SLASH_condition_DOT_js.targetNotEditable)(mapBrowserEvent);
      };
      this.condition_ = void 0 !== options.condition ? options.condition : this.defaultCondition_;
      this.duration_ = void 0 !== options.duration ? options.duration : 100;
      this.pixelDelta_ = void 0 !== options.pixelDelta ? options.pixelDelta : 128;
    }
    handleEvent(mapBrowserEvent) {
      var stopEvent = !1;
      if (mapBrowserEvent.type == default$$require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js.default.KEYDOWN) {
        const keyEvent = mapBrowserEvent.originalEvent;
        var key = keyEvent.key;
        if (this.condition_(mapBrowserEvent) && (key == default$$require$_DOT__DOT__SLASH_events_SLASH_Key_DOT_js.default.DOWN || key == default$$require$_DOT__DOT__SLASH_events_SLASH_Key_DOT_js.default.LEFT || key == default$$require$_DOT__DOT__SLASH_events_SLASH_Key_DOT_js.default.RIGHT || key == default$$require$_DOT__DOT__SLASH_events_SLASH_Key_DOT_js.default.UP)) {
          mapBrowserEvent = mapBrowserEvent.map.getView();
          stopEvent = mapBrowserEvent.getResolution() * this.pixelDelta_;
          let deltaX = 0, deltaY = 0;
          key == default$$require$_DOT__DOT__SLASH_events_SLASH_Key_DOT_js.default.DOWN ? deltaY = -stopEvent : key == default$$require$_DOT__DOT__SLASH_events_SLASH_Key_DOT_js.default.LEFT ? deltaX = -stopEvent : key == default$$require$_DOT__DOT__SLASH_events_SLASH_Key_DOT_js.default.RIGHT ? deltaX = stopEvent : deltaY = stopEvent;
          key = [deltaX, deltaY];
          (0,require$_DOT__DOT__SLASH_coordinate_DOT_js.rotate)(key, mapBrowserEvent.getRotation());
          (0,require$_DOT__SLASH_Interaction_DOT_js.pan)(mapBrowserEvent, key, this.duration_);
          keyEvent.preventDefault();
          stopEvent = !0;
        }
      }
      return !stopEvent;
    }
  }
  const $$default = KeyboardPan;
};

//# sourceMappingURL=module$node_modules$ol$interaction$KeyboardPan.js.map
