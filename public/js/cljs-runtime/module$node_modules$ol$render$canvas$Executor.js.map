{
"version":3,
"file":"module$node_modules$ol$render$canvas$Executor.js",
"lineCount":398,
"mappings":"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",
"sources":["node_modules/ol/render/canvas/Executor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$render$canvas$Executor\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js = require(\"../../array.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js = require(\"../../extent.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_length_DOT_js = require(\"../../geom/flat/length.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_textpath_DOT_js = require(\"../../geom/flat/textpath.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_transform_DOT_js = require(\"../../geom/flat/transform.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js = require(\"../../transform.js\");\nvar require$_DOT__DOT__SLASH_canvas_SLASH_ZIndexContext_DOT_js = require(\"../canvas/ZIndexContext.js\");\nvar require$_DOT__DOT__SLASH_canvas_DOT_js = require(\"../canvas.js\");\nvar require$_DOT__SLASH_Instruction_DOT_js = require(\"./Instruction.js\");\nvar require$_DOT__SLASH_TextBuilder_DOT_js = require(\"./TextBuilder.js\");\nvar default$$require$_DOT__SLASH_Instruction_DOT_js = require.esmDefault(require$_DOT__SLASH_Instruction_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_canvas_SLASH_ZIndexContext_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_canvas_SLASH_ZIndexContext_DOT_js);\nconst tmpExtent = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.createEmpty)();\nconst p1 = [];\nconst p2 = [];\nconst p3 = [];\nconst p4 = [];\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\nconst rtlRegEx = new RegExp(\"[\" + String.fromCharCode(1425) + \"-\" + String.fromCharCode(2303) + String.fromCharCode(64285) + \"-\" + String.fromCharCode(65023) + String.fromCharCode(65136) + \"-\" + String.fromCharCode(65276) + String.fromCharCode(67584) + \"-\" + String.fromCharCode(69631) + String.fromCharCode(124928) + \"-\" + String.fromCharCode(126975) + \"]\");\nfunction horizontalTextAlign(text, align) {\n  if (align === \"start\") {\n    align = rtlRegEx.test(text) ? \"right\" : \"left\";\n  } else if (align === \"end\") {\n    align = rtlRegEx.test(text) ? \"left\" : \"right\";\n  }\n  return require$_DOT__SLASH_TextBuilder_DOT_js.TEXT_ALIGN[align];\n}\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push(\"\\n\", \"\");\n  }\n  acc.push(line, \"\");\n  return acc;\n}\nclass Executor {\n  constructor(resolution, pixelRatio, overlaps, instructions, deferredRendering,) {\n    this.overlaps = overlaps;\n    this.pixelRatio = pixelRatio;\n    this.resolution = resolution;\n    this.alignAndScaleFill_;\n    this.instructions = instructions.instructions;\n    this.coordinates = instructions.coordinates;\n    this.coordinateCache_ = {};\n    this.renderedTransform_ = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js.create)();\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n    this.pixelCoordinates_ = null;\n    this.viewRotation_ = 0;\n    this.fillStates = instructions.fillStates || {};\n    this.strokeStates = instructions.strokeStates || {};\n    this.textStates = instructions.textStates || {};\n    this.widths_ = {};\n    this.labels_ = {};\n    this.zIndexContext_ = deferredRendering ? new default$$require$_DOT__DOT__SLASH_canvas_SLASH_ZIndexContext_DOT_js.default() : null;\n  }\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [textState.scale[0] * pixelRatio, textState.scale[1] * pixelRatio,];\n    const align = textState.justify ? require$_DOT__SLASH_TextBuilder_DOT_js.TEXT_ALIGN[textState.justify] : horizontalTextAlign(Array.isArray(text) ? text[0] : text, textState.textAlign || require$_DOT__DOT__SLASH_canvas_DOT_js.defaultTextAlign,);\n    const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n    const chunks = Array.isArray(text) ? text : String(text).split(\"\\n\").reduce(createTextChunks, []);\n    const {width, height, widths, heights, lineWidths} = (0,require$_DOT__DOT__SLASH_canvas_DOT_js.getTextDimensions)(textState, chunks,);\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    const label = {width:w < 0 ? Math.floor(w) : Math.ceil(w), height:h < 0 ? Math.floor(h) : Math.ceil(h), contextInstructions:contextInstructions,};\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push(\"scale\", scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push(\"strokeStyle\", strokeState.strokeStyle);\n      contextInstructions.push(\"lineWidth\", strokeWidth);\n      contextInstructions.push(\"lineCap\", strokeState.lineCap);\n      contextInstructions.push(\"lineJoin\", strokeState.lineJoin);\n      contextInstructions.push(\"miterLimit\", strokeState.miterLimit);\n      contextInstructions.push(\"setLineDash\", [strokeState.lineDash]);\n      contextInstructions.push(\"lineDashOffset\", strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push(\"fillStyle\", fillState.fillStyle);\n    }\n    contextInstructions.push(\"textBaseline\", \"middle\");\n    contextInstructions.push(\"textAlign\", \"center\");\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === \"\\n\") {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push(\"font\", font);\n        }\n        if (fillKey) {\n          fillInstructions.push(\"font\", font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [text, x + leftRight * widths[widthHeightIndex] + align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]), 0.5 * (strokeWidth + lineHeight) + lineOffset,];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push(\"strokeText\", fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push(\"fillText\", fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n  replayTextBackground_(context, p1, p2, p3, p4, fillInstruction, strokeInstruction,) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = fillInstruction[2];\n      context.fillStyle = fillInstruction[1];\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, strokeInstruction,);\n      context.stroke();\n    }\n  }\n  calculateImageOrLabelDimensions_(sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature,) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n    let transform;\n    if (rotation !== 0) {\n      transform = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js.compose)((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js.create)(), centerX, centerY, 1, 1, rotation, -centerX, -centerY,);\n      (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js.apply)(transform, p1);\n      (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js.apply)(transform, p2);\n      (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js.apply)(transform, p3);\n      (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js.apply)(transform, p4);\n      (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.createOrUpdate)(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent,);\n    } else {\n      (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.createOrUpdate)(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent,);\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {drawImageX:x, drawImageY:y, drawImageW:w, drawImageH:h, originX:originX, originY:originY, declutterBox:{minX:tmpExtent[0], minY:tmpExtent[1], maxX:tmpExtent[2], maxY:tmpExtent[3], value:feature,}, canvasTransform:transform, scale:scale,};\n  }\n  replayImageOrLabel_(context, scaledCanvasSize, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction,) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction ? strokeInstruction[2] * dimensions.scale[0] / 2 : 0;\n    const intersects = box.minX - strokePadding <= scaledCanvasSize[0] && box.maxX + strokePadding >= 0 && box.minY - strokePadding <= scaledCanvasSize[1] && box.maxY + strokePadding >= 0;\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4, fillInstruction, strokeInstruction,);\n      }\n      (0,require$_DOT__DOT__SLASH_canvas_DOT_js.drawImageOrLabel)(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale,);\n    }\n    return true;\n  }\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js.apply)(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle = instruction[1];\n    context.lineWidth = instruction[2];\n    context.lineCap = instruction[3];\n    context.lineJoin = instruction[4];\n    context.miterLimit = instruction[5];\n    context.lineDashOffset = instruction[7];\n    context.setLineDash(instruction[6]);\n  }\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(Array.isArray(text) ? text[0] : text, textState.textAlign || require$_DOT__DOT__SLASH_canvas_DOT_js.defaultTextAlign,);\n    const baseline = require$_DOT__SLASH_TextBuilder_DOT_js.TEXT_ALIGN[textState.textBaseline || require$_DOT__DOT__SLASH_canvas_DOT_js.defaultTextBaseline];\n    const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    return {label:label, anchorX:anchorX, anchorY:anchorY,};\n  }\n  execute_(context, scaledCanvasSize, transform, instructions, snapToPixel, featureCallback, hitExtent, declutterTree,) {\n    const zIndexContext = this.zIndexContext_;\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js.equals)(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_transform_DOT_js.transform2D)(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_,);\n      (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js.setFromArray)(this.renderedTransform_, transform);\n    }\n    let i = 0;\n    const ii = instructions.length;\n    let d = 0;\n    let dd;\n    let anchorX, anchorY, declutterMode, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n    const state = {context:context, pixelRatio:this.pixelRatio, resolution:this.resolution, rotation:viewRotation,};\n    const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    let feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = instruction[0];\n      switch(type) {\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.BEGIN_GEOMETRY:\n          feature = instruction[1];\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = instruction[2];\n          } else if (hitExtent !== undefined && !(0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.intersects)(hitExtent, currentGeometry.getExtent())) {\n            i = instruction[2] + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.CIRCLE:\n          d = instruction[1];\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.CUSTOM:\n          d = instruction[1];\n          dd = instruction[2];\n          const geometry = instruction[3];\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.DRAW_IMAGE:\n          d = instruction[1];\n          dd = instruction[2];\n          image = instruction[3];\n          anchorX = instruction[4];\n          anchorY = instruction[5];\n          let height = instruction[6];\n          const opacity = instruction[7];\n          const originX = instruction[8];\n          const originY = instruction[9];\n          const rotateWithView = instruction[10];\n          let rotation = instruction[11];\n          const scale = instruction[12];\n          let width = instruction[13];\n          declutterMode = instruction[14] || \"declutter\";\n          const declutterImageWithText = instruction[15];\n          if (!image && instruction.length >= 20) {\n            text = instruction[19];\n            textKey = instruction[20];\n            strokeKey = instruction[21];\n            fillKey = instruction[22];\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey,);\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = instruction[23];\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = instruction[24];\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = instruction[25];\n          }\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = instruction[16];\n            backgroundFillInstruction = instruction[17];\n            backgroundStrokeInstruction = instruction[18];\n          } else {\n            padding = require$_DOT__DOT__SLASH_canvas_DOT_js.defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n          if (rotateWithView && viewRotationFromTransform) {\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, !!backgroundFillInstruction || !!backgroundStrokeInstruction, feature,);\n            const args = [context, scaledCanvasSize, image, dimensions, opacity, backgroundFillInstruction, backgroundStrokeInstruction,];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  declutterImageWithText[index] = {args, declutterMode};\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              let renderImage, renderText;\n              if (imageArgs && (imageDeclutterMode !== \"declutter\" || !declutterTree.collides(imageDeclutterBox))) {\n                renderImage = true;\n              }\n              if (declutterMode !== \"declutter\" || !declutterTree.collides(dimensions.declutterBox)) {\n                renderText = true;\n              }\n              if (imageDeclutterMode === \"declutter\" && declutterMode === \"declutter\") {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== \"none\") {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== \"none\") {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.DRAW_CHARS:\n          const begin = instruction[1];\n          const end = instruction[2];\n          const baseline = instruction[3];\n          const overflow = instruction[4];\n          fillKey = instruction[5];\n          const maxAngle = instruction[6];\n          const measurePixelRatio = instruction[7];\n          const offsetY = instruction[8];\n          strokeKey = instruction[9];\n          const strokeWidth = instruction[10];\n          text = instruction[11];\n          textKey = instruction[12];\n          const pixelRatioScale = [instruction[13], instruction[13],];\n          declutterMode = instruction[14] || \"declutter\";\n          const textKeepUpright = instruction[15];\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [textState.scale[0] * measurePixelRatio, textState.scale[1] * measurePixelRatio,];\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n          const pathLength = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_length_DOT_js.lineStringLength)(pixelCoordinates, begin, end, 2);\n          const textLength = Math.abs(textScale[0]) * (0,require$_DOT__DOT__SLASH_canvas_DOT_js.measureAndCacheTextWidth)(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_textpath_DOT_js.drawTextOnPath)(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), require$_DOT__DOT__SLASH_canvas_DOT_js.measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_, textKeepUpright,);\n            drawChars: if (parts) {\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c];\n                  chars = part[4];\n                  label = this.createLabel(chars, textKey, \"\", strokeKey);\n                  anchorX = part[2] + (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth * textScale[1] / textScale[0] - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, require$_DOT__DOT__SLASH_canvas_DOT_js.defaultPadding, false, feature,);\n                  if (declutterTree && declutterMode === \"declutter\" && declutterTree.collides(dimensions.declutterBox)) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([context, scaledCanvasSize, label, dimensions, 1, null, null,]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c];\n                  chars = part[4];\n                  label = this.createLabel(chars, textKey, fillKey, \"\");\n                  anchorX = part[2];\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, require$_DOT__DOT__SLASH_canvas_DOT_js.defaultPadding, false, feature,);\n                  if (declutterTree && declutterMode === \"declutter\" && declutterTree.collides(dimensions.declutterBox)) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([context, scaledCanvasSize, label, dimensions, 1, null, null,]);\n                }\n              }\n              if (declutterTree && declutterMode !== \"none\") {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = instruction[1];\n            const result = featureCallback(feature, currentGeometry, declutterMode,);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.MOVE_TO_LINE_TO:\n          d = instruction[1];\n          dd = instruction[2];\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = x + 0.5 | 0;\n          prevY = y + 0.5 | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = x + 0.5 | 0;\n            roundY = y + 0.5 | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, instruction);\n          ++i;\n          break;\n        case default$$require$_DOT__SLASH_Instruction_DOT_js.default.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n  execute(context, scaledCanvasSize, transform, viewRotation, snapToPixel, declutterTree,) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(context, scaledCanvasSize, transform, this.instructions, snapToPixel, undefined, undefined, declutterTree,);\n  }\n  executeHitDetection(context, transform, viewRotation, featureCallback, hitExtent,) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(context, [context.canvas.width, context.canvas.height], transform, this.hitDetectionInstructions, true, featureCallback, hitExtent,);\n  }\n}\nconst $$default = Executor;\n\n};"],
"names":["shadow$provide","global","require","module","exports","getDeclutterBox","replayImageOrLabelArgs","declutterBox","horizontalTextAlign","text","align","rtlRegEx","test","require$_DOT__SLASH_TextBuilder_DOT_js","TEXT_ALIGN","createTextChunks","acc","line","i","push","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_length_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_textpath_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_transform_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js","require$_DOT__DOT__SLASH_canvas_SLASH_ZIndexContext_DOT_js","require$_DOT__DOT__SLASH_canvas_DOT_js","require$_DOT__SLASH_Instruction_DOT_js","default$$require$_DOT__SLASH_Instruction_DOT_js","esmDefault","default$$require$_DOT__DOT__SLASH_canvas_SLASH_ZIndexContext_DOT_js","tmpExtent","createEmpty","p1","p2","p3","p4","RegExp","String","fromCharCode","Executor","constructor","resolution","pixelRatio","overlaps","instructions","deferredRendering","alignAndScaleFill_","coordinates","coordinateCache_","renderedTransform_","create","hitDetectionInstructions","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","zIndexContext_","getZIndexContext","createLabel","textKey","fillKey","strokeKey","key","strokeState","fillState","textState","scale","justify","Array","isArray","textAlign","defaultTextAlign","strokeWidth","lineWidth","chunks","split","reduce","width","height","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","w","h","label","Math","floor","ceil","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","fillStyle","leftRight","x","strokeInstructions","fillInstructions","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","ii","length","font","max","fillStrokeArgs","prototype","apply","replayTextBackground_","context","fillInstruction","strokeInstruction","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","stroke","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","originX","originY","rotation","snapToPixel","padding","fillStroke","feature","y","boxW","boxH","boxX","boxY","transform","compose","createOrUpdate","min","round","drawImageX","drawImageY","drawImageW","drawImageH","minX","minY","maxX","maxY","canvasTransform","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","opacity","box","strokePadding","drawImageOrLabel","alignAndScale","origin","repeatSize","save","translate","rotate","fill","restore","instruction","setLineDash","drawLabelWithPointPlacement_","baseline","textBaseline","defaultTextBaseline","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","equals","transform2D","setFromArray","d","dd","declutterMode","prevX","prevY","roundX","roundY","image","pendingFill","pendingStroke","coordinateCache","viewRotation","viewRotationFromTransform","atan2","state","batchSize","currentGeometry","type","BEGIN_GEOMETRY","getGeometry","undefined","intersects","getExtent","zIndex","BEGIN_PATH","CIRCLE","x1","y1","dx","x2","dy","y2","r","sqrt","arc","PI","CLOSE_PATH","closePath","CUSTOM","renderer","fn","geometry","coords","DRAW_IMAGE","rotateWithView","declutterImageWithText","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFillInstruction","backgroundStrokeInstruction","defaultPadding","widthIndex","args","imageArgs","imageDeclutterMode","imageDeclutterBox","index","imageDeclutter","renderImage","renderText","collides","render","insert","DRAW_CHARS","begin","end","overflow","maxAngle","measurePixelRatio","offsetY","pixelRatioScale","textKeepUpright","textScale","cachedWidths","pathLength","lineStringLength","textLength","abs","measureAndCacheTextWidth","startM","parts","drawTextOnPath","c","cc","chars","part","load","map","END_GEOMETRY","result","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","execute","executeHitDetection","canvas"]
}
