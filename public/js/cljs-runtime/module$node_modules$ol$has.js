shadow$provide.module$node_modules$ol$has = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, CREATE_IMAGE_BITMAP:{enumerable:!0, get:function() {
    return CREATE_IMAGE_BITMAP;
  }}, DEVICE_PIXEL_RATIO:{enumerable:!0, get:function() {
    return DEVICE_PIXEL_RATIO;
  }}, FIREFOX:{enumerable:!0, get:function() {
    return FIREFOX;
  }}, IMAGE_DECODE:{enumerable:!0, get:function() {
    return IMAGE_DECODE;
  }}, MAC:{enumerable:!0, get:function() {
    return MAC;
  }}, PASSIVE_EVENT_LISTENERS:{enumerable:!0, get:function() {
    return PASSIVE_EVENT_LISTENERS;
  }}, SAFARI:{enumerable:!0, get:function() {
    return SAFARI;
  }}, SAFARI_BUG_237906:{enumerable:!0, get:function() {
    return SAFARI_BUG_237906;
  }}, WEBKIT:{enumerable:!0, get:function() {
    return WEBKIT;
  }}, WORKER_OFFSCREEN_CANVAS:{enumerable:!0, get:function() {
    return WORKER_OFFSCREEN_CANVAS;
  }}});
  global = "undefined" !== typeof navigator && "undefined" !== typeof navigator.userAgent ? navigator.userAgent.toLowerCase() : "";
  const FIREFOX = global.includes("firefox"), SAFARI = global.includes("safari") && !global.includes("chrom"), SAFARI_BUG_237906 = SAFARI && (global.includes("version/15.4") || /cpu (os|iphone os) 15_4 like mac os x/.test(global)), WEBKIT = global.includes("webkit") && !global.includes("edge"), MAC = global.includes("macintosh"), DEVICE_PIXEL_RATIO = "undefined" !== typeof devicePixelRatio ? devicePixelRatio : 1, WORKER_OFFSCREEN_CANVAS = "undefined" !== typeof WorkerGlobalScope && "undefined" !== 
  typeof OffscreenCanvas && self instanceof WorkerGlobalScope, IMAGE_DECODE = "undefined" !== typeof Image && Image.prototype.decode, CREATE_IMAGE_BITMAP = "function" === typeof createImageBitmap, PASSIVE_EVENT_LISTENERS = function() {
    let passive = !1;
    try {
      const options = Object.defineProperty({}, "passive", {get:function() {
        passive = !0;
      }});
      window.addEventListener("_", null, options);
      window.removeEventListener("_", null, options);
    } catch {
    }
    return passive;
  }();
};

//# sourceMappingURL=module$node_modules$ol$has.js.map
