{
"version":3,
"file":"module$node_modules$ol$style$Circle.js",
"lineCount":25,
"mappings":"AAAAA,cAAA,CAAA,mCAAA,GAAwD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAChGC,QAAOC,CAAAA,gBAAP,CAAwBF,OAAxB,EAAiC,CAACG,WAAW,CAACC,WAAW,CAAA,CAAZ,EAAkBC,MAAM,CAAA,CAAxB,CAAZ,EAA2CC,QAAQ,CAACF,WAAW,CAAA,CAAZ,EAAkBG,IAAIA,QAAQ,EAAG;AACnH,WAAOC,SAAP;AADmH,GAAjC,CAAnD,CAAjC,CAAA;AAGIC,QAAAA,GAA0CX,OAAA,CAAQ,2CAAR,CAA1CW;AACAC,SAAAA,GAAmDZ,OAAQa,CAAAA,UAAR,CAAmBF,MAAnB,CAAnDC;AACJ,OAAME,YAAN,QAA0BF,QAAiDJ,CAAAA,OAA3E;AACEO,eAAW,CAACC,OAAD,CAAU;AACnBA,aAAA,GAAUA,OAAA,GAAUA,OAAV,GAAoB,CAACC,OAAO,CAAR,CAA9B;AACA,WAAA,CAAM,CAACC,OAAOC,QAAR,EAAkBC,KAAKJ,OAAQI,CAAAA,IAA/B,EAAqCH,OAAOD,OAAQC,CAAAA,MAApD,EAA4DI,OAAOL,OAAQK,CAAAA,MAA3E,EAAmFC,MAAwBC,IAAAA,EAAlB,KAAAP,OAAQM,CAAAA,KAAR,GAA8BN,OAAQM,CAAAA,KAAtC,GAA8C,CAAvI,EAA0IE,SAA8BD,IAAAA,EAArB,KAAAP,OAAQQ,CAAAA,QAAR,GAAiCR,OAAQQ,CAAAA,QAAzC,GAAoD,CAAvM,EAA0MC,eAA0CF,IAAAA,EAA3B,KAAAP,OAAQS,CAAAA,cAAR,GAAuCT,OAAQS,CAAAA,cAA/C,GAAgE,CAAA,CAAzR,EAAgSC,aAAsCH,IAAAA,EAAzB,KAAAP,OAAQU,CAAAA,YAAR,GAAqCV,OAAQU,CAAAA,YAA7C,GAA4D,CAAC,CAAD,EAAI,CAAJ,CAAzW,EAAiXC,cAAcX,OAAQW,CAAAA,aAAvY,CAAN,CAAA;AAFmB;AAIrBC,SAAK,EAAG;AACN,UAAMN,QAAQ,IAAKO,CAAAA,QAAL,EAAd;AACMC,WAAAA,GAAQ,IAAIhB,WAAJ,CAAgB,CAACM,KAAK,IAAKW,CAAAA,OAAL,EAAA,GAAiB,IAAKA,CAAAA,OAAL,EAAeH,CAAAA,KAAf,EAAjB,GAA0CL,IAAAA,EAAhD,EAA2DF,OAAO,IAAKW,CAAAA,SAAL,EAAA,GAAmB,IAAKA,CAAAA,SAAL,EAAiBJ,CAAAA,KAAjB,EAAnB,GAA8CL,IAAAA,EAAhH,EAA2HN,OAAO,IAAKgB,CAAAA,SAAL,EAAlI,EAAoJX,MAAMY,KAAMC,CAAAA,OAAN,CAAcb,KAAd,CAAA,GAAuBA,KAAMc,CAAAA,KAAN,EAAvB,GAAuCd,KAAjM,EAAwME,SAAS,IAAKa,CAAAA,WAAL,EAAjN,EAAqOZ,eAAe,IAAKa,CAAAA,iBAAL,EAApP,EAA8QZ,aAAa,IAAKa,CAAAA,eAAL,EAAuBH,CAAAA,KAAvB,EAA3R,EAA2TT,cAAc,IAAKa,CAAAA,gBAAL,EAAzU,CAAhB,CAARV;AACNA,WAAMW,CAAAA,UAAN,CAAiB,IAAKC,CAAAA,UAAL,EAAjB,CAAA;AACA,aAAOZ,KAAP;AAJM;AAMRa,aAAS,CAAC1B,MAAD,CAAS;AAChB,UAAKA,CAAAA,MAAL,GAAcA,MAAd;AACA,UAAK2B,CAAAA,MAAL,EAAA;AAFgB;AAXpB;AAgBA,QAAMlC,YAAYI,WAAlB;AAtBgG,CAAhG;;",
"sources":["node_modules/ol/style/Circle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$style$Circle\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__SLASH_RegularShape_DOT_js = require(\"./RegularShape.js\");\nvar default$$require$_DOT__SLASH_RegularShape_DOT_js = require.esmDefault(require$_DOT__SLASH_RegularShape_DOT_js);\nclass CircleStyle extends default$$require$_DOT__SLASH_RegularShape_DOT_js.default {\n  constructor(options) {\n    options = options ? options : {radius:5};\n    super({points:Infinity, fill:options.fill, radius:options.radius, stroke:options.stroke, scale:options.scale !== undefined ? options.scale : 1, rotation:options.rotation !== undefined ? options.rotation : 0, rotateWithView:options.rotateWithView !== undefined ? options.rotateWithView : false, displacement:options.displacement !== undefined ? options.displacement : [0, 0], declutterMode:options.declutterMode,});\n  }\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({fill:this.getFill() ? this.getFill().clone() : undefined, stroke:this.getStroke() ? this.getStroke().clone() : undefined, radius:this.getRadius(), scale:Array.isArray(scale) ? scale.slice() : scale, rotation:this.getRotation(), rotateWithView:this.getRotateWithView(), displacement:this.getDisplacement().slice(), declutterMode:this.getDeclutterMode(),});\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\nconst $$default = CircleStyle;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$_DOT__SLASH_RegularShape_DOT_js","default$$require$_DOT__SLASH_RegularShape_DOT_js","esmDefault","CircleStyle","constructor","options","radius","points","Infinity","fill","stroke","scale","undefined","rotation","rotateWithView","displacement","declutterMode","clone","getScale","style","getFill","getStroke","getRadius","Array","isArray","slice","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","setOpacity","getOpacity","setRadius","render"]
}
