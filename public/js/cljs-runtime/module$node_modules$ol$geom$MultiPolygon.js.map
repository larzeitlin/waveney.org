{
"version":3,
"file":"module$node_modules$ol$geom$MultiPolygon.js",
"lineCount":156,
"mappings":"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",
"sources":["node_modules/ol/geom/MultiPolygon.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$geom$MultiPolygon\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH_array_DOT_js = require(\"../array.js\");\nvar require$_DOT__DOT__SLASH_extent_DOT_js = require(\"../extent.js\");\nvar require$_DOT__SLASH_MultiPoint_DOT_js = require(\"./MultiPoint.js\");\nvar require$_DOT__SLASH_Polygon_DOT_js = require(\"./Polygon.js\");\nvar require$_DOT__SLASH_SimpleGeometry_DOT_js = require(\"./SimpleGeometry.js\");\nvar require$_DOT__SLASH_flat_SLASH_area_DOT_js = require(\"./flat/area.js\");\nvar require$_DOT__SLASH_flat_SLASH_center_DOT_js = require(\"./flat/center.js\");\nvar require$_DOT__SLASH_flat_SLASH_closest_DOT_js = require(\"./flat/closest.js\");\nvar require$_DOT__SLASH_flat_SLASH_contains_DOT_js = require(\"./flat/contains.js\");\nvar require$_DOT__SLASH_flat_SLASH_deflate_DOT_js = require(\"./flat/deflate.js\");\nvar require$_DOT__SLASH_flat_SLASH_inflate_DOT_js = require(\"./flat/inflate.js\");\nvar require$_DOT__SLASH_flat_SLASH_interiorpoint_DOT_js = require(\"./flat/interiorpoint.js\");\nvar require$_DOT__SLASH_flat_SLASH_intersectsextent_DOT_js = require(\"./flat/intersectsextent.js\");\nvar require$_DOT__SLASH_flat_SLASH_orient_DOT_js = require(\"./flat/orient.js\");\nvar require$_DOT__SLASH_flat_SLASH_simplify_DOT_js = require(\"./flat/simplify.js\");\nvar default$$require$_DOT__SLASH_SimpleGeometry_DOT_js = require.esmDefault(require$_DOT__SLASH_SimpleGeometry_DOT_js);\nvar default$$require$_DOT__SLASH_Polygon_DOT_js = require.esmDefault(require$_DOT__SLASH_Polygon_DOT_js);\nvar default$$require$_DOT__SLASH_MultiPoint_DOT_js = require.esmDefault(require$_DOT__SLASH_MultiPoint_DOT_js);\nclass MultiPolygon extends default$$require$_DOT__SLASH_SimpleGeometry_DOT_js.default {\n  constructor(coordinates, layout, endss) {\n    super();\n    this.endss_ = [];\n    this.flatInteriorPointsRevision_ = -1;\n    this.flatInteriorPoints_ = null;\n    this.maxDelta_ = -1;\n    this.maxDeltaRevision_ = -1;\n    this.orientedRevision_ = -1;\n    this.orientedFlatCoordinates_ = null;\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = coordinates;\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        (0,require$_DOT__DOT__SLASH_array_DOT_js.extend)(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(layout, coordinates,);\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(coordinates, layout,);\n    }\n  }\n  appendPolygon(polygon) {\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      (0,require$_DOT__DOT__SLASH_array_DOT_js.extend)(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n    const multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss,);\n    multiPolygon.applyProperties(this);\n    return multiPolygon;\n  }\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < (0,require$_DOT__DOT__SLASH_extent_DOT_js.closestSquaredDistanceXY)(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt((0,require$_DOT__SLASH_flat_SLASH_closest_DOT_js.multiArrayMaxSquaredDelta)(this.flatCoordinates, 0, this.endss_, this.stride, 0,),);\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return (0,require$_DOT__SLASH_flat_SLASH_closest_DOT_js.assignClosestMultiArrayPoint)(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance,);\n  }\n  containsXY(x, y) {\n    return (0,require$_DOT__SLASH_flat_SLASH_contains_DOT_js.linearRingssContainsXY)(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y,);\n  }\n  getArea() {\n    return (0,require$_DOT__SLASH_flat_SLASH_area_DOT_js.linearRingss)(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,);\n  }\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      (0,require$_DOT__SLASH_flat_SLASH_orient_DOT_js.orientLinearRingsArray)(flatCoordinates, 0, this.endss_, this.stride, right,);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n    return (0,require$_DOT__SLASH_flat_SLASH_inflate_DOT_js.inflateMultiCoordinatesArray)(flatCoordinates, 0, this.endss_, this.stride,);\n  }\n  getEndss() {\n    return this.endss_;\n  }\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = (0,require$_DOT__SLASH_flat_SLASH_center_DOT_js.linearRingss)(this.flatCoordinates, 0, this.endss_, this.stride,);\n      this.flatInteriorPoints_ = (0,require$_DOT__SLASH_flat_SLASH_interiorpoint_DOT_js.getInteriorPointsOfMultiArray)(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters,);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n  getInteriorPoints() {\n    return new default$$require$_DOT__SLASH_MultiPoint_DOT_js.default(this.getFlatInteriorPoints().slice(), \"XYM\");\n  }\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if ((0,require$_DOT__SLASH_flat_SLASH_orient_DOT_js.linearRingssAreOriented)(flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = (0,require$_DOT__SLASH_flat_SLASH_orient_DOT_js.orientLinearRingsArray)(this.orientedFlatCoordinates_, 0, this.endss_, this.stride,);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = (0,require$_DOT__SLASH_flat_SLASH_simplify_DOT_js.quantizeMultiArray)(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss,);\n    return new MultiPolygon(simplifiedFlatCoordinates, \"XY\", simplifiedEndss);\n  }\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new default$$require$_DOT__SLASH_Polygon_DOT_js.default(this.flatCoordinates.slice(offset, end), this.layout, ends,);\n  }\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new default$$require$_DOT__SLASH_Polygon_DOT_js.default(flatCoordinates.slice(offset, end), layout, ends,);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n  getType() {\n    return \"MultiPolygon\";\n  }\n  intersectsExtent(extent) {\n    return (0,require$_DOT__SLASH_flat_SLASH_intersectsextent_DOT_js.intersectsLinearRingMultiArray)(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent,);\n  }\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = (0,require$_DOT__SLASH_flat_SLASH_deflate_DOT_js.deflateMultiCoordinatesArray)(this.flatCoordinates, 0, coordinates, this.stride, this.endss_,);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\nconst $$default = MultiPolygon;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$_DOT__DOT__SLASH_array_DOT_js","require$_DOT__DOT__SLASH_extent_DOT_js","require$_DOT__SLASH_MultiPoint_DOT_js","require$_DOT__SLASH_Polygon_DOT_js","require$_DOT__SLASH_SimpleGeometry_DOT_js","require$_DOT__SLASH_flat_SLASH_area_DOT_js","require$_DOT__SLASH_flat_SLASH_center_DOT_js","require$_DOT__SLASH_flat_SLASH_closest_DOT_js","require$_DOT__SLASH_flat_SLASH_contains_DOT_js","require$_DOT__SLASH_flat_SLASH_deflate_DOT_js","require$_DOT__SLASH_flat_SLASH_inflate_DOT_js","require$_DOT__SLASH_flat_SLASH_interiorpoint_DOT_js","require$_DOT__SLASH_flat_SLASH_intersectsextent_DOT_js","require$_DOT__SLASH_flat_SLASH_orient_DOT_js","require$_DOT__SLASH_flat_SLASH_simplify_DOT_js","default$$require$_DOT__SLASH_SimpleGeometry_DOT_js","esmDefault","default$$require$_DOT__SLASH_Polygon_DOT_js","default$$require$_DOT__SLASH_MultiPoint_DOT_js","MultiPolygon","constructor","coordinates","layout","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","maxDeltaRevision_","maxDelta_","orientedFlatCoordinates_","Array","isArray","polygons","flatCoordinates","thisEndss","i","ii","length","polygon","offset","ends","getEnds","j","jj","extend","getFlatCoordinates","push","getLayout","undefined","setFlatCoordinates","setCoordinates","appendPolygon","slice","changed","clone","len","newEndss","multiPolygon","applyProperties","closestPointXY","x","y","closestPoint","minSquaredDistance","closestSquaredDistanceXY","getExtent","getRevision","Math","sqrt","multiArrayMaxSquaredDelta","stride","assignClosestMultiArrayPoint","getOrientedFlatCoordinates","containsXY","linearRingssContainsXY","getArea","linearRingss","getCoordinates","right","orientLinearRingsArray","inflateMultiCoordinatesArray","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEndss","quantizeMultiArray","getPolygon","index","prevEnds","end","getPolygons","getType","intersectsExtent","extent","intersectsLinearRingMultiArray","setLayout","deflateMultiCoordinatesArray","lastEnds"]
}
