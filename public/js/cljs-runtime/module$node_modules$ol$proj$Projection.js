shadow$provide.module$node_modules$ol$proj$Projection = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  var require$_DOT__SLASH_Units_DOT_js = require("module$node_modules$ol$proj$Units");
  class Projection {
    constructor(options) {
      this.code_ = options.code;
      this.units_ = options.units;
      this.extent_ = void 0 !== options.extent ? options.extent : null;
      this.worldExtent_ = void 0 !== options.worldExtent ? options.worldExtent : null;
      this.axisOrientation_ = void 0 !== options.axisOrientation ? options.axisOrientation : "enu";
      this.global_ = void 0 !== options.global ? options.global : !1;
      this.canWrapX_ = !(!this.global_ || !this.extent_);
      this.getPointResolutionFunc_ = options.getPointResolution;
      this.defaultTileGrid_ = null;
      this.metersPerUnit_ = options.metersPerUnit;
    }
    canWrapX() {
      return this.canWrapX_;
    }
    getCode() {
      return this.code_;
    }
    getExtent() {
      return this.extent_;
    }
    getUnits() {
      return this.units_;
    }
    getMetersPerUnit() {
      return this.metersPerUnit_ || require$_DOT__SLASH_Units_DOT_js.METERS_PER_UNIT[this.units_];
    }
    getWorldExtent() {
      return this.worldExtent_;
    }
    getAxisOrientation() {
      return this.axisOrientation_;
    }
    isGlobal() {
      return this.global_;
    }
    setGlobal(global) {
      this.global_ = global;
      this.canWrapX_ = !(!global || !this.extent_);
    }
    getDefaultTileGrid() {
      return this.defaultTileGrid_;
    }
    setDefaultTileGrid(tileGrid) {
      this.defaultTileGrid_ = tileGrid;
    }
    setExtent(extent) {
      this.extent_ = extent;
      this.canWrapX_ = !(!this.global_ || !extent);
    }
    setWorldExtent(worldExtent) {
      this.worldExtent_ = worldExtent;
    }
    setGetPointResolution(func) {
      this.getPointResolutionFunc_ = func;
    }
    getPointResolutionFunc() {
      return this.getPointResolutionFunc_;
    }
  }
  const $$default = Projection;
};

//# sourceMappingURL=module$node_modules$ol$proj$Projection.js.map
