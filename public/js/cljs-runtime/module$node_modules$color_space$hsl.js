shadow$provide.module$node_modules$color_space$hsl = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  global = require("module$node_modules$color_space$rgb");
  const $$default = {name:"hsl", min:[0, 0, 0], max:[360, 100, 100], channel:["hue", "saturation", "lightness"], alias:["HSL"], rgb:function(hsl) {
    var h = hsl[0] / 360, s = hsl[1] / 100, l = hsl[2] / 100, t3, rgb;
    hsl = 0;
    if (0 === s) {
      return t3 = 255 * l, [t3, t3, t3];
    }
    s = 0.5 > l ? l * (1 + s) : l + s - l * s;
    l = 2 * l - s;
    for (rgb = [0, 0, 0]; 3 > hsl;) {
      t3 = h + 1 / 3 * -(hsl - 1), 0 > t3 ? t3++ : 1 < t3 && t3--, t3 = 1 > 6 * t3 ? l + 6 * (s - l) * t3 : 1 > 2 * t3 ? s : 2 > 3 * t3 ? l + (s - l) * (2 / 3 - t3) * 6 : l, rgb[hsl++] = 255 * t3;
    }
    return rgb;
  }};
  require.esmDefault(global).default.hsl = function(rgb) {
    var r = rgb[0] / 255, g = rgb[1] / 255, b = rgb[2] / 255;
    rgb = Math.min(r, g, b);
    var max = Math.max(r, g, b), delta = max - rgb, h;
    max === rgb ? h = 0 : r === max ? h = (g - b) / delta : g === max ? h = 2 + (b - r) / delta : b === max && (h = 4 + (r - g) / delta);
    h = Math.min(60 * h, 360);
    0 > h && (h += 360);
    r = (rgb + max) / 2;
    return [h, 100 * (max === rgb ? 0 : 0.5 >= r ? delta / (max + rgb) : delta / (2 - max - rgb)), 100 * r];
  };
};

//# sourceMappingURL=module$node_modules$color_space$hsl.js.map
