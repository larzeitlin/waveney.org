shadow$provide.module$node_modules$ol$render$canvas$BuilderGroup = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  var require$_DOT__SLASH_Builder_DOT_js = require("module$node_modules$ol$render$canvas$Builder");
  global = require("module$node_modules$ol$render$canvas$ImageBuilder");
  exports = require("module$node_modules$ol$render$canvas$LineStringBuilder");
  module = require("module$node_modules$ol$render$canvas$PolygonBuilder");
  var require$_DOT__SLASH_TextBuilder_DOT_js = require("module$node_modules$ol$render$canvas$TextBuilder");
  module = require.esmDefault(module);
  require$_DOT__SLASH_Builder_DOT_js = require.esmDefault(require$_DOT__SLASH_Builder_DOT_js);
  require$_DOT__SLASH_TextBuilder_DOT_js = require.esmDefault(require$_DOT__SLASH_TextBuilder_DOT_js);
  exports = require.esmDefault(exports);
  require = require.esmDefault(global);
  const BATCH_CONSTRUCTORS = {Circle:module.default, Default:require$_DOT__SLASH_Builder_DOT_js.default, Image:require.default, LineString:exports.default, Polygon:module.default, Text:require$_DOT__SLASH_TextBuilder_DOT_js.default};
  class BuilderGroup {
    constructor(tolerance, maxExtent, resolution, pixelRatio) {
      this.tolerance_ = tolerance;
      this.maxExtent_ = maxExtent;
      this.pixelRatio_ = pixelRatio;
      this.resolution_ = resolution;
      this.buildersByZIndex_ = {};
    }
    finish() {
      const builderInstructions = {};
      for (const zKey in this.buildersByZIndex_) {
        builderInstructions[zKey] = builderInstructions[zKey] || {};
        const builders = this.buildersByZIndex_[zKey];
        for (const builderKey in builders) {
          const builderInstruction = builders[builderKey].finish();
          builderInstructions[zKey][builderKey] = builderInstruction;
        }
      }
      return builderInstructions;
    }
    getBuilder(zIndex, builderType) {
      var zIndexKey = void 0 !== zIndex ? zIndex.toString() : "0";
      zIndex = this.buildersByZIndex_[zIndexKey];
      void 0 === zIndex && (zIndex = {}, this.buildersByZIndex_[zIndexKey] = zIndex);
      zIndexKey = zIndex[builderType];
      void 0 === zIndexKey && (zIndexKey = new BATCH_CONSTRUCTORS[builderType](this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_), zIndex[builderType] = zIndexKey);
      return zIndexKey;
    }
  }
  const $$default = BuilderGroup;
};

//# sourceMappingURL=module$node_modules$ol$render$canvas$BuilderGroup.js.map
