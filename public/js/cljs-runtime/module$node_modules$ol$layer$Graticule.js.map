{
"version":3,
"file":"module$node_modules$ol$layer$Graticule.js",
"lineCount":290,
"mappings":"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",
"sources":["node_modules/ol/layer/Graticule.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$layer$Graticule\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH_Collection_DOT_js = require(\"../Collection.js\");\nvar require$_DOT__DOT__SLASH_Feature_DOT_js = require(\"../Feature.js\");\nvar require$_DOT__DOT__SLASH_coordinate_DOT_js = require(\"../coordinate.js\");\nvar require$_DOT__DOT__SLASH_extent_DOT_js = require(\"../extent.js\");\nvar require$_DOT__DOT__SLASH_geom_SLASH_LineString_DOT_js = require(\"../geom/LineString.js\");\nvar require$_DOT__DOT__SLASH_geom_SLASH_Point_DOT_js = require(\"../geom/Point.js\");\nvar require$_DOT__DOT__SLASH_geom_SLASH_flat_SLASH_geodesic_DOT_js = require(\"../geom/flat/geodesic.js\");\nvar require$_DOT__DOT__SLASH_math_DOT_js = require(\"../math.js\");\nvar require$_DOT__DOT__SLASH_proj_DOT_js = require(\"../proj.js\");\nvar require$_DOT__DOT__SLASH_render_SLASH_EventType_DOT_js = require(\"../render/EventType.js\");\nvar require$_DOT__DOT__SLASH_render_DOT_js = require(\"../render.js\");\nvar require$_DOT__DOT__SLASH_source_SLASH_Vector_DOT_js = require(\"../source/Vector.js\");\nvar require$_DOT__DOT__SLASH_style_SLASH_Fill_DOT_js = require(\"../style/Fill.js\");\nvar require$_DOT__DOT__SLASH_style_SLASH_Stroke_DOT_js = require(\"../style/Stroke.js\");\nvar require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js = require(\"../style/Style.js\");\nvar require$_DOT__DOT__SLASH_style_SLASH_Text_DOT_js = require(\"../style/Text.js\");\nvar require$_DOT__SLASH_Vector_DOT_js = require(\"./Vector.js\");\nvar default$$require$_DOT__DOT__SLASH_geom_SLASH_LineString_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_geom_SLASH_LineString_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_Collection_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_Collection_DOT_js);\nvar default$$require$_DOT__SLASH_Vector_DOT_js = require.esmDefault(require$_DOT__SLASH_Vector_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_style_SLASH_Fill_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_style_SLASH_Fill_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_render_SLASH_EventType_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_render_SLASH_EventType_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_geom_SLASH_Point_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_geom_SLASH_Point_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_style_SLASH_Stroke_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_style_SLASH_Stroke_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_style_SLASH_Text_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_style_SLASH_Text_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_source_SLASH_Vector_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_source_SLASH_Vector_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_Feature_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_Feature_DOT_js);\nconst DEFAULT_STROKE_STYLE = new default$$require$_DOT__DOT__SLASH_style_SLASH_Stroke_DOT_js.default({color:\"rgba(0,0,0,0.2)\",});\nconst INTERVALS = [90, 45, 30, 20, 10, 5, 2, 1, 30 / 60, 20 / 60, 10 / 60, 5 / 60, 2 / 60, 1 / 60, 30 / 3600, 20 / 3600, 10 / 3600, 5 / 3600, 2 / 3600, 1 / 3600,];\nclass Graticule extends default$$require$_DOT__SLASH_Vector_DOT_js.default {\n  constructor(options) {\n    options = options ? options : {};\n    const baseOptions = Object.assign({updateWhileAnimating:true, updateWhileInteracting:true, renderBuffer:0,}, options,);\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n    this.projection_ = null;\n    this.maxLat_ = Infinity;\n    this.maxLon_ = Infinity;\n    this.minLat_ = -Infinity;\n    this.minLon_ = -Infinity;\n    this.maxX_ = Infinity;\n    this.maxY_ = Infinity;\n    this.minX_ = -Infinity;\n    this.minY_ = -Infinity;\n    this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n    this.meridians_ = [];\n    this.parallels_ = [];\n    this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n    this.fromLonLatTransform_ = undefined;\n    this.toLonLatTransform_ = undefined;\n    this.projectionCenterLonLat_ = null;\n    this.bottomLeft_ = null;\n    this.bottomRight_ = null;\n    this.topLeft_ = null;\n    this.topRight_ = null;\n    this.meridiansLabels_ = null;\n    this.parallelsLabels_ = null;\n    if (options.showLabels) {\n      this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ? require$_DOT__DOT__SLASH_coordinate_DOT_js.degreesToStringHDMS.bind(this, \"EW\") : options.lonLabelFormatter;\n      this.latLabelFormatter_ = options.latLabelFormatter == undefined ? require$_DOT__DOT__SLASH_coordinate_DOT_js.degreesToStringHDMS.bind(this, \"NS\") : options.latLabelFormatter;\n      this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n      this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n      this.lonLabelStyleBase_ = new default$$require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js.default({text:options.lonLabelStyle !== undefined ? options.lonLabelStyle.clone() : new default$$require$_DOT__DOT__SLASH_style_SLASH_Text_DOT_js.default({font:\"12px Calibri,sans-serif\", textBaseline:\"bottom\", fill:new default$$require$_DOT__DOT__SLASH_style_SLASH_Fill_DOT_js.default({color:\"rgba(0,0,0,1)\",}), stroke:new default$$require$_DOT__DOT__SLASH_style_SLASH_Stroke_DOT_js.default({color:\"rgba(255,255,255,1)\", \n      width:3,}),}),});\n      this.lonLabelStyle_ = feature => {\n        const label = feature.get(\"graticule_label\");\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n      this.latLabelStyleBase_ = new default$$require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js.default({text:options.latLabelStyle !== undefined ? options.latLabelStyle.clone() : new default$$require$_DOT__DOT__SLASH_style_SLASH_Text_DOT_js.default({font:\"12px Calibri,sans-serif\", textAlign:\"right\", fill:new default$$require$_DOT__DOT__SLASH_style_SLASH_Fill_DOT_js.default({color:\"rgba(0,0,0,1)\",}), stroke:new default$$require$_DOT__DOT__SLASH_style_SLASH_Stroke_DOT_js.default({color:\"rgba(255,255,255,1)\", \n      width:3,}),}),});\n      this.latLabelStyle_ = feature => {\n        const label = feature.get(\"graticule_label\");\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n      this.addEventListener(default$$require$_DOT__DOT__SLASH_render_SLASH_EventType_DOT_js.default.POSTRENDER, this.drawLabels_.bind(this));\n    }\n    this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\n    this.setSource(new default$$require$_DOT__DOT__SLASH_source_SLASH_Vector_DOT_js.default({loader:this.loaderFunction.bind(this), strategy:this.strategyFunction.bind(this), features:new default$$require$_DOT__DOT__SLASH_Collection_DOT_js.default(), overlaps:false, useSpatialIndex:false, wrapX:options.wrapX,}),);\n    this.featurePool_ = [];\n    this.lineStyle_ = new default$$require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js.default({stroke:this.strokeStyle_,});\n    this.loadedExtent_ = null;\n    this.renderedExtent_ = null;\n    this.renderedResolution_ = null;\n    this.setRenderOrder(null);\n  }\n  strategyFunction(extent, resolution) {\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      (0,require$_DOT__DOT__SLASH_extent_DOT_js.wrapX)(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if ((0,require$_DOT__DOT__SLASH_extent_DOT_js.approximatelyEquals)(this.loadedExtent_, realWorldExtent, resolution)) {\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n    const layerExtent = this.getExtent() || [-Infinity, -Infinity, Infinity, Infinity,];\n    const renderExtent = (0,require$_DOT__DOT__SLASH_extent_DOT_js.getIntersection)(layerExtent, extent);\n    if (this.renderedExtent_ && (0,require$_DOT__DOT__SLASH_extent_DOT_js.equals)(this.renderedExtent_, renderExtent) && this.renderedResolution_ === resolution) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n    if ((0,require$_DOT__DOT__SLASH_extent_DOT_js.isEmpty)(renderExtent)) {\n      return;\n    }\n    const center = (0,require$_DOT__DOT__SLASH_extent_DOT_js.getCenter)(renderExtent);\n    const squaredTolerance = resolution * resolution / 4;\n    const updateProjectionInfo = !this.projection_ || !(0,require$_DOT__DOT__SLASH_proj_DOT_js.equivalent)(this.projection_, projection);\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new default$$require$_DOT__DOT__SLASH_Feature_DOT_js.default();\n      this.featurePool_.push(feature);\n    }\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index,);\n    if ((0,require$_DOT__DOT__SLASH_extent_DOT_js.intersects)(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {geom:new default$$require$_DOT__DOT__SLASH_geom_SLASH_Point_DOT_js.default([]), text:text,};\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index,);\n    if ((0,require$_DOT__DOT__SLASH_extent_DOT_js.intersects)(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {geom:new default$$require$_DOT__DOT__SLASH_geom_SLASH_Point_DOT_js.default([]), text:text,};\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = (0,require$_DOT__DOT__SLASH_extent_DOT_js.getCenter)(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [rotationCenter[0] - unrotatedWidth / 2, rotationCenter[1] - unrotatedHeight / 2, rotationCenter[0] + unrotatedWidth / 2, rotationCenter[1] + unrotatedHeight / 2,];\n    }\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = (0,require$_DOT__DOT__SLASH_extent_DOT_js.getWidth)(projectionExtent);\n    if (this.getSource().getWrapX() && this.projection_.canWrapX() && !(0,require$_DOT__DOT__SLASH_extent_DOT_js.containsExtent)(projectionExtent, extent)) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = (0,require$_DOT__DOT__SLASH_render_DOT_js.getVectorContext)(event);\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set(\"graticule_label\", this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (world === startWorld && labelsAtStart || world === endWorld && !labelsAtStart) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set(\"graticule_label\", this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = (0,require$_DOT__DOT__SLASH_extent_DOT_js.getWidth)(projectionExtent);\n    if (this.getSource().getWrapX() && this.projection_.canWrapX() && !(0,require$_DOT__DOT__SLASH_extent_DOT_js.containsExtent)(projectionExtent, extent)) {\n      if ((0,require$_DOT__DOT__SLASH_extent_DOT_js.getWidth)(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n    const validCenterP = [(0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(center[0], this.minX_, this.maxX_), (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(center[1], this.minY_, this.maxY_),];\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] = Math.abs(this.maxLat_) >= Math.abs(this.minLat_) ? this.maxLat_ : this.minLat_;\n    }\n    let centerLon = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [(0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(extent[0], this.minX_, this.maxX_), (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(extent[1], this.minY_, this.maxY_), (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(extent[2], this.minX_, this.maxX_), (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(extent[3], this.minY_, this.maxY_),];\n    }\n    const validExtent = (0,require$_DOT__DOT__SLASH_extent_DOT_js.applyTransform)(validExtentP, this.toLonLatTransform_, undefined, 8,);\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n    if (!wrapX) {\n      if ((0,require$_DOT__DOT__SLASH_extent_DOT_js.containsCoordinate)(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if ((0,require$_DOT__DOT__SLASH_extent_DOT_js.containsCoordinate)(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if ((0,require$_DOT__DOT__SLASH_extent_DOT_js.containsCoordinate)(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if ((0,require$_DOT__DOT__SLASH_extent_DOT_js.containsCoordinate)(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n      maxLat = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(maxLat, centerLat, this.maxLat_);\n      maxLon = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(maxLon, centerLon, this.maxLon_);\n      minLat = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(minLat, this.minLat_, centerLat);\n      minLon = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(minLon, this.minLon_, centerLon);\n    }\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(centerLon, this.minLon_, this.maxLon_);\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx,);\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx,);\n      }\n    }\n    lon = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(centerLon, this.minLon_, this.maxLon_);\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx,);\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx,);\n      }\n    }\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(centerLat, this.minLat_, this.maxLat_);\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx,);\n    }\n    lat = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(centerLat, this.minLat_, this.maxLat_);\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx,);\n    }\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    const p1 = [];\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(this.intervals_[i] / 2, 0, 90);\n      const clampedLat = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = (0,require$_DOT__DOT__SLASH_geom_SLASH_flat_SLASH_geodesic_DOT_js.meridian)(lon, minLat, maxLat, this.projection_, squaredTolerance,);\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new default$$require$_DOT__DOT__SLASH_geom_SLASH_LineString_DOT_js.default(flatCoordinates, \"XY\");\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates(\"XY\", flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_, clampedBottom, clampedTop,);\n    const coordinate0 = flatCoordinates[bottom - 1] + (flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) * (lat - flatCoordinates[bottom]) / (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n  getMeridians() {\n    return this.meridians_;\n  }\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = (0,require$_DOT__DOT__SLASH_geom_SLASH_flat_SLASH_geodesic_DOT_js.parallel)(lat, minLon, maxLon, this.projection_, squaredTolerance,);\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new default$$require$_DOT__DOT__SLASH_geom_SLASH_LineString_DOT_js.default(flatCoordinates, \"XY\");\n    } else {\n      lineString.setFlatCoordinates(\"XY\", flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_, clampedLeft, clampedRight,);\n    const coordinate1 = flatCoordinates[left + 1] + (flatCoordinates[right + 1] - flatCoordinates[left + 1]) * (lon - flatCoordinates[left]) / (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n  getParallels() {\n    return this.parallels_;\n  }\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = (0,require$_DOT__DOT__SLASH_proj_DOT_js.get)(\"EPSG:4326\");\n    const worldExtent = projection.getWorldExtent();\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n    const toLonLatTransform = (0,require$_DOT__DOT__SLASH_proj_DOT_js.getTransform)(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function(coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(coordinates, output, dimension,);\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n    this.fromLonLatTransform_ = (0,require$_DOT__DOT__SLASH_proj_DOT_js.getTransform)(epsg4326Projection, projection);\n    const worldExtentP = (0,require$_DOT__DOT__SLASH_extent_DOT_js.applyTransform)([this.minLon_, this.minLat_, this.maxLon_, this.maxLat_], this.fromLonLatTransform_, undefined, 8,);\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n    this.projectionCenterLonLat_ = this.toLonLatTransform_((0,require$_DOT__DOT__SLASH_extent_DOT_js.getCenter)(projection.getExtent()),);\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] = Math.abs(this.maxLat_) >= Math.abs(this.minLat_) ? this.maxLat_ : this.minLat_;\n    }\n    this.projection_ = projection;\n  }\n}\nconst $$default = Graticule;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$_DOT__DOT__SLASH_Collection_DOT_js","require$_DOT__DOT__SLASH_Feature_DOT_js","require$_DOT__DOT__SLASH_coordinate_DOT_js","require$_DOT__DOT__SLASH_extent_DOT_js","require$_DOT__DOT__SLASH_geom_SLASH_LineString_DOT_js","require$_DOT__DOT__SLASH_geom_SLASH_Point_DOT_js","require$_DOT__DOT__SLASH_geom_SLASH_flat_SLASH_geodesic_DOT_js","require$_DOT__DOT__SLASH_math_DOT_js","require$_DOT__DOT__SLASH_proj_DOT_js","require$_DOT__DOT__SLASH_render_SLASH_EventType_DOT_js","require$_DOT__DOT__SLASH_render_DOT_js","require$_DOT__DOT__SLASH_source_SLASH_Vector_DOT_js","require$_DOT__DOT__SLASH_style_SLASH_Fill_DOT_js","require$_DOT__DOT__SLASH_style_SLASH_Stroke_DOT_js","require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js","require$_DOT__DOT__SLASH_style_SLASH_Text_DOT_js","require$_DOT__SLASH_Vector_DOT_js","default$$require$_DOT__DOT__SLASH_geom_SLASH_LineString_DOT_js","esmDefault","default$$require$_DOT__DOT__SLASH_Collection_DOT_js","default$$require$_DOT__SLASH_Vector_DOT_js","default$$require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js","default$$require$_DOT__DOT__SLASH_style_SLASH_Fill_DOT_js","default$$require$_DOT__DOT__SLASH_render_SLASH_EventType_DOT_js","default$$require$_DOT__DOT__SLASH_geom_SLASH_Point_DOT_js","default$$require$_DOT__DOT__SLASH_style_SLASH_Stroke_DOT_js","default$$require$_DOT__DOT__SLASH_style_SLASH_Text_DOT_js","default$$require$_DOT__DOT__SLASH_source_SLASH_Vector_DOT_js","default$$require$_DOT__DOT__SLASH_Feature_DOT_js","DEFAULT_STROKE_STYLE","color","INTERVALS","Graticule","constructor","options","baseOptions","assign","updateWhileAnimating","updateWhileInteracting","renderBuffer","maxLines","strokeStyle","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","projection_","maxLon_","maxLat_","Infinity","minLon_","minLat_","maxY_","maxX_","minY_","minX_","targetSize_","undefined","maxLines_","meridians_","parallels_","strokeStyle_","toLonLatTransform_","fromLonLatTransform_","parallelsLabels_","meridiansLabels_","topRight_","topLeft_","bottomRight_","bottomLeft_","projectionCenterLonLat_","lonLabelFormatter_","degreesToStringHDMS","bind","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","text","clone","font","textBaseline","fill","stroke","width","lonLabelStyle_","feature","this.lonLabelStyle_","label","getText","setText","latLabelStyleBase_","textAlign","latLabelStyle_","this.latLabelStyle_","addEventListener","POSTRENDER","drawLabels_","intervals_","setSource","loader","loaderFunction","strategy","strategyFunction","features","overlaps","useSpatialIndex","wrapX","featurePool_","lineStyle_","renderedResolution_","renderedExtent_","loadedExtent_","setRenderOrder","extent","resolution","realWorldExtent","slice","getSource","getWrapX","approximatelyEquals","removeLoadedExtent","projection","source","layerExtent","getExtent","renderExtent","getIntersection","equals","isEmpty","center","getCenter","squaredTolerance","equivalent","updateProjectionInfo_","createGraticule_","featureCount","length","push","featuresColl","getFeaturesCollection","clear","i","poolIndex","l","setGeometry","setStyle","addMeridian_","lon","minLat","maxLat","index","lineString","getMeridian_","intersects","geom","addParallel_","lat","minLon","maxLon","getParallel_","event","rotation","frameState","viewState","size","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","endWorld","startWorld","labelsAtStart","projectionExtent","worldWidth","getWidth","canWrapX","containsExtent","Math","floor","ceil","abs","PI","vectorContext","getVectorContext","world","textPoint","translate","rotate","getMeridianPoint_","set","drawFeature","getParallelPoint_","interval","getInterval_","validCenterP","clamp","centerLonLat","isNaN","centerLon","centerLat","validExtentP","validExtent","applyTransform","containsCoordinate","idx","cnt","max","min","target","pow","p1","p2","ii","delta","clampedLat","flatCoordinates","meridian","setFlatCoordinates","changed","getFlatCoordinates","bottom","top","clampedBottom","clampedTop","point","setCoordinates","coordinate","getMeridians","parallel","left","right","clampedLeft","clampedRight","getParallels","epsg4326Projection","worldExtent","getWorldExtent","toLonLatTransform","getTransform","split","this.toLonLatTransform_","coordinates","output","dimension","lonLatCoordinates","worldExtentP"]
}
