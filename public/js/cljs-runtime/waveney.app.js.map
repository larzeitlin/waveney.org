{"version":3,"sources":["waveney/app.cljs"],"mappings":"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","names":["waveney.app/JOIN_MAIL_LIST_URL","waveney.app/ANON_API_KEY","waveney.app/validish-email?","email","cljs.core/boolean","cljs.core/re-matches","waveney.app/post-request","url","data","callback","js/fetch","cljs.core/clj->js","js/JSON.stringify","response","p__30587","vec__30588","cljs.core.nth","status","G__30591","G__30592","cljs.core.js__GT_clj","error","js/console.error","waveney.app/header","waveney.app/coming-soon","waveney.app/category","title","waveney.app/categories-list","waveney.app/categories","p1__30593#","cljs.core.map","cljs.core/PersistentVector","cljs.core.into","js/waveney","js/waveney.app","js/waveney.app.email*","waveney.app/email*","reagent.core.atom","waveney.app/send-mail-list-join-req","email-address","_response","cljs.core._EQ_","js/alert","cljs.core/reset!","waveney.app/join-mail-list","cljs.core/deref","p1__30594#","submit-button-disabled?","clojure.string/blank?","waveney.app/ol-map","js/shadow.js.shim.module$ol$Map$default","js/shadow.js.shim.module$ol$layer$Tile$default","js/shadow.js.shim.module$ol$source$OSM$default","js/shadow.js.shim.module$ol$View$default","waveney.app/useful-links","waveney.app/footer","waveney.app/app","waveney.app/init","cljs.core.prn","reagent.dom.render","js/document.getElementById","js/module$node_modules$ol$proj.useGeographic"],"sourcesContent":["(ns waveney.app\n  (:require [reagent.core :as r]\n            [reagent.dom :as rdom]\n            [clojure.string :as string]\n            [\"ol/proj\" :as ol-proj]\n            [\"ol/layer/Tile$default\" :as ol-Tile]\n            [\"ol/Map$default\" :as ol-Map]\n            [\"ol/source/OSM$default\" :as ol-OSM]\n            [\"ol/View$default\" :as ol-View]))\n\n;; VARS\n(def JOIN_MAIL_LIST_URL \"https://kbscdztdalvuuelcvpjr.supabase.co/rest/v1/mailing_list\")\n(def ANON_API_KEY\n  ;; safe to expose the anon key\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imtic2NkenRkYWx2dXVlbGN2cGpyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE5MDYxMzQsImV4cCI6MjA1NzQ4MjEzNH0.dVmJYtm8RtCrea6yDt9CXe128H94DyU1XoK-EfHfqQQ\")\n\n;; utils\n\n(defn validish-email? [email]\n  (boolean (re-matches #\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\" email)))\n\n(defn post-request [url data callback]\n  (-> (js/fetch url\n                (clj->js {:method \"POST\"\n                          :headers {\"Content-Type\" \"application/json\"\n                                    \"apikey\" ANON_API_KEY\n                                    \"Prefer\" \"return=minimal\"}\n                          :body (js/JSON.stringify (clj->js data))}))\n      (.then (fn [response]\n               [response.status response.json]))\n      (.then (fn [[status data]]\n               (callback status (js->clj data :keywordize-keys true))))\n      (.catch (fn [error]\n                (js/console.error \"Error:\" error)))))\n\n;; Define our components\n(defn header []\n  [:header\n   [:h1 \"waveney.org\"]])\n\n(defn coming-soon []\n  [:div.coming-soon\n   [:h2 \"Coming Soon\"]\n   [:p \"Meandering through the ecology, culture and history of the Waveney Valley region.\"\n    [:br]\n    \"\u2022\"\n    [:br]\n    \"A homegrown online hub away from the corporate web.\"\n    [:br]\n    \"\u2022\"\n    [:br]\n    \"To contribute please reach out with the contact link below, or sign up to our mailing list for updates.\"]])\n\n(defn category [title]\n  [:div.category\n   [:h3 title]])\n\n(def categories-list\n  [\"Wildlife\"\n   \"History\"\n   \"Folklore\"\n   \"Trails\"\n   \"Music\"\n   \"Art\"\n   \"Activities\"\n   \"Pubs\"\n   \"Events\"\n   \"Ecology\"\n   \"Photographs\"])\n\n(defn categories []\n  (->> categories-list\n       (map #(vector category %))\n       (into [:div.categories])))\n\n(defonce email* (r/atom \"\"))\n\n(defn send-mail-list-join-req [email-address]\n  (let [callback (fn [status _response]\n                   (cond\n                     (= status 409)\n                     (js/alert \"email address already added\")\n                     (= status 201)\n                     (js/alert \"signed you up\"))\n                   (reset! email* \"\"))]\n    (post-request JOIN_MAIL_LIST_URL\n                  {:email_address email-address\n                   :subscribed true}\n                  callback)))\n\n(defn join-mail-list []\n  (let [email @email*\n        submit-button-disabled? (not (validish-email? email))]\n    [:div.join\n     [:h3 \"Sign up to stay updated\"]\n     [:input {:type \"email\"\n              :id \"email\"\n              :name \"email\"\n              :value email\n              :on-change #(reset! email* (-> % .-target .-value))\n              :placeholder \"enter email address\"}]\n     [:button {:on-click #(send-mail-list-join-req email)\n               :disabled submit-button-disabled?\n               :style {:background-color (cond\n                                           (string/blank? email) \"gray\"\n                                           submit-button-disabled? \"gray\"\n                                           :else \"green\")}}\n      \"Submit\"]]))\n\n(defn ol-map []\n  (ol-Map.\n   (clj->js\n    {:layers [(ol-Tile.\n               (clj->js {:source (ol-OSM.)}))]\n     :target \"map\"\n     :view (ol-View.\n            (clj->js {:center\n                      [1.2375777300280788,\n                       52.468247948753316]\n                      :zoom 10}))})))\n\n(defn useful-links []\n  [:div.useful-links\n   [:h3 \"Useful Links\"]\n   [:ul\n    [:li\n     [:a {:href \"https://www.riverwaveneytrust.org/\"} \"River Waveney Trust (Conservation and Restoration)\"]]\n    [:li\n     [:a {:href \"https://visitwaveneyvalley.co.uk/\"} \"Visit Waveney Valley (tourism information)\"]]\n    [:li\n     [:a {:href \"https://visitwaveneyvalley.co.uk/maps/\"} \"Visit Waveney Valley - trail maps\"]]\n    [:li\n     [:a {:href \"https://www.suffolkwildlifetrust.org/WaLOR\"} \"Waveney & Little Ouse Recovery Project (Restoration)\"]]\n    [:li\n     [:a {:href \"https://www.nationalparks.uk/2024/09/30/discover-folklore-of-the-broads/\"} \"National Parks UK - Folklore of the Broads\"]]\n    [:li\n     [:a {:href \"https://www.wilcuma.org.uk/east-anglia/the-south-folk-of-the-east-angles/\"} \"The South Folk of the East Angles (Anglo-Saxon History)\"]]\n    [:li\n     [:a {:href \"https://www.broads-authority.gov.uk/boating/navigating-the-broads/water-depths-and-navigation-notes/river-waveney\"} \"Broads Authority - River Waveney Depth and Navigation Notes\"]]\n    [:li\n     [:a {:href \"https://lfw-prdg.aws.defra.cloud/river-and-sea-levels/target-area/054WACDV3B?group=rainfall&v=map-live&lyr=ri,gr,mv&ext=0.726202,51.976492,1.825489,53.258732&fid=stations.9620\"} \"DEFRA - Water Level Gauges (interactive map)\"]]\n    [:li\n     [:a {:href \"https://www.eatmt.org.uk/waveney-songs/\"} \"East Anglian Traditional Music - Waveney Songs Community Project\"]]\n    [:li\n     [:a {:href \"https://suffolk.camra.org.uk/\"} \"Suffolk Real Ale Pubs (interactive map)\"]]]])\n\n(defn footer []\n  [:footer\n   [:p \"\u00a9 2025 Waveney.org\" \"  \"\n    [:a {:href \"mailto:info@waveney.org\"}\n     \"Contact us\"]]])\n\n;; Main app component\n(defn app []\n  [:div\n   [header]\n   [:div.container\n    [coming-soon]\n    [:div {:id \"map\"}]\n    [categories]\n    [useful-links]\n    [join-mail-list]]\n   [footer]])\n\n;; Render the app\n(defn init []\n  (prn \"init\")\n  (rdom/render [app]\n               (js/document.getElementById \"app\"))\n\n  (ol-proj/useGeographic.)\n  (ol-map))\n"]}