{
"version":3,
"file":"module$node_modules$ol$renderer$canvas$TileLayer.js",
"lineCount":322,
"mappings":"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",
"sources":["node_modules/ol/renderer/canvas/TileLayer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$renderer$canvas$TileLayer\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_DataTile_DOT_js = require(\"../../DataTile.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_ImageTile_DOT_js = require(\"../../ImageTile.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileRange_DOT_js = require(\"../../TileRange.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js = require(\"../../TileState.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js = require(\"../../array.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js = require(\"../../extent.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js = require(\"../../proj.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_reproj_SLASH_Tile_DOT_js = require(\"../../reproj/Tile.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_size_DOT_js = require(\"../../size.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_structs_SLASH_LRUCache_DOT_js = require(\"../../structs/LRUCache.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_tilecoord_DOT_js = require(\"../../tilecoord.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js = require(\"../../transform.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_util_DOT_js = require(\"../../util.js\");\nvar require$_DOT__SLASH_Layer_DOT_js = require(\"./Layer.js\");\nvar default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_reproj_SLASH_Tile_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH__DOT__DOT__SLASH_reproj_SLASH_Tile_DOT_js);\nvar default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileRange_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileRange_DOT_js);\nvar default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js);\nvar default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_DataTile_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH__DOT__DOT__SLASH_DataTile_DOT_js);\nvar default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_ImageTile_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH__DOT__DOT__SLASH_ImageTile_DOT_js);\nvar default$$require$_DOT__SLASH_Layer_DOT_js = require.esmDefault(require$_DOT__SLASH_Layer_DOT_js);\nvar default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_structs_SLASH_LRUCache_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH__DOT__DOT__SLASH_structs_SLASH_LRUCache_DOT_js);\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${(0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_tilecoord_DOT_js.getKeyZXY)(z, x, y)}`;\n}\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.getIntersection)(extent, (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js.fromUserExtent)(layerState.extent, frameState.viewState.projection),);\n  }\n  const source = layerState.layer.getRenderSource();\n  if (!source.getWrapX()) {\n    const gridExtent = source.getTileGridForProjection(frameState.viewState.projection).getExtent();\n    if (gridExtent) {\n      extent = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.getIntersection)(extent, gridExtent);\n    }\n  }\n  return extent;\n}\nclass CanvasTileLayerRenderer extends default$$require$_DOT__SLASH_Layer_DOT_js.default {\n  constructor(tileLayer, options) {\n    super(tileLayer);\n    options = options || {};\n    this.extentChanged = true;\n    this.renderComplete = false;\n    this.renderedExtent_ = null;\n    this.renderedPixelRatio;\n    this.renderedProjection = null;\n    this.renderedRevision_;\n    this.renderedTiles = [];\n    this.renderedSourceKey_;\n    this.renderedSourceRevision_;\n    this.tempExtent = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.createEmpty)();\n    this.tempTileRange_ = new default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileRange_DOT_js.default(0, 0, 0, 0);\n    this.tempTileCoord_ = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_tilecoord_DOT_js.createOrUpdate)(0, 0, 0);\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    this.tileCache_ = new default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_structs_SLASH_LRUCache_DOT_js.default(cacheSize);\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n  getTileCache() {\n    return this.tileCache_;\n  }\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n    let tile;\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(z, x, y, frameState.pixelRatio, frameState.viewState.projection,);\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n    const layer = this.getLayer();\n    const coordinate = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js.apply)(frameState.pixelToCoordinateTransform, pixel.slice(),);\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!(0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.containsCoordinate)(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n    for (let z = tileGrid.getZForResolution(viewState.resolution); z >= tileGrid.getMinZoom(); --z) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js.default.LOADED) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_size_DOT_js.toSize)(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n      let image;\n      if (tile instanceof default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_ImageTile_DOT_js.default || tile instanceof default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_reproj_SLASH_Tile_DOT_js.default) {\n        image = tile.getImage();\n      } else if (tile instanceof default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_DataTile_DOT_js.default) {\n        image = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_DataTile_DOT_js.asImageLike)(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n      const col = Math.floor(tilePixelRatio * ((coordinate[0] - tileOrigin[0]) / tileResolution - tileCoord[1] * tileSize[0]),);\n      const row = Math.floor(tilePixelRatio * ((tileOrigin[1] - coordinate[1]) / tileResolution - tileCoord[2] * tileSize[1]),);\n      const gutter = Math.round(tilePixelRatio * source.getGutterForProjection(viewState.projection),);\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n    return null;\n  }\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const tileSourceKey = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_util_DOT_js.getUid)(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(initialZ - preload, tileGrid.getMinZoom(), tileGrid.getZForResolution(Math.min(tileLayer.getMaxResolution(), map ? map.getView().getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0)) : tileGrid.getResolution(0),), tileSource.zDirection,),);\n    const rotation = viewState.rotation;\n    const viewport = rotation ? (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.getRotatedViewport)(viewState.center, viewState.resolution, rotation, frameState.size,) : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, this.tempTileRange_,);\n      const tileResolution = tileGrid.getResolution(z);\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (rotation && !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n          if (tile.getState() === default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js.default.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_tilecoord_DOT_js.createOrUpdate)(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([tile, tileSourceKey, tileGrid.getTileCoordCenter(tileCoord), tileResolution,]);\n            }\n          }\n        }\n      }\n    }\n  }\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js.default.LOADED) {\n          tile.endTransition((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_util_DOT_js.getUid)(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(tileCoord, altZ, this.tempTileRange_,);\n    if (!tileRange) {\n      return false;\n    }\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js.default.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n  renderFrame(frameState, target) {\n    let allTilesIdle = true;\n    this.renderComplete = true;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    this.prepareContainer(frameState, target);\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n    const layerExtent = layerState.extent && (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js.fromUserExtent)(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.getIntersection)(frameExtent, (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js.fromUserExtent)(layerState.extent, projection),);\n    }\n    const dx = tileResolution * width / 2 / tilePixelRatio;\n    const dy = tileResolution * height / 2 / tilePixelRatio;\n    const canvasExtent = [viewCenter[0] - dx, viewCenter[1] - dy, viewCenter[0] + dx, viewCenter[1] + dy,];\n    const tilesByZ = {};\n    this.renderedTiles.length = 0;\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(viewState.nextResolution, tileSource.zDirection,);\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(frameState, renderExtent, z - 1, tilesByZ, preload - 1,);\n      }, 0);\n    }\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n    const uid = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_util_DOT_js.getUid)(this);\n    const time = frameState.time;\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js.default.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n      if (tileState === default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js.default.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js.default.IDLE) {\n        allTilesIdle = false;\n      }\n      if (tileState !== default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js.default.ERROR) {\n        this.renderComplete = false;\n      }\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n      const coveredByChildren = this.findAltTiles_(tileGrid, tileCoord, z + 1, tilesByZ,);\n      if (coveredByChildren) {\n        continue;\n      }\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(tileGrid, tileCoord, parentZ, tilesByZ,);\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n    const canvasScale = tileResolution / viewResolution * pixelRatio / tilePixelRatio;\n    const context = this.getRenderContext(frameState);\n    (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js.compose)(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2,);\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n    this.preRender(context, frameState);\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js.ascending);\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection,);\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.getTopLeft)(canvasExtent), currentZ,);\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js.apply)(this.tempTransform, [tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution, tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution,]);\n      const tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js.default.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n        let contextSaved = false;\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if ((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.intersects)([x, y, x + w, y + h], [clip[0], clip[3], clip[4], clip[7]],)) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n    this.renderedResolution = tileResolution;\n    this.extentChanged = !this.renderedExtent_ || !(0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.equals)(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.postRender(this.context, frameState);\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n    if (this.renderComplete) {\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_util_DOT_js.getUid)(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n    if (!this.renderComplete && !allTilesIdle) {\n      frameState.animate = true;\n    }\n    return this.container;\n  }\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(this.tileCache_.highWaterMark, tileCount * 2,);\n  }\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_DataTile_DOT_js.default) {\n      image = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_DataTile_DOT_js.asImageLike)(tile.getData());\n      if (!image) {\n        throw new Error(\"Rendering array data is not yet supported\");\n      }\n    } else {\n      image = this.getTileImage(tile,);\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_util_DOT_js.getUid)(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha = layerState.opacity * (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h,);\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    const tileSourceKey = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_util_DOT_js.getUid)(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\nconst $$default = CanvasTileLayerRenderer;\n\n};"],
"names":["shadow$provide","global","require","module","exports","addTileToLookup","tilesByZ","tile","z","Set","set","existing","has","add","removeTileFromLookup","delete","getRenderExtent","frameState","extent","layerState","layerStatesArray","layerIndex","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js","getIntersection","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js","fromUserExtent","viewState","projection","source","layer","getRenderSource","getWrapX","gridExtent","getTileGridForProjection","getExtent","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_DataTile_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_ImageTile_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileRange_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_reproj_SLASH_Tile_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_size_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_structs_SLASH_LRUCache_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_tilecoord_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_transform_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_util_DOT_js","require$_DOT__SLASH_Layer_DOT_js","default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_reproj_SLASH_Tile_DOT_js","esmDefault","default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileRange_DOT_js","default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_TileState_DOT_js","default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_DataTile_DOT_js","default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_ImageTile_DOT_js","default$$require$_DOT__SLASH_Layer_DOT_js","default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_structs_SLASH_LRUCache_DOT_js","CanvasTileLayerRenderer","constructor","tileLayer","options","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision_","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","createEmpty","tempTileRange_","tempTileCoord_","createOrUpdate","cacheSize","undefined","tileCache_","maxStaleKeys","getTileCache","getOrCreateTile","x","y","tileCache","tileSource","getLayer","getSource","getKey","sourceKey","getKeyZXY","containsKey","cacheKey","getTile","pixelRatio","getData","pixel","coordinate","apply","pixelToCoordinateTransform","slice","layerExtent","containsCoordinate","tileGrid","tilePixelRatio","getTilePixelRatio","getZForResolution","resolution","getMinZoom","tileCoord","getTileCoordForCoordAndZ","getState","LOADED","tileOrigin","getOrigin","tileSize","toSize","getTileSize","tileResolution","getResolution","image","getImage","asImageLike","col","Math","floor","row","gutter","round","getGutterForProjection","getImageData","prepareFrame","clear","sourceRevision","getRevision","enqueueTiles","initialZ","preload","tileSourceKey","getUid","wantedTiles","map","getMapInternal","minZ","max","min","getMaxResolution","getView","getResolutionForZoom","zDirection","viewport","rotation","getRotatedViewport","center","size","tileRange","getTileRangeForExtentAndZ","minX","maxX","minY","maxY","tileCoordIntersectsViewport","added","tileQueueKey","IDLE","tileQueue","isKeyQueued","enqueue","getTileCoordCenter","findStaleTile_","staleKeys","getStaleKeys","i","length","peek","endTransition","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","loaded","renderFrame","target","allTilesIdle","viewResolution","viewCenter","prependStaleKey","frameExtent","prepareContainer","width","context","canvas","height","dx","dy","canvasExtent","getPreload","nextExtent","targetZ","nextResolution","renderExtent","setTimeout","container","uid","time","tileState","EMPTY","getAlpha","alpha","hasStaleTile","ERROR","animate","coveredByChildren","minZoom","parentZ","coveredByParent","canvasScale","getRenderContext","compose","tempTransform","clipUnrotated","getInterpolate","imageSmoothingEnabled","preRender","zs","keys","Number","sort","ascending","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","currentResolution","originTileCoord","getTopLeft","originTileExtent","getTileCoordExtent","origin","tileGutter","xIndex","yIndex","w","nextX","h","nextY","transition","contextSaved","currentClip","ii","clip","intersects","save","beginPath","moveTo","lineTo","push","drawTile","restore","unshift","updateUsedTiles","usedTiles","renderedResolution","equals","postRender","postRenderFunctions","postRenderFunction","tilesCount","updateCacheSize","expireCache","tileCount","highWaterMark","Error","getTileImage","opacity","alphaChanged","globalAlpha","drawImage"]
}
