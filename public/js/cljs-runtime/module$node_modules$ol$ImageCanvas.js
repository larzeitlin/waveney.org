shadow$provide.module$node_modules$ol$ImageCanvas = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  module = require("module$node_modules$ol$Image");
  global = require("module$node_modules$ol$ImageState");
  module = require.esmDefault(module);
  var default$$require$_DOT__SLASH_ImageState_DOT_js = require.esmDefault(global);
  class ImageCanvas extends module.default {
    constructor(extent, resolution, pixelRatio, canvas, loader) {
      super(extent, resolution, pixelRatio, void 0 !== loader ? default$$require$_DOT__SLASH_ImageState_DOT_js.default.IDLE : default$$require$_DOT__SLASH_ImageState_DOT_js.default.LOADED);
      this.loader_ = void 0 !== loader ? loader : null;
      this.canvas_ = canvas;
      this.error_ = null;
    }
    getError() {
      return this.error_;
    }
    handleLoad_(err) {
      err ? (this.error_ = err, this.state = default$$require$_DOT__SLASH_ImageState_DOT_js.default.ERROR) : this.state = default$$require$_DOT__SLASH_ImageState_DOT_js.default.LOADED;
      this.changed();
    }
    load() {
      this.state == default$$require$_DOT__SLASH_ImageState_DOT_js.default.IDLE && (this.state = default$$require$_DOT__SLASH_ImageState_DOT_js.default.LOADING, this.changed(), this.loader_(this.handleLoad_.bind(this)));
    }
    getImage() {
      return this.canvas_;
    }
  }
  const $$default = ImageCanvas;
};

//# sourceMappingURL=module$node_modules$ol$ImageCanvas.js.map
