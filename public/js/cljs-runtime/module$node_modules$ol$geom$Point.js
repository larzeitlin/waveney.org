shadow$provide.module$node_modules$ol$geom$Point = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  var require$_DOT__DOT__SLASH_extent_DOT_js = require("module$node_modules$ol$extent"), require$_DOT__DOT__SLASH_math_DOT_js = require("module$node_modules$ol$math");
  global = require("module$node_modules$ol$geom$SimpleGeometry");
  var require$_DOT__SLASH_flat_SLASH_deflate_DOT_js = require("module$node_modules$ol$geom$flat$deflate");
  require = require.esmDefault(global);
  class Point extends require.default {
    constructor(coordinates, layout) {
      super();
      this.setCoordinates(coordinates, layout);
    }
    clone() {
      const point = new Point(this.flatCoordinates.slice(), this.layout);
      point.applyProperties(this);
      return point;
    }
    closestPointXY(x, y, closestPoint, minSquaredDistance) {
      const flatCoordinates = this.flatCoordinates;
      x = (0,require$_DOT__DOT__SLASH_math_DOT_js.squaredDistance)(x, y, flatCoordinates[0], flatCoordinates[1]);
      if (x < minSquaredDistance) {
        minSquaredDistance = this.stride;
        for (y = 0; y < minSquaredDistance; ++y) {
          closestPoint[y] = flatCoordinates[y];
        }
        closestPoint.length = minSquaredDistance;
        return x;
      }
      return minSquaredDistance;
    }
    getCoordinates() {
      return this.flatCoordinates.slice();
    }
    computeExtent(extent) {
      return (0,require$_DOT__DOT__SLASH_extent_DOT_js.createOrUpdateFromCoordinate)(this.flatCoordinates, extent);
    }
    getType() {
      return "Point";
    }
    intersectsExtent(extent) {
      return (0,require$_DOT__DOT__SLASH_extent_DOT_js.containsXY)(extent, this.flatCoordinates[0], this.flatCoordinates[1]);
    }
    setCoordinates(coordinates, layout) {
      this.setLayout(layout, coordinates, 0);
      this.flatCoordinates || (this.flatCoordinates = []);
      this.flatCoordinates.length = (0,require$_DOT__SLASH_flat_SLASH_deflate_DOT_js.deflateCoordinate)(this.flatCoordinates, 0, coordinates, this.stride);
      this.changed();
    }
  }
  const $$default = Point;
};

//# sourceMappingURL=module$node_modules$ol$geom$Point.js.map
