shadow$provide.module$node_modules$ol$size = function(global, require, module, exports) {
  function buffer(size, num, dest) {
    void 0 === dest && (dest = [0, 0]);
    dest[0] = size[0] + 2 * num;
    dest[1] = size[1] + 2 * num;
    return dest;
  }
  function hasArea(size) {
    return 0 < size[0] && 0 < size[1];
  }
  function scale(size, ratio, dest) {
    void 0 === dest && (dest = [0, 0]);
    dest[0] = size[0] * ratio + 0.5 | 0;
    dest[1] = size[1] * ratio + 0.5 | 0;
    return dest;
  }
  function toSize(size, dest) {
    if (Array.isArray(size)) {
      return size;
    }
    void 0 === dest ? dest = [size, size] : (dest[0] = size, dest[1] = size);
    return dest;
  }
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, buffer:{enumerable:!0, get:function() {
    return buffer;
  }}, hasArea:{enumerable:!0, get:function() {
    return hasArea;
  }}, scale:{enumerable:!0, get:function() {
    return scale;
  }}, toSize:{enumerable:!0, get:function() {
    return toSize;
  }}});
};

//# sourceMappingURL=module$node_modules$ol$size.js.map
