{
"version":3,
"file":"module$node_modules$ol$Image.js",
"lineCount":124,
"mappings":"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",
"sources":["node_modules/ol/Image.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$Image\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, decode:{enumerable:true, get:function() {\n  return decode;\n}}, decodeFallback:{enumerable:true, get:function() {\n  return decodeFallback;\n}}, default:{enumerable:true, get:function() {\n  return $$default;\n}}, listenImage:{enumerable:true, get:function() {\n  return listenImage;\n}}, load:{enumerable:true, get:function() {\n  return load;\n}}});\nvar require$_DOT__SLASH_ImageState_DOT_js = require(\"./ImageState.js\");\nvar require$_DOT__SLASH_events_SLASH_EventType_DOT_js = require(\"./events/EventType.js\");\nvar require$_DOT__SLASH_events_SLASH_Target_DOT_js = require(\"./events/Target.js\");\nvar require$_DOT__SLASH_events_DOT_js = require(\"./events.js\");\nvar require$_DOT__SLASH_functions_DOT_js = require(\"./functions.js\");\nvar require$_DOT__SLASH_has_DOT_js = require(\"./has.js\");\nvar default$$require$_DOT__SLASH_events_SLASH_Target_DOT_js = require.esmDefault(require$_DOT__SLASH_events_SLASH_Target_DOT_js);\nvar default$$require$_DOT__SLASH_ImageState_DOT_js = require.esmDefault(require$_DOT__SLASH_ImageState_DOT_js);\nvar default$$require$_DOT__SLASH_events_SLASH_EventType_DOT_js = require.esmDefault(require$_DOT__SLASH_events_SLASH_EventType_DOT_js);\nclass ImageWrapper extends default$$require$_DOT__SLASH_events_SLASH_Target_DOT_js.default {\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n    this.extent = extent;\n    this.pixelRatio_ = pixelRatio;\n    this.resolution = resolution;\n    this.state = typeof stateOrLoader === \"function\" ? default$$require$_DOT__SLASH_ImageState_DOT_js.default.IDLE : stateOrLoader;\n    this.image_ = null;\n    this.loader = typeof stateOrLoader === \"function\" ? stateOrLoader : null;\n  }\n  changed() {\n    this.dispatchEvent(default$$require$_DOT__SLASH_events_SLASH_EventType_DOT_js.default.CHANGE);\n  }\n  getExtent() {\n    return this.extent;\n  }\n  getImage() {\n    return this.image_;\n  }\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n  getResolution() {\n    return this.resolution;\n  }\n  getState() {\n    return this.state;\n  }\n  load() {\n    if (this.state == default$$require$_DOT__SLASH_ImageState_DOT_js.default.IDLE) {\n      if (this.loader) {\n        this.state = default$$require$_DOT__SLASH_ImageState_DOT_js.default.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution) ? resolution[0] : resolution;\n        (0,require$_DOT__SLASH_functions_DOT_js.toPromise)(() => this.loader(this.getExtent(), requestResolution, this.getPixelRatio(),),).then(image => {\n          if (\"image\" in image) {\n            this.image_ = image.image;\n          }\n          if (\"extent\" in image) {\n            this.extent = image.extent;\n          }\n          if (\"resolution\" in image) {\n            this.resolution = image.resolution;\n          }\n          if (\"pixelRatio\" in image) {\n            this.pixelRatio_ = image.pixelRatio;\n          }\n          if (image instanceof HTMLImageElement || require$_DOT__SLASH_has_DOT_js.CREATE_IMAGE_BITMAP && image instanceof ImageBitmap || image instanceof HTMLCanvasElement || image instanceof HTMLVideoElement) {\n            this.image_ = image;\n          }\n          this.state = default$$require$_DOT__SLASH_ImageState_DOT_js.default.LOADED;\n        }).catch(error => {\n          this.state = default$$require$_DOT__SLASH_ImageState_DOT_js.default.ERROR;\n          console.error(error);\n        }).finally(() => this.changed());\n      }\n    }\n  }\n  setImage(image) {\n    this.image_ = image;\n  }\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\nfunction listenImage(image, loadHandler, errorHandler) {\n  const img = image;\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n  const listenerKeys = [(0,require$_DOT__SLASH_events_DOT_js.listenOnce)(img, default$$require$_DOT__SLASH_events_SLASH_EventType_DOT_js.default.LOAD, function() {\n    loaded = true;\n    if (!decoding) {\n      loadHandler();\n    }\n  }),];\n  if (img.src && require$_DOT__SLASH_has_DOT_js.IMAGE_DECODE) {\n    decoding = true;\n    img.decode().then(function() {\n      if (listening) {\n        loadHandler();\n      }\n    }).catch(function(error) {\n      if (listening) {\n        if (loaded) {\n          loadHandler();\n        } else {\n          errorHandler();\n        }\n      }\n    });\n  } else {\n    listenerKeys.push((0,require$_DOT__SLASH_events_DOT_js.listenOnce)(img, default$$require$_DOT__SLASH_events_SLASH_EventType_DOT_js.default.ERROR, errorHandler));\n  }\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(require$_DOT__SLASH_events_DOT_js.unlistenByKey);\n  };\n}\nfunction load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error(\"Image load error\"));\n    }\n    function unlisten() {\n      image.removeEventListener(\"load\", handleLoad);\n      image.removeEventListener(\"error\", handleError);\n    }\n    image.addEventListener(\"load\", handleLoad);\n    image.addEventListener(\"error\", handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\nfunction decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && require$_DOT__SLASH_has_DOT_js.IMAGE_DECODE ? new Promise((resolve, reject) => image.decode().then(() => resolve(image)).catch(e => image.complete && image.width ? resolve(image) : reject(e),),) : load(image);\n}\nfunction decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && require$_DOT__SLASH_has_DOT_js.IMAGE_DECODE && require$_DOT__SLASH_has_DOT_js.CREATE_IMAGE_BITMAP ? image.decode().then(() => createImageBitmap(image)).catch(e => {\n    if (image.complete && image.width) {\n      return image;\n    }\n    throw e;\n  }) : decodeFallback(image);\n}\nconst $$default = ImageWrapper;\n\n};"],
"names":["shadow$provide","global","require","module","exports","listenImage","image","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","require$_DOT__SLASH_events_DOT_js","listenOnce","default$$require$_DOT__SLASH_events_SLASH_EventType_DOT_js","default","LOAD","src","require$_DOT__SLASH_has_DOT_js","IMAGE_DECODE","decode","then","catch","error","push","ERROR","unlisten","forEach","unlistenByKey","load","Promise","resolve","reject","handleLoad","handleError","Error","removeEventListener","addEventListener","decodeFallback","e","complete","width","CREATE_IMAGE_BITMAP","createImageBitmap","Object","defineProperties","__esModule","enumerable","value","get","$$default","require$_DOT__SLASH_ImageState_DOT_js","require$_DOT__SLASH_events_SLASH_EventType_DOT_js","require$_DOT__SLASH_events_SLASH_Target_DOT_js","require$_DOT__SLASH_functions_DOT_js","default$$require$_DOT__SLASH_events_SLASH_Target_DOT_js","esmDefault","default$$require$_DOT__SLASH_ImageState_DOT_js","ImageWrapper","constructor","extent","resolution","pixelRatio","stateOrLoader","pixelRatio_","state","IDLE","image_","loader","changed","dispatchEvent","CHANGE","getExtent","getImage","getPixelRatio","getResolution","getState","LOADING","requestResolution","Array","isArray","toPromise","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","LOADED","console","finally","setImage","setResolution"]
}
