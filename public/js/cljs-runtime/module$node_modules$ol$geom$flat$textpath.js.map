{
"version":3,
"file":"module$node_modules$ol$geom$flat$textpath.js",
"lineCount":68,
"mappings":"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",
"sources":["node_modules/ol/geom/flat/textpath.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$geom$flat$textpath\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, drawTextOnPath:{enumerable:true, get:function() {\n  return drawTextOnPath;\n}}});\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js = require(\"../../math.js\");\nvar require$_DOT__SLASH_transform_DOT_js = require(\"./transform.js\");\nfunction drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation, keepUpright = true,) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n  let interpolate = segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.lerp)(x1, x2, interpolate);\n  const beginY = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.lerp)(y1, y2, interpolate);\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.lerp)(x1, x2, interpolate);\n  const endY = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.lerp)(y1, y2, interpolate);\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      (0,require$_DOT__SLASH_transform_DOT_js.rotate)(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n  let previousAngle;\n  if (singleSegment) {\n    advance();\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n  text = text.replace(/\\n/g, \" \");\n  for (let i = 0, ii = text.length; i < ii;) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (offset + stride < end && segmentM + segmentLength < startM + charLength + len / 2) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse ? text.substring(ii - iStart, ii - i) : text.substring(iStart, i);\n    interpolate = segmentLength === 0 ? 0 : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.lerp)(x1, x2, interpolate);\n    const y = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.lerp)(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","drawTextOnPath","flatCoordinates","offset","end","stride","text","startM","maxAngle","scale","measureAndCacheTextWidth","font","cache","rotation","keepUpright","advance","x1","x2","y1","y2","segmentM","segmentLength","Math","sqrt","interpolate","beginX","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js","lerp","beginY","startOffset","startLength","endM","endX","endY","reverse","flat","require$_DOT__SLASH_transform_DOT_js","rotate","PI","result","singleSegment","previousAngle","atan2","replace","i","ii","length","angle","undefined","delta","abs","iStart","charLength","len","index","chars","substring","x","y","push","Object","defineProperties","__esModule","enumerable","value","get"]
}
