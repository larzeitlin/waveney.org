{
"version":3,
"file":"module$node_modules$ol$geom$flat$interpolate.js",
"lineCount":92,
"mappings":"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",
"sources":["node_modules/ol/geom/flat/interpolate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$geom$flat$interpolate\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, interpolatePoint:{enumerable:true, get:function() {\n  return interpolatePoint;\n}}, lineStringCoordinateAtM:{enumerable:true, get:function() {\n  return lineStringCoordinateAtM;\n}}, lineStringsCoordinateAtM:{enumerable:true, get:function() {\n  return lineStringsCoordinateAtM;\n}}});\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js = require(\"../../array.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js = require(\"../../math.js\");\nfunction interpolatePoint(flatCoordinates, offset, end, stride, fraction, dest, dimension,) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js.binarySearch)(cumulativeLengths, target);\n    if (index < 0) {\n      t = (target - cumulativeLengths[-index - 2]) / (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] = o === undefined ? NaN : t === undefined ? flatCoordinates[o + i] : (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.lerp)(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\nfunction lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate,) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = lo + hi >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.lerp)(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t,),);\n  }\n  coordinate.push(m);\n  return coordinate;\n}\nfunction lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate,) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate,);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false,);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","interpolatePoint","flatCoordinates","offset","end","stride","fraction","dest","dimension","t","n","o","x1","y1","length","cumulativeLengths","i","x2","y2","Math","sqrt","push","target","index","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js","binarySearch","Array","undefined","NaN","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js","lerp","lineStringCoordinateAtM","m","extrapolate","coordinate","slice","lo","hi","mid","m0","m1","lineStringsCoordinateAtM","ends","interpolate","ii","Object","defineProperties","__esModule","enumerable","value","get"]
}
