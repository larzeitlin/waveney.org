{
"version":3,
"file":"module$node_modules$ol$render$canvas$TextBuilder.js",
"lineCount":230,
"mappings":"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",
"sources":["node_modules/ol/render/canvas/TextBuilder.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$render$canvas$TextBuilder\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, TEXT_ALIGN:{enumerable:true, get:function() {\n  return TEXT_ALIGN;\n}}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_colorlike_DOT_js = require(\"../../colorlike.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js = require(\"../../extent.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_linechunk_DOT_js = require(\"../../geom/flat/linechunk.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_straightchunk_DOT_js = require(\"../../geom/flat/straightchunk.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_util_DOT_js = require(\"../../util.js\");\nvar require$_DOT__DOT__SLASH_canvas_DOT_js = require(\"../canvas.js\");\nvar require$_DOT__SLASH_Builder_DOT_js = require(\"./Builder.js\");\nvar require$_DOT__SLASH_Instruction_DOT_js = require(\"./Instruction.js\");\nvar default$$require$_DOT__SLASH_Instruction_DOT_js = require.esmDefault(require$_DOT__SLASH_Instruction_DOT_js);\nvar default$$require$_DOT__SLASH_Builder_DOT_js = require.esmDefault(require$_DOT__SLASH_Builder_DOT_js);\nconst TEXT_ALIGN = {\"left\":0, \"center\":0.5, \"right\":1, \"top\":0, \"middle\":0.5, \"hanging\":0.2, \"alphabetic\":0.8, \"ideographic\":0.8, \"bottom\":1,};\nclass CanvasTextBuilder extends default$$require$_DOT__SLASH_Builder_DOT_js.default {\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n    this.labels_ = null;\n    this.text_ = \"\";\n    this.textOffsetX_ = 0;\n    this.textOffsetY_ = 0;\n    this.textRotateWithView_ = undefined;\n    this.textKeepUpright_ = undefined;\n    this.textRotation_ = 0;\n    this.textFillState_ = null;\n    this.fillStates = {};\n    this.fillStates[require$_DOT__DOT__SLASH_canvas_DOT_js.defaultFillStyle] = {fillStyle:require$_DOT__DOT__SLASH_canvas_DOT_js.defaultFillStyle};\n    this.textStrokeState_ = null;\n    this.strokeStates = {};\n    this.textState_ = {};\n    this.textStates = {};\n    this.textKey_ = \"\";\n    this.fillKey_ = \"\";\n    this.strokeKey_ = \"\";\n    this.declutterMode_ = undefined;\n    this.declutterImageWithText_ = undefined;\n  }\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === \"\" || !textState || !fillState && !strokeState) {\n      return;\n    }\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n    if (textState.placement === \"line\" && (geometryType == \"LineString\" || geometryType == \"MultiLineString\" || geometryType == \"Polygon\" || geometryType == \"MultiPolygon\")) {\n      if (!(0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.intersects)(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == \"LineString\") {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == \"MultiLineString\") {\n        ends = geometry.getEnds();\n      } else if (geometryType == \"Polygon\") {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == \"MultiPolygon\") {\n        const endss = geometry.getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_linechunk_DOT_js.lineChunk)(repeat * this.resolution, flatCoordinates, flatOffset, ends[o], stride,);\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_straightchunk_DOT_js.matchingChunk)(textState.maxAngle, chunk, 0, chunk.length, 2,);\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch(geometryType) {\n        case \"Point\":\n        case \"MultiPoint\":\n          flatCoordinates = geometry.getFlatCoordinates();\n          break;\n        case \"LineString\":\n          flatCoordinates = geometry.getFlatMidpoint();\n          break;\n        case \"Circle\":\n          flatCoordinates = geometry.getCenter();\n          break;\n        case \"MultiLineString\":\n          flatCoordinates = geometry.getFlatMidpoints();\n          stride = 2;\n          break;\n        case \"Polygon\":\n          flatCoordinates = geometry.getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case \"MultiPolygon\":\n          const interiorPoints = geometry.getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (geometryWidths && (end - begin) / 2 !== flatCoordinates.length / stride) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep = coordinates[(beg + i) * 2] === flatCoordinates[i * stride] && coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n      this.saveTextStates_();\n      const backgroundFill = textState.backgroundFill ? this.createFill(this.fillStyleToState(textState.backgroundFill)) : null;\n      const backgroundStroke = textState.backgroundStroke ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke)) : null;\n      this.beginGeometry(geometry, feature, index);\n      let padding = textState.padding;\n      if (padding != require$_DOT__DOT__SLASH_canvas_DOT_js.defaultPadding && (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.DRAW_IMAGE, begin, end, null, NaN, NaN, NaN, 1, 0, 0, this.textRotateWithView_, this.textRotation_, [1, 1], NaN, this.declutterMode_, this.declutterImageWithText_, padding == require$_DOT__DOT__SLASH_canvas_DOT_js.defaultPadding ? require$_DOT__DOT__SLASH_canvas_DOT_js.defaultPadding : padding.map(function(p) {\n        return p * pixelRatio;\n      }), backgroundFill, backgroundStroke, this.text_, this.textKey_, this.strokeKey_, this.fillKey_, this.textOffsetX_, this.textOffsetY_, geometryWidths,]);\n      const scale = 1 / pixelRatio;\n      const hitDetectionBackgroundFill = backgroundFill ? backgroundFill.slice(0) : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = require$_DOT__DOT__SLASH_canvas_DOT_js.defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.DRAW_IMAGE, begin, end, null, NaN, NaN, NaN, 1, 0, 0, this.textRotateWithView_, this.textRotation_, [scale, scale], NaN, this.declutterMode_, this.declutterImageWithText_, padding, hitDetectionBackgroundFill, backgroundStroke, this.text_, this.textKey_, this.strokeKey_, this.fillKey_ ? require$_DOT__DOT__SLASH_canvas_DOT_js.defaultFillStyle : this.fillKey_, this.textOffsetX_, this.textOffsetY_, geometryWidths,\n      ]);\n      this.endGeometry(feature);\n    }\n  }\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {strokeStyle:strokeState.strokeStyle, lineCap:strokeState.lineCap, lineDashOffset:strokeState.lineDashOffset, lineWidth:strokeState.lineWidth, lineJoin:strokeState.lineJoin, miterLimit:strokeState.miterLimit, lineDash:strokeState.lineDash,};\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {font:textState.font, textAlign:textState.textAlign || require$_DOT__DOT__SLASH_canvas_DOT_js.defaultTextAlign, justify:textState.justify, textBaseline:textState.textBaseline || require$_DOT__DOT__SLASH_canvas_DOT_js.defaultTextBaseline, scale:textState.scale,};\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {fillStyle:fillState.fillStyle,};\n      }\n    }\n  }\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState ? strokeState.lineWidth * Math.abs(textState.scale[0]) / 2 : 0;\n    this.instructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.DRAW_CHARS, begin, end, baseline, textState.overflow, fillKey, textState.maxAngle, pixelRatio, offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1, this.declutterMode_, this.textKeepUpright_,]);\n    this.hitDetectionInstructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.DRAW_CHARS, begin, end, baseline, textState.overflow, fillKey ? require$_DOT__DOT__SLASH_canvas_DOT_js.defaultFillStyle : fillKey, textState.maxAngle, pixelRatio, offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1 / pixelRatio, this.declutterMode_, this.textKeepUpright_,]);\n  }\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = \"\";\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = {};\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_colorlike_DOT_js.asColorLike)(textFillStyle.getColor() || require$_DOT__DOT__SLASH_canvas_DOT_js.defaultFillStyle,);\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = {};\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || require$_DOT__DOT__SLASH_canvas_DOT_js.defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : require$_DOT__DOT__SLASH_canvas_DOT_js.defaultLineDash;\n        strokeState.lineDashOffset = lineDashOffset === undefined ? require$_DOT__DOT__SLASH_canvas_DOT_js.defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || require$_DOT__DOT__SLASH_canvas_DOT_js.defaultLineJoin;\n        strokeState.lineWidth = lineWidth === undefined ? require$_DOT__DOT__SLASH_canvas_DOT_js.defaultLineWidth : lineWidth;\n        strokeState.miterLimit = miterLimit === undefined ? require$_DOT__DOT__SLASH_canvas_DOT_js.defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_colorlike_DOT_js.asColorLike)(textStrokeStyle.getColor() || require$_DOT__DOT__SLASH_canvas_DOT_js.defaultStrokeStyle,);\n      }\n      textState = this.textState_;\n      const font = textStyle.getFont() || require$_DOT__DOT__SLASH_canvas_DOT_js.defaultFont;\n      (0,require$_DOT__DOT__SLASH_canvas_DOT_js.registerFont)(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline = textStyle.getTextBaseline() || require$_DOT__DOT__SLASH_canvas_DOT_js.defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || require$_DOT__DOT__SLASH_canvas_DOT_js.defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || \"\";\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ = textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n      this.strokeKey_ = strokeState ? (typeof strokeState.strokeStyle == \"string\" ? strokeState.strokeStyle : (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_util_DOT_js.getUid)(strokeState.strokeStyle)) + strokeState.lineCap + strokeState.lineDashOffset + \"|\" + strokeState.lineWidth + strokeState.lineJoin + strokeState.miterLimit + \"[\" + strokeState.lineDash.join() + \"]\" : \"\";\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || \"?\") + (textState.repeat || \"?\") + (textState.justify || \"?\") + (textState.textBaseline || \"?\");\n      this.fillKey_ = fillState && fillState.fillStyle ? typeof fillState.fillStyle == \"string\" ? fillState.fillStyle : \"|\" + (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_util_DOT_js.getUid)(fillState.fillStyle) : \"\";\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\nconst $$default = CanvasTextBuilder;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperties","__esModule","enumerable","value","TEXT_ALIGN","get","default","$$default","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_colorlike_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_linechunk_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_straightchunk_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_util_DOT_js","require$_DOT__DOT__SLASH_canvas_DOT_js","require$_DOT__SLASH_Builder_DOT_js","require$_DOT__SLASH_Instruction_DOT_js","default$$require$_DOT__SLASH_Instruction_DOT_js","esmDefault","default$$require$_DOT__SLASH_Builder_DOT_js","CanvasTextBuilder","constructor","tolerance","maxExtent","resolution","pixelRatio","labels_","text_","textOffsetY_","textOffsetX_","textKeepUpright_","textRotateWithView_","undefined","textRotation_","textFillState_","fillStates","defaultFillStyle","fillStyle","textStrokeState_","strokeStates","textState_","textStates","strokeKey_","fillKey_","textKey_","declutterImageWithText_","declutterMode_","finish","instructions","drawText","geometry","feature","index","fillState","strokeState","textState","coordinates","begin","length","geometryType","getType","flatCoordinates","stride","getStride","placement","geometryWidths","overflow","getFlatCoordinates","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","push","interiorPoints","getFlatInteriorPoints","i","ii","end","appendFlatPointCoordinates","beg","filter","w","keep","saveTextStates_","backgroundFill","createFill","fillStyleToState","backgroundStroke","createStroke","strokeStyleToState","beginGeometry","padding","defaultPadding","scale","p0","p1","p2","p3","DRAW_IMAGE","NaN","map","p","hitDetectionBackgroundFill","slice","hitDetectionInstructions","intersects","getExtent","ends","getEnds","endss","getEndss","textAlign","repeat","flatOffset","o","oo","chunks","lineChunk","c","cc","chunk","chunkBegin","chunkEnd","range","matchingChunk","maxAngle","drawChars_","endGeometry","strokeKey","strokeStyle","lineCap","lineDashOffset","lineWidth","lineJoin","miterLimit","lineDash","textKey","font","defaultTextAlign","justify","textBaseline","defaultTextBaseline","fillKey","baseline","offsetY","text","strokeWidth","Math","abs","DRAW_CHARS","setTextStyle","textStyle","sharedData","textFillStyle","getFill","asColorLike","getColor","textStrokeStyle","getStroke","getLineDash","getLineDashOffset","getWidth","getMiterLimit","getLineCap","defaultLineCap","defaultLineDash","defaultLineDashOffset","getLineJoin","defaultLineJoin","defaultLineWidth","defaultMiterLimit","defaultStrokeStyle","getFont","defaultFont","registerFont","textScale","getScaleArray","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","getRotateWithView","textKeepUpright","getKeepUpright","textRotation","getRotation","getText","getUid","join","getDeclutterMode"]
}
