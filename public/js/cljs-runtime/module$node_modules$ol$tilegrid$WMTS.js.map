{
"version":3,
"file":"module$node_modules$ol$tilegrid$WMTS.js",
"lineCount":45,
"mappings":"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",
"sources":["node_modules/ol/tilegrid/WMTS.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$tilegrid$WMTS\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, createFromCapabilitiesMatrixSet:{enumerable:true, get:function() {\n  return createFromCapabilitiesMatrixSet;\n}}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH_proj_DOT_js = require(\"../proj.js\");\nvar require$_DOT__SLASH_TileGrid_DOT_js = require(\"./TileGrid.js\");\nvar default$$require$_DOT__SLASH_TileGrid_DOT_js = require.esmDefault(require$_DOT__SLASH_TileGrid_DOT_js);\nclass WMTSTileGrid extends default$$require$_DOT__SLASH_TileGrid_DOT_js.default {\n  constructor(options) {\n    super({extent:options.extent, origin:options.origin, origins:options.origins, resolutions:options.resolutions, tileSize:options.tileSize, tileSizes:options.tileSizes, sizes:options.sizes,});\n    this.matrixIds_ = options.matrixIds;\n  }\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\nconst $$default = WMTSTileGrid;\nfunction createFromCapabilitiesMatrixSet(matrixSet, extent, matrixLimits,) {\n  const resolutions = [];\n  const matrixIds = [];\n  const origins = [];\n  const tileSizes = [];\n  const sizes = [];\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n  const supportedCRSPropName = \"SupportedCRS\";\n  const matrixIdsPropName = \"TileMatrix\";\n  const identifierPropName = \"Identifier\";\n  const scaleDenominatorPropName = \"ScaleDenominator\";\n  const topLeftCornerPropName = \"TopLeftCorner\";\n  const tileWidthPropName = \"TileWidth\";\n  const tileHeightPropName = \"TileHeight\";\n  const code = matrixSet[supportedCRSPropName];\n  const projection = (0,require$_DOT__DOT__SLASH_proj_DOT_js.get)(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  const switchOriginXY = projection.getAxisOrientation().startsWith(\"ne\");\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n    let matrixAvailable;\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        if (!elt[identifierPropName].includes(\":\")) {\n          return matrixSet[identifierPropName] + \":\" + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution = elt[scaleDenominatorPropName] * 0.28e-3 / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1], elt[topLeftCornerPropName][0],]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],);\n      sizes.push([elt[\"MatrixWidth\"], elt[\"MatrixHeight\"]]);\n    }\n  });\n  return new WMTSTileGrid({extent:extent, origins:origins, resolutions:resolutions, matrixIds:matrixIds, tileSizes:tileSizes, sizes:sizes,});\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","createFromCapabilitiesMatrixSet","matrixSet","extent","matrixLimits","resolutions","matrixIds","origins","tileSizes","sizes","undefined","projection","require$_DOT__DOT__SLASH_proj_DOT_js","get","code","metersPerUnit","getMetersPerUnit","switchOriginXY","getAxisOrientation","startsWith","sort","a","b","forEach","elt","matrixAvailable","length","find","elt_ml","includes","push","resolution","tileWidth","tileHeight","WMTSTileGrid","Object","defineProperties","__esModule","enumerable","value","default","$$default","require$_DOT__SLASH_TileGrid_DOT_js","default$$require$_DOT__SLASH_TileGrid_DOT_js","esmDefault","constructor","options","origin","tileSize","matrixIds_","getMatrixId","z","getMatrixIds"]
}
