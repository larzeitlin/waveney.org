{
"version":3,
"file":"module$node_modules$ol$geom$MultiPoint.js",
"lineCount":78,
"mappings":"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",
"sources":["node_modules/ol/geom/MultiPoint.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$geom$MultiPoint\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH_array_DOT_js = require(\"../array.js\");\nvar require$_DOT__DOT__SLASH_extent_DOT_js = require(\"../extent.js\");\nvar require$_DOT__DOT__SLASH_math_DOT_js = require(\"../math.js\");\nvar require$_DOT__SLASH_Point_DOT_js = require(\"./Point.js\");\nvar require$_DOT__SLASH_SimpleGeometry_DOT_js = require(\"./SimpleGeometry.js\");\nvar require$_DOT__SLASH_flat_SLASH_deflate_DOT_js = require(\"./flat/deflate.js\");\nvar require$_DOT__SLASH_flat_SLASH_inflate_DOT_js = require(\"./flat/inflate.js\");\nvar default$$require$_DOT__SLASH_SimpleGeometry_DOT_js = require.esmDefault(require$_DOT__SLASH_SimpleGeometry_DOT_js);\nvar default$$require$_DOT__SLASH_Point_DOT_js = require.esmDefault(require$_DOT__SLASH_Point_DOT_js);\nclass MultiPoint extends default$$require$_DOT__SLASH_SimpleGeometry_DOT_js.default {\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(layout, coordinates,);\n    } else {\n      this.setCoordinates(coordinates, layout,);\n    }\n  }\n  appendPoint(point) {\n    (0,require$_DOT__DOT__SLASH_array_DOT_js.extend)(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n  clone() {\n    const multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout,);\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < (0,require$_DOT__DOT__SLASH_extent_DOT_js.closestSquaredDistanceXY)(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = (0,require$_DOT__DOT__SLASH_math_DOT_js.squaredDistance)(x, y, flatCoordinates[i], flatCoordinates[i + 1],);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n  getCoordinates() {\n    return (0,require$_DOT__SLASH_flat_SLASH_inflate_DOT_js.inflateCoordinates)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,);\n  }\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new default$$require$_DOT__SLASH_Point_DOT_js.default(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride,), this.layout,);\n  }\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new default$$require$_DOT__SLASH_Point_DOT_js.default(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n  getType() {\n    return \"MultiPoint\";\n  }\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if ((0,require$_DOT__DOT__SLASH_extent_DOT_js.containsXY)(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = (0,require$_DOT__SLASH_flat_SLASH_deflate_DOT_js.deflateCoordinates)(this.flatCoordinates, 0, coordinates, this.stride,);\n    this.changed();\n  }\n}\nconst $$default = MultiPoint;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$_DOT__DOT__SLASH_array_DOT_js","require$_DOT__DOT__SLASH_extent_DOT_js","require$_DOT__DOT__SLASH_math_DOT_js","require$_DOT__SLASH_Point_DOT_js","require$_DOT__SLASH_SimpleGeometry_DOT_js","require$_DOT__SLASH_flat_SLASH_deflate_DOT_js","require$_DOT__SLASH_flat_SLASH_inflate_DOT_js","default$$require$_DOT__SLASH_SimpleGeometry_DOT_js","esmDefault","default$$require$_DOT__SLASH_Point_DOT_js","MultiPoint","constructor","coordinates","layout","Array","isArray","setFlatCoordinates","setCoordinates","appendPoint","point","extend","flatCoordinates","getFlatCoordinates","changed","clone","multiPoint","slice","applyProperties","closestPointXY","x","y","closestPoint","minSquaredDistance","closestSquaredDistanceXY","getExtent","stride","i","ii","length","squaredDistance","j","getCoordinates","inflateCoordinates","getPoint","index","n","getPoints","points","push","getType","intersectsExtent","extent","containsXY","setLayout","deflateCoordinates"]
}
