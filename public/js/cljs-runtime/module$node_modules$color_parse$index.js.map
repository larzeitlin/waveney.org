{
"version":3,
"file":"module$node_modules$color_parse$index.js",
"lineCount":58,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,GAA0D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAClGC,QAAOC,CAAAA,gBAAP,CAAwBF,OAAxB,EAAiC,CAACG,WAAW,CAACC,WAAW,CAAA,CAAZ,EAAkBC,MAAM,CAAA,CAAxB,CAAZ,EAA2CC,QAAQ,CAACF,WAAW,CAAA,CAAZ,EAAkBG,IAAIA,QAAQ,EAAG;AACnH,WAAOC,SAAP;AADmH,GAAjC,CAAnD,CAAjC,CAAA;AAGIC,QAAAA,GAAqBX,OAAA,CAAQ,sCAAR,CAArBW;AACJ,MAAIC,8BAA8BZ,OAAQa,CAAAA,UAAR,CAAmBF,MAAnB,CAAlC;AACA,QAAMD,YAENI,QAAc,CAACC,IAAD,CAAO;AAAA,QACZC,QAAQ,EADI,EACAC,QAAQ,CADR;AAKnB,QAHoB,QAGpB,KAHI,MAAOF,KAGX,IAAoB,QAApB,KAAI,MAAOA,KAAX;AACE,aAAO,CAACG,MAAM,KAAP,EAAcC,OAAO,CAACJ,IAAD,KAAU,EAAV,GAAeA,IAAf,GAAsB,KAAtB,MAAiC,CAAjC,EAAoCA,IAApC,GAA2C,GAA3C,CAArB,EAAsEE,MAAM,CAA5E,CAAP;AADF;AAGAF,QAAA,GAAOK,MAAA,CAAOL,IAAP,CAAaM,CAAAA,WAAb,EAAP;AACA,QAAIT,2BAA4BJ,CAAAA,OAA5B,CAAoCO,IAApC,CAAJ,CAA+C;AAC7CC,WAAA,GAAQJ,2BAA4BJ,CAAAA,OAA5B,CAAoCO,IAApC,CAA0CO,CAAAA,KAA1C,EAAR;AACA,UAAAJ,QAAQ,KAAR;AAF6C,KAA/C,KAGO,KAAa,aAAb,KAAIH,IAAJ;AACLE,WAEA,GAFQ,CAER,EADAC,KACA,GADQ,KACR,EAAAF,KAAA,GAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAR;AAHK,UAIA,KAAgB,GAAhB,KAAID,IAAA,CAAK,CAAL,CAAJ,CAAqB;AACtBQ,UAAAA,IAAOR,IAAKO,CAAAA,KAAL,CAAW,CAAX,CAAPC;AACAC,UAAAA,GAAOD,CAAKE,CAAAA,MAAZD;AAEJP,WAAA,GAAQ,CAAR;AADsB,OAEtB,IAFcO,IAEd,IACER,KACA,GADQ,CAACU,QAAA,CAASH,CAAA,CAAK,CAAL,CAAT,GAAmBA,CAAA,CAAK,CAAL,CAAnB,EAA4B,EAA5B,CAAD,EAAkCG,QAAA,CAASH,CAAA,CAAK,CAAL,CAAT,GAAmBA,CAAA,CAAK,CAAL,CAAnB,EAA4B,EAA5B,CAAlC,EAAmEG,QAAA,CAASH,CAAA,CAAK,CAAL,CAAT,GAAmBA,CAAA,CAAK,CAAL,CAAnB,EAA4B,EAA5B,CAAnE,CACR,EAAa,CAAb,KAAIC,IAAJ,KACEP,KADF,GACUS,QAAA,CAASH,CAAA,CAAK,CAAL,CAAT,GAAmBA,CAAA,CAAK,CAAL,CAAnB,EAA4B,EAA5B,CADV,GAC4C,GAD5C,CAFF,KAMEP,KACA,GADQ,CAACU,QAAA,CAASH,CAAA,CAAK,CAAL,CAAT,GAAmBA,CAAA,CAAK,CAAL,CAAnB,EAA4B,EAA5B,CAAD,EAAkCG,QAAA,CAASH,CAAA,CAAK,CAAL,CAAT,GAAmBA,CAAA,CAAK,CAAL,CAAnB,EAA4B,EAA5B,CAAlC,EAAmEG,QAAA,CAASH,CAAA,CAAK,CAAL,CAAT,GAAmBA,CAAA,CAAK,CAAL,CAAnB,EAA4B,EAA5B,CAAnE,CACR,EAAa,CAAb,KAAIC,IAAJ,KACEP,KADF,GACUS,QAAA,CAASH,CAAA,CAAK,CAAL,CAAT,GAAmBA,CAAA,CAAK,CAAL,CAAnB,EAA4B,EAA5B,CADV,GAC4C,GAD5C,CAPF,CAAA;AAWKP,WAAA,CAAM,CAAN,CAAL,KACEA,KAAA,CAAM,CAAN,CADF,GACa,CADb;AAGKA,WAAA,CAAM,CAAN,CAAL,KACEA,KAAA,CAAM,CAAN,CADF,GACa,CADb;AAGKA,WAAA,CAAM,CAAN,CAAL,KACEA,KAAA,CAAM,CAAN,CADF,GACa,CADb;AAGAE,WAAA,GAAQ,KAAR;AAzB0B,KAArB;AA0BA,OAAIS,CAAJ,GAAQ,wGAAyGC,CAAAA,IAAzG,CAA8Gb,IAA9G,CAAR,KAELG,KA4DA,GA7DWS,CAAAE,CAAE,CAAFA,CACEC,CAAAA,OAAL,CAAa,IAAb,EAAmB,EAAnB,CA4DR,EA3DIC,KA2DJ,GA3DqB,MAAV,KAAAb,KAAA,GAAmB,CAAnB,GAAiC,MAAV,KAAAA,KAAA,GAAmB,CAAnB,GAAuB,CA2DzD,EA1DAF,KA0DA,GA1DQW,CAAA,CAAE,CAAF,CAAKK,CAAAA,IAAL,EAAYC,CAAAA,KAAZ,CAAkB,iBAAlB,CA0DR,EAzDc,OAyDd,KAzDIf,KAyDJ,KAxDEA,KAwDF,GAxDUF,KAAMkB,CAAAA,KAAN,EAwDV,GAtDAlB,KAsDA,GAtDQA,KAAMmB,CAAAA,GAAN,CAAU,QAAQ,CAACC,CAAD,EAAIC,CAAJ,CAAO;AAC/B,YAAwB,GAAxB,KAAID,CAAA,CAAEA,CAAEX,CAAAA,MAAJ,GAAa,CAAb,CAAJ;AAEE,iBADAW,CACA,GADIE,UAAA,CAAWF,CAAX,CACJ,GADoB,GACpB,EAAU,CAAV,KAAIC,CAAJ,GACSD,CADT,GAGc,KAAd,KAAIlB,KAAJ,GACa,GADb,GACSkB,CADT,GAGiB,GAGjB,KAHIlB,KAAA,CAAM,CAAN,CAGJ,IAAiB,GAAjB,KAAIA,KAAA,CAAM,CAAN,CAAJ,IAAwB,CAACmB,CAAzB,GACa,GADb,GACSD,CADT,GAGc,KAAd,KAAIlB,KAAJ,GACa,GADb,GACSkB,CADT,GAGc,KAAd,KAAIlB,KAAJ,GACa,CAAJ,GAAAmB,CAAA,GAAY,GAAZ,GAAQD,CAAR,GAAsB,GAAtB,GAAkBA,CAD3B,GAGiB,GAAjB,KAAIlB,KAAA,CAAM,CAAN,CAAJ,IAAyBmB,CAAzB,GAGc,OAAd,KAAInB,KAAJ,GACa,GADb,GACSkB,CADT,GAGc,OAAd,KAAIlB,KAAJ,GACa,CAAJ,GAAAmB,CAAA,GAAY,GAAZ,GAAQD,CAAR,GAAsB,GAAtB,GAAkBA,CAD3B,GAGOA,CATP,GACSA,CAnBT;AAFF;AA+BA,YAAiB,GAAjB,KAAIlB,KAAA,CAAMmB,CAAN,CAAJ,IAA8B,CAA9B,KAAwBA,CAAxB,IAA+D,GAA/D,KAAmCnB,KAAA,CAAMA,KAAMO,CAAAA,MAAZ,GAAqB,CAArB,CAAnC,CAAoE;AAClE,cAAoBc,IAAAA,EAApB,KAAIC,QAAA,CAASJ,CAAT,CAAJ;AACE,mBAAOI,QAAA,CAASJ,CAAT,CAAP;AADF;AAGA,cAAIA,CAAEK,CAAAA,QAAF,CAAW,KAAX,CAAJ;AACE,mBAAOH,UAAA,CAAWF,CAAX,CAAP;AADF;AAGA,cAAIA,CAAEK,CAAAA,QAAF,CAAW,MAAX,CAAJ;AACE,mBAAuB,GAAvB,GAAOH,UAAA,CAAWF,CAAX,CAAP;AADF;AAGA,cAAIA,CAAEK,CAAAA,QAAF,CAAW,MAAX,CAAJ;AACE,mBAAuB,GAAvB,GAAOH,UAAA,CAAWF,CAAX,CAAP,GAA6B,GAA7B;AADF;AAGA,cAAIA,CAAEK,CAAAA,QAAF,CAAW,KAAX,CAAJ;AACE,mBAAuB,GAAvB,GAAOH,UAAA,CAAWF,CAAX,CAAP,GAA6BM,IAAKC,CAAAA,EAAlC;AADF;AAbkE;AAiBpE,eAAU,MAAV,KAAIP,CAAJ,GACS,CADT,GAGOE,UAAA,CAAWF,CAAX,CAHP;AAjD+B,OAAzB,CAsDR,EAAAnB,KAAA,GAAQD,KAAMS,CAAAA,MAAN,GAAeM,KAAf,GAAsBf,KAAM4B,CAAAA,GAAN,EAAtB,GAAoC,CA9DvC,IA+DI,kBAAmBC,CAAAA,IAAnB,CAAwB9B,IAAxB,CA/DJ,KAgELC,KAGA,GAHQD,IAAK+B,CAAAA,KAAL,CAAW,WAAX,CAAwBX,CAAAA,GAAxB,CAA4B,QAAQ,CAAC5B,KAAD,CAAQ;AAClD,eAAO+B,UAAA,CAAW/B,KAAX,CAAP;AADkD,OAA5C,CAGR,EAAAW,KAAA,GAAQH,IAAK+B,CAAAA,KAAL,CAAW,WAAX,CAAyBC,EAAAA,IAAzB,CAA8B,EAA9B,CAAmC1B,EAAAA,WAAnC,EAAR,IAA4D,KAnEvD,CAAA;AA1BA;AA+FP,WAAO,CAACH,KAAD,EAAQC,OAAOH,KAAf,EAAsBC,KAAtB,CAAP;AA/GmB,GAFrB;AACA,MAAIuB,WAAW,CAACQ,IAAI,CAAL,EAAQC,OAAO,EAAf,EAAmBC,OAAO,GAA1B,EAA+BC,MAAM,GAArC,EAA0CC,KAAK,GAA/C,EAAoDC,OAAO,GAA3D,CAAf;AAPkG,CAAlG;;",
"sources":["node_modules/color-parse/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$color_parse$index\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$color_name = require(\"color-name\");\nvar default$$require$color_name = require.esmDefault(require$color_name);\nconst $$default = parse;\nvar baseHues = {red:0, orange:60, yellow:120, green:180, blue:240, purple:300};\nfunction parse(cstr) {\n  var m, parts = [], alpha = 1, space;\n  if (typeof cstr === \"number\") {\n    return {space:\"rgb\", values:[cstr >>> 16, (cstr & 65280) >>> 8, cstr & 255], alpha:1};\n  }\n  if (typeof cstr === \"number\") {\n    return {space:\"rgb\", values:[cstr >>> 16, (cstr & 65280) >>> 8, cstr & 255], alpha:1};\n  }\n  cstr = String(cstr).toLowerCase();\n  if (default$$require$color_name.default[cstr]) {\n    parts = default$$require$color_name.default[cstr].slice();\n    space = \"rgb\";\n  } else if (cstr === \"transparent\") {\n    alpha = 0;\n    space = \"rgb\";\n    parts = [0, 0, 0];\n  } else if (cstr[0] === \"#\") {\n    var base = cstr.slice(1);\n    var size = base.length;\n    var isShort = size <= 4;\n    alpha = 1;\n    if (isShort) {\n      parts = [parseInt(base[0] + base[0], 16), parseInt(base[1] + base[1], 16), parseInt(base[2] + base[2], 16)];\n      if (size === 4) {\n        alpha = parseInt(base[3] + base[3], 16) / 255;\n      }\n    } else {\n      parts = [parseInt(base[0] + base[1], 16), parseInt(base[2] + base[3], 16), parseInt(base[4] + base[5], 16)];\n      if (size === 8) {\n        alpha = parseInt(base[6] + base[7], 16) / 255;\n      }\n    }\n    if (!parts[0]) {\n      parts[0] = 0;\n    }\n    if (!parts[1]) {\n      parts[1] = 0;\n    }\n    if (!parts[2]) {\n      parts[2] = 0;\n    }\n    space = \"rgb\";\n  } else if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n    var name = m[1];\n    space = name.replace(/a$/, \"\");\n    var dims = space === \"cmyk\" ? 4 : space === \"gray\" ? 1 : 3;\n    parts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/);\n    if (space === \"color\") {\n      space = parts.shift();\n    }\n    parts = parts.map(function(x, i) {\n      if (x[x.length - 1] === \"%\") {\n        x = parseFloat(x) / 100;\n        if (i === 3) {\n          return x;\n        }\n        if (space === \"rgb\") {\n          return x * 255;\n        }\n        if (space[0] === \"h\") {\n          return x * 100;\n        }\n        if (space[0] === \"l\" && !i) {\n          return x * 100;\n        }\n        if (space === \"lab\") {\n          return x * 125;\n        }\n        if (space === \"lch\") {\n          return i < 2 ? x * 150 : x * 360;\n        }\n        if (space[0] === \"o\" && !i) {\n          return x;\n        }\n        if (space === \"oklab\") {\n          return x * 0.4;\n        }\n        if (space === \"oklch\") {\n          return i < 2 ? x * 0.4 : x * 360;\n        }\n        return x;\n      }\n      if (space[i] === \"h\" || i === 2 && space[space.length - 1] === \"h\") {\n        if (baseHues[x] !== undefined) {\n          return baseHues[x];\n        }\n        if (x.endsWith(\"deg\")) {\n          return parseFloat(x);\n        }\n        if (x.endsWith(\"turn\")) {\n          return parseFloat(x) * 360;\n        }\n        if (x.endsWith(\"grad\")) {\n          return parseFloat(x) * 360 / 400;\n        }\n        if (x.endsWith(\"rad\")) {\n          return parseFloat(x) * 180 / Math.PI;\n        }\n      }\n      if (x === \"none\") {\n        return 0;\n      }\n      return parseFloat(x);\n    });\n    alpha = parts.length > dims ? parts.pop() : 1;\n  } else if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n    parts = cstr.match(/([0-9]+)/g).map(function(value) {\n      return parseFloat(value);\n    });\n    space = cstr.match(/([a-z])/ig)?.join(\"\")?.toLowerCase() || \"rgb\";\n  }\n  return {space, values:parts, alpha};\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$color_name","default$$require$color_name","esmDefault","parse","cstr","parts","alpha","space","values","String","toLowerCase","slice","base","size","length","parseInt","m","exec","name","replace","dims","trim","split","shift","map","x","i","parseFloat","undefined","baseHues","endsWith","Math","PI","pop","test","match","join","red","orange","yellow","green","blue","purple"]
}
