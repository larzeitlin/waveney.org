shadow$provide.module$node_modules$ol$interaction$DragRotate = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  var require$_DOT__DOT__SLASH_events_SLASH_condition_DOT_js = require("module$node_modules$ol$events$condition"), require$_DOT__DOT__SLASH_functions_DOT_js = require("module$node_modules$ol$functions"), require$_DOT__DOT__SLASH_rotationconstraint_DOT_js = require("module$node_modules$ol$rotationconstraint");
  global = require("module$node_modules$ol$interaction$Pointer");
  require = require.esmDefault(global);
  class DragRotate extends require.default {
    constructor(options) {
      options = options ? options : {};
      super({stopDown:require$_DOT__DOT__SLASH_functions_DOT_js.FALSE});
      this.condition_ = options.condition ? options.condition : require$_DOT__DOT__SLASH_events_SLASH_condition_DOT_js.altShiftKeysOnly;
      this.lastAngle_ = void 0;
      this.duration_ = void 0 !== options.duration ? options.duration : 250;
    }
    handleDragEvent(mapBrowserEvent) {
      if ((0,require$_DOT__DOT__SLASH_events_SLASH_condition_DOT_js.mouseOnly)(mapBrowserEvent)) {
        var map = mapBrowserEvent.map, view = map.getView();
        view.getConstraints().rotation !== require$_DOT__DOT__SLASH_rotationconstraint_DOT_js.disable && (map = map.getSize(), mapBrowserEvent = mapBrowserEvent.pixel, mapBrowserEvent = Math.atan2(map[1] / 2 - mapBrowserEvent[1], mapBrowserEvent[0] - map[0] / 2), void 0 !== this.lastAngle_ && view.adjustRotationInternal(-(mapBrowserEvent - this.lastAngle_)), this.lastAngle_ = mapBrowserEvent);
      }
    }
    handleUpEvent(mapBrowserEvent) {
      if (!(0,require$_DOT__DOT__SLASH_events_SLASH_condition_DOT_js.mouseOnly)(mapBrowserEvent)) {
        return !0;
      }
      mapBrowserEvent.map.getView().endInteraction(this.duration_);
      return !1;
    }
    handleDownEvent(mapBrowserEvent) {
      return (0,require$_DOT__DOT__SLASH_events_SLASH_condition_DOT_js.mouseOnly)(mapBrowserEvent) ? (0,require$_DOT__DOT__SLASH_events_SLASH_condition_DOT_js.mouseActionButton)(mapBrowserEvent) && this.condition_(mapBrowserEvent) ? (mapBrowserEvent.map.getView().beginInteraction(), this.lastAngle_ = void 0, !0) : !1 : !1;
    }
  }
  const $$default = DragRotate;
};

//# sourceMappingURL=module$node_modules$ol$interaction$DragRotate.js.map
