shadow$provide.module$node_modules$ol$render = function(global, require, module, exports) {
  function toContext(context, options) {
    var canvas = context.canvas;
    options = options ? options : {};
    const pixelRatio = options.pixelRatio || require$_DOT__SLASH_has_DOT_js.DEVICE_PIXEL_RATIO;
    if (options = options.size) {
      canvas.width = options[0] * pixelRatio, canvas.height = options[1] * pixelRatio, canvas.style.width = options[0] + "px", canvas.style.height = options[1] + "px";
    }
    canvas = [0, 0, canvas.width, canvas.height];
    options = (0,require$_DOT__SLASH_transform_DOT_js.scale)((0,require$_DOT__SLASH_transform_DOT_js.create)(), pixelRatio, pixelRatio);
    return new default$$require$_DOT__SLASH_render_SLASH_canvas_SLASH_Immediate_DOT_js.default(context, pixelRatio, canvas, options, 0);
  }
  function getVectorContext(event) {
    if (!(event.context instanceof CanvasRenderingContext2D)) {
      throw Error("Only works for render events from Canvas 2D layers");
    }
    var a = event.inversePixelTransform[0], b = event.inversePixelTransform[1];
    a = Math.sqrt(a * a + b * b);
    b = event.frameState;
    const transform = (0,require$_DOT__SLASH_transform_DOT_js.multiply)(event.inversePixelTransform.slice(), b.coordinateToPixelTransform), squaredTolerance = (0,require$_DOT__SLASH_renderer_SLASH_vector_DOT_js.getSquaredTolerance)(b.viewState.resolution, a);
    let userTransform;
    const userProjection = (0,require$_DOT__SLASH_proj_DOT_js.getUserProjection)();
    userProjection && (userTransform = (0,require$_DOT__SLASH_proj_DOT_js.getTransformFromProjections)(userProjection, b.viewState.projection));
    return new default$$require$_DOT__SLASH_render_SLASH_canvas_SLASH_Immediate_DOT_js.default(event.context, a, b.extent, transform, b.viewState.rotation, squaredTolerance, userTransform);
  }
  function getRenderPixel(event, pixel) {
    return (0,require$_DOT__SLASH_transform_DOT_js.apply)(event.inversePixelTransform, pixel.slice(0));
  }
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, getRenderPixel:{enumerable:!0, get:function() {
    return getRenderPixel;
  }}, getVectorContext:{enumerable:!0, get:function() {
    return getVectorContext;
  }}, toContext:{enumerable:!0, get:function() {
    return toContext;
  }}});
  var require$_DOT__SLASH_has_DOT_js = require("module$node_modules$ol$has"), require$_DOT__SLASH_proj_DOT_js = require("module$node_modules$ol$proj");
  global = require("module$node_modules$ol$render$canvas$Immediate");
  var require$_DOT__SLASH_renderer_SLASH_vector_DOT_js = require("module$node_modules$ol$renderer$vector"), require$_DOT__SLASH_transform_DOT_js = require("module$node_modules$ol$transform"), default$$require$_DOT__SLASH_render_SLASH_canvas_SLASH_Immediate_DOT_js = require.esmDefault(global);
};

//# sourceMappingURL=module$node_modules$ol$render.js.map
