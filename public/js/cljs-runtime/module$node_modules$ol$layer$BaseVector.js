shadow$provide.module$node_modules$ol$layer$BaseVector = function(global, require, module, exports) {
  function toStyleLike(style) {
    if (void 0 === style) {
      return require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js.createDefaultStyle;
    }
    if (!style) {
      return null;
    }
    if ("function" === typeof style || style instanceof default$$require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js.default) {
      return style;
    }
    if (!Array.isArray(style)) {
      return (0,require$_DOT__DOT__SLASH_render_SLASH_canvas_SLASH_style_DOT_js.flatStylesToStyleFunction)([style]);
    }
    if (0 === style.length) {
      return [];
    }
    const length = style.length;
    var first = style[0];
    if (first instanceof default$$require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js.default) {
      first = Array(length);
      for (var i = 0; i < length; ++i) {
        var candidate = style[i];
        if (!(candidate instanceof default$$require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js.default)) {
          throw Error("Expected a list of style instances");
        }
        first[i] = candidate;
      }
      return first;
    }
    if ("style" in first) {
      first = Array(length);
      for (i = 0; i < length; ++i) {
        candidate = style[i];
        if (!("style" in candidate)) {
          throw Error("Expected a list of rules with a style property");
        }
        first[i] = candidate;
      }
      return (0,require$_DOT__DOT__SLASH_render_SLASH_canvas_SLASH_style_DOT_js.rulesToStyleFunction)(first);
    }
    return (0,require$_DOT__DOT__SLASH_render_SLASH_canvas_SLASH_style_DOT_js.flatStylesToStyleFunction)(style);
  }
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  global = require("module$node_modules$rbush$index");
  var require$_DOT__DOT__SLASH_render_SLASH_canvas_SLASH_style_DOT_js = require("module$node_modules$ol$render$canvas$style"), require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js = require("module$node_modules$ol$style$Style");
  module = require("module$node_modules$ol$layer$Layer");
  var default$$require$rbush = require.esmDefault(global), default$$require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js);
  require = require.esmDefault(module);
  class BaseVectorLayer extends require.default {
    constructor(options) {
      options = options ? options : {};
      const baseOptions = Object.assign({}, options);
      delete baseOptions.style;
      delete baseOptions.renderBuffer;
      delete baseOptions.updateWhileAnimating;
      delete baseOptions.updateWhileInteracting;
      super(baseOptions);
      this.declutter_ = options.declutter ? String(options.declutter) : void 0;
      this.renderBuffer_ = void 0 !== options.renderBuffer ? options.renderBuffer : 100;
      this.style_ = null;
      this.styleFunction_ = void 0;
      this.setStyle(options.style);
      this.updateWhileAnimating_ = void 0 !== options.updateWhileAnimating ? options.updateWhileAnimating : !1;
      this.updateWhileInteracting_ = void 0 !== options.updateWhileInteracting ? options.updateWhileInteracting : !1;
    }
    getDeclutter() {
      return this.declutter_;
    }
    getFeatures(pixel) {
      return super.getFeatures(pixel);
    }
    getRenderBuffer() {
      return this.renderBuffer_;
    }
    getRenderOrder() {
      return this.get("renderOrder");
    }
    getStyle() {
      return this.style_;
    }
    getStyleFunction() {
      return this.styleFunction_;
    }
    getUpdateWhileAnimating() {
      return this.updateWhileAnimating_;
    }
    getUpdateWhileInteracting() {
      return this.updateWhileInteracting_;
    }
    renderDeclutter(frameState, layerState) {
      const declutterGroup = this.getDeclutter();
      !1 === declutterGroup in frameState.declutter && (frameState.declutter[declutterGroup] = new default$$require$rbush.default(9));
      this.getRenderer().renderDeclutter(frameState, layerState);
    }
    setRenderOrder(renderOrder) {
      this.set("renderOrder", renderOrder);
    }
    setStyle(style) {
      this.style_ = void 0 === style ? require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js.createDefaultStyle : style;
      const styleLike = toStyleLike(style);
      this.styleFunction_ = null === style ? void 0 : (0,require$_DOT__DOT__SLASH_style_SLASH_Style_DOT_js.toFunction)(styleLike);
      this.changed();
    }
    setDeclutter(declutter) {
      this.declutter_ = declutter ? String(declutter) : void 0;
      this.changed();
    }
  }
  const $$default = BaseVectorLayer;
};

//# sourceMappingURL=module$node_modules$ol$layer$BaseVector.js.map
