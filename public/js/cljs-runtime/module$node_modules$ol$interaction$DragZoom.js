shadow$provide.module$node_modules$ol$interaction$DragZoom = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  var require$_DOT__DOT__SLASH_easing_DOT_js = require("module$node_modules$ol$easing"), require$_DOT__DOT__SLASH_events_SLASH_condition_DOT_js = require("module$node_modules$ol$events$condition");
  global = require("module$node_modules$ol$interaction$DragBox");
  require = require.esmDefault(global);
  class DragZoom extends require.default {
    constructor(options) {
      options = options ? options : {};
      super({condition:options.condition ? options.condition : require$_DOT__DOT__SLASH_events_SLASH_condition_DOT_js.shiftKeyOnly, className:options.className || "ol-dragzoom", minArea:options.minArea});
      this.duration_ = void 0 !== options.duration ? options.duration : 200;
      this.out_ = void 0 !== options.out ? options.out : !1;
    }
    onBoxEnd(event) {
      event = this.getMap().getView();
      let geometry = this.getGeometry();
      if (this.out_) {
        var rotatedExtent = event.rotatedExtentForGeometry(geometry);
        rotatedExtent = event.getResolutionForExtentInternal(rotatedExtent);
        rotatedExtent = event.getResolution() / rotatedExtent;
        geometry = geometry.clone();
        geometry.scale(rotatedExtent * rotatedExtent);
      }
      event.fitInternal(geometry, {duration:this.duration_, easing:require$_DOT__DOT__SLASH_easing_DOT_js.easeOut});
    }
  }
  const $$default = DragZoom;
};

//# sourceMappingURL=module$node_modules$ol$interaction$DragZoom.js.map
