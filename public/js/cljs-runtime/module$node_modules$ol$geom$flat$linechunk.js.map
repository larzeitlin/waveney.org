{
"version":3,
"file":"module$node_modules$ol$geom$flat$linechunk.js",
"lineCount":21,
"mappings":"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",
"sources":["node_modules/ol/geom/flat/linechunk.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$geom$flat$linechunk\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, lineChunk:{enumerable:true, get:function() {\n  return lineChunk;\n}}});\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js = require(\"../../math.js\");\nfunction lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),);\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.lerp)(x1, x2, m);\n      const y = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.lerp)(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(flatCoordinates[cursor + stride], flatCoordinates[cursor + stride + 1],);\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.lerp)(x1, x2, missing / segmentLength);\n      const y = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.lerp)(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","lineChunk","chunkLength","flatCoordinates","offset","end","stride","chunks","cursor","chunkM","currentChunk","slice","x1","y1","x2","y2","segmentLength","Math","sqrt","m","x","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js","lerp","y","push","missing","Object","defineProperties","__esModule","enumerable","value","get"]
}
