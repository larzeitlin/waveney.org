{
"version":3,
"file":"module$node_modules$ol$geom$GeometryCollection.js",
"lineCount":154,
"mappings":"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",
"sources":["node_modules/ol/geom/GeometryCollection.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$geom$GeometryCollection\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js = require(\"../events/EventType.js\");\nvar require$_DOT__DOT__SLASH_events_DOT_js = require(\"../events.js\");\nvar require$_DOT__DOT__SLASH_extent_DOT_js = require(\"../extent.js\");\nvar require$_DOT__SLASH_Geometry_DOT_js = require(\"./Geometry.js\");\nvar default$$require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js);\nvar default$$require$_DOT__SLASH_Geometry_DOT_js = require.esmDefault(require$_DOT__SLASH_Geometry_DOT_js);\nclass GeometryCollection extends default$$require$_DOT__SLASH_Geometry_DOT_js.default {\n  constructor(geometries) {\n    super();\n    this.geometries_ = geometries;\n    this.changeEventsKeys_ = [];\n    this.listenGeometriesChange_();\n  }\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(require$_DOT__DOT__SLASH_events_DOT_js.unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push((0,require$_DOT__DOT__SLASH_events_DOT_js.listen)(geometries[i], default$$require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js.default.CHANGE, this.changed, this),);\n    }\n  }\n  clone() {\n    const geometryCollection = new GeometryCollection(cloneGeometries(this.geometries_),);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < (0,require$_DOT__DOT__SLASH_extent_DOT_js.closestSquaredDistanceXY)(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance,);\n    }\n    return minSquaredDistance;\n  }\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  computeExtent(extent) {\n    (0,require$_DOT__DOT__SLASH_extent_DOT_js.createOrUpdateEmpty)(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      (0,require$_DOT__DOT__SLASH_extent_DOT_js.extend)(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n  getGeometriesArrayRecursive() {\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(geometries[i].getGeometriesArrayRecursive(),);\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 || this.simplifiedGeometryMaxMinSquaredTolerance !== 0 && squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance) {\n      return this;\n    }\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(simplifiedGeometries,);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n  getType() {\n    return \"GeometryCollection\";\n  }\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = (0,require$_DOT__DOT__SLASH_extent_DOT_js.getCenter)(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\nfunction cloneGeometries(geometries) {\n  return geometries.map(geometry => geometry.clone());\n}\nconst $$default = GeometryCollection;\n\n};"],
"names":["shadow$provide","global","require","module","exports","cloneGeometries","geometries","map","geometry","clone","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js","require$_DOT__DOT__SLASH_events_DOT_js","require$_DOT__DOT__SLASH_extent_DOT_js","require$_DOT__SLASH_Geometry_DOT_js","default$$require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js","esmDefault","default$$require$_DOT__SLASH_Geometry_DOT_js","GeometryCollection","constructor","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","forEach","unlistenByKey","length","i","ii","push","listen","CHANGE","changed","geometryCollection","applyProperties","closestPointXY","x","y","closestPoint","minSquaredDistance","closestSquaredDistanceXY","getExtent","containsXY","computeExtent","extent","createOrUpdateEmpty","extend","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","getType","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","intersectsExtent","isEmpty","rotate","angle","anchor","scale","sx","sy","getCenter","setGeometries","setGeometriesArray","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal"]
}
