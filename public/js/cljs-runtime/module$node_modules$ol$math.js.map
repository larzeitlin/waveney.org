{
"version":3,
"file":"module$node_modules$ol$math.js",
"lineCount":107,
"mappings":"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",
"sources":["node_modules/ol/math.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$math\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, ceil:{enumerable:true, get:function() {\n  return ceil;\n}}, clamp:{enumerable:true, get:function() {\n  return clamp;\n}}, floor:{enumerable:true, get:function() {\n  return floor;\n}}, lerp:{enumerable:true, get:function() {\n  return lerp;\n}}, modulo:{enumerable:true, get:function() {\n  return modulo;\n}}, round:{enumerable:true, get:function() {\n  return round;\n}}, solveLinearSystem:{enumerable:true, get:function() {\n  return solveLinearSystem;\n}}, squaredDistance:{enumerable:true, get:function() {\n  return squaredDistance;\n}}, squaredSegmentDistance:{enumerable:true, get:function() {\n  return squaredSegmentDistance;\n}}, toDegrees:{enumerable:true, get:function() {\n  return toDegrees;\n}}, toFixed:{enumerable:true, get:function() {\n  return toFixed;\n}}, toRadians:{enumerable:true, get:function() {\n  return toRadians;\n}}, wrap:{enumerable:true, get:function() {\n  return wrap;\n}}});\nfunction clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\nfunction squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\nfunction squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\nfunction solveLinearSystem(mat) {\n  const n = mat.length;\n  for (let i = 0; i < n; i++) {\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n    if (maxEl === 0) {\n      return null;\n    }\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\nfunction toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\nfunction toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\nfunction modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\nfunction lerp(a, b, x) {\n  return a + x * (b - a);\n}\nfunction toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\nfunction round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\nfunction floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\nfunction ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\nfunction wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((n - min) % range + range) % range + min;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","clamp","value","min","max","Math","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","t","squaredDistance","solveLinearSystem","mat","n","length","i","maxRow","maxEl","abs","r","absValue","tmp","j","coef","k","Array","l","m","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","a","b","lerp","toFixed","decimals","factor","pow","round","floor","ceil","wrap","range","Object","defineProperties","__esModule","enumerable","get"]
}
