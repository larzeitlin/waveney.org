shadow$provide.module$node_modules$ol$renderer$Layer = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  module = require("module$node_modules$ol$ImageState");
  exports = require("module$node_modules$ol$Observable");
  global = require("module$node_modules$ol$events$EventType");
  var require$_DOT__DOT__SLASH_util_DOT_js = require("module$node_modules$ol$util"), default$$require$_DOT__DOT__SLASH_ImageState_DOT_js = require.esmDefault(module);
  module = require.esmDefault(exports);
  var default$$require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js = require.esmDefault(global);
  class LayerRenderer extends module.default {
    constructor(layer) {
      super();
      this.ready = !0;
      this.boundHandleImageChange_ = this.handleImageChange_.bind(this);
      this.layer_ = layer;
      this.staleKeys_ = [];
      this.maxStaleKeys = 5;
    }
    getStaleKeys() {
      return this.staleKeys_;
    }
    prependStaleKey(key) {
      this.staleKeys_.unshift(key);
      this.staleKeys_.length > this.maxStaleKeys && (this.staleKeys_.length = this.maxStaleKeys);
    }
    getFeatures(pixel) {
      return (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();
    }
    getData(pixel) {
      return null;
    }
    prepareFrame(frameState) {
      return (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();
    }
    renderFrame(frameState, target) {
      return (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();
    }
    forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, matches) {
    }
    getLayer() {
      return this.layer_;
    }
    handleFontsChanged() {
    }
    handleImageChange_(event) {
      event = event.target;
      event.getState() !== default$$require$_DOT__DOT__SLASH_ImageState_DOT_js.default.LOADED && event.getState() !== default$$require$_DOT__DOT__SLASH_ImageState_DOT_js.default.ERROR || this.renderIfReadyAndVisible();
    }
    loadImage(image) {
      let imageState = image.getState();
      imageState != default$$require$_DOT__DOT__SLASH_ImageState_DOT_js.default.LOADED && imageState != default$$require$_DOT__DOT__SLASH_ImageState_DOT_js.default.ERROR && image.addEventListener(default$$require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js.default.CHANGE, this.boundHandleImageChange_);
      imageState == default$$require$_DOT__DOT__SLASH_ImageState_DOT_js.default.IDLE && (image.load(), imageState = image.getState());
      return imageState == default$$require$_DOT__DOT__SLASH_ImageState_DOT_js.default.LOADED;
    }
    renderIfReadyAndVisible() {
      const layer = this.getLayer();
      layer && layer.getVisible() && "ready" === layer.getSourceState() && layer.changed();
    }
    renderDeferred(frameState) {
    }
    disposeInternal() {
      delete this.layer_;
      super.disposeInternal();
    }
  }
  const $$default = LayerRenderer;
};

//# sourceMappingURL=module$node_modules$ol$renderer$Layer.js.map
