{
"version":3,
"file":"module$node_modules$ol$geom$LineString.js",
"lineCount":72,
"mappings":"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",
"sources":["node_modules/ol/geom/LineString.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$geom$LineString\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH_array_DOT_js = require(\"../array.js\");\nvar require$_DOT__DOT__SLASH_extent_DOT_js = require(\"../extent.js\");\nvar require$_DOT__SLASH_SimpleGeometry_DOT_js = require(\"./SimpleGeometry.js\");\nvar require$_DOT__SLASH_flat_SLASH_closest_DOT_js = require(\"./flat/closest.js\");\nvar require$_DOT__SLASH_flat_SLASH_deflate_DOT_js = require(\"./flat/deflate.js\");\nvar require$_DOT__SLASH_flat_SLASH_inflate_DOT_js = require(\"./flat/inflate.js\");\nvar require$_DOT__SLASH_flat_SLASH_interpolate_DOT_js = require(\"./flat/interpolate.js\");\nvar require$_DOT__SLASH_flat_SLASH_intersectsextent_DOT_js = require(\"./flat/intersectsextent.js\");\nvar require$_DOT__SLASH_flat_SLASH_length_DOT_js = require(\"./flat/length.js\");\nvar require$_DOT__SLASH_flat_SLASH_segments_DOT_js = require(\"./flat/segments.js\");\nvar require$_DOT__SLASH_flat_SLASH_simplify_DOT_js = require(\"./flat/simplify.js\");\nvar default$$require$_DOT__SLASH_SimpleGeometry_DOT_js = require.esmDefault(require$_DOT__SLASH_SimpleGeometry_DOT_js);\nclass LineString extends default$$require$_DOT__SLASH_SimpleGeometry_DOT_js.default {\n  constructor(coordinates, layout) {\n    super();\n    this.flatMidpoint_ = null;\n    this.flatMidpointRevision_ = -1;\n    this.maxDelta_ = -1;\n    this.maxDeltaRevision_ = -1;\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(layout, coordinates,);\n    } else {\n      this.setCoordinates(coordinates, layout,);\n    }\n  }\n  appendCoordinate(coordinate) {\n    (0,require$_DOT__DOT__SLASH_array_DOT_js.extend)(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n  clone() {\n    const lineString = new LineString(this.flatCoordinates.slice(), this.layout,);\n    lineString.applyProperties(this);\n    return lineString;\n  }\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < (0,require$_DOT__DOT__SLASH_extent_DOT_js.closestSquaredDistanceXY)(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt((0,require$_DOT__SLASH_flat_SLASH_closest_DOT_js.maxSquaredDelta)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0,),);\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return (0,require$_DOT__SLASH_flat_SLASH_closest_DOT_js.assignClosestPoint)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance,);\n  }\n  forEachSegment(callback) {\n    return (0,require$_DOT__SLASH_flat_SLASH_segments_DOT_js.forEach)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback,);\n  }\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != \"XYM\" && this.layout != \"XYZM\") {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return (0,require$_DOT__SLASH_flat_SLASH_interpolate_DOT_js.lineStringCoordinateAtM)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate,);\n  }\n  getCoordinates() {\n    return (0,require$_DOT__SLASH_flat_SLASH_inflate_DOT_js.inflateCoordinates)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,);\n  }\n  getCoordinateAt(fraction, dest) {\n    return (0,require$_DOT__SLASH_flat_SLASH_interpolate_DOT_js.interpolatePoint)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, dest, this.stride,);\n  }\n  getLength() {\n    return (0,require$_DOT__SLASH_flat_SLASH_length_DOT_js.lineStringLength)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,);\n  }\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_ ?? undefined,);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = (0,require$_DOT__SLASH_flat_SLASH_simplify_DOT_js.douglasPeucker)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0,);\n    return new LineString(simplifiedFlatCoordinates, \"XY\");\n  }\n  getType() {\n    return \"LineString\";\n  }\n  intersectsExtent(extent) {\n    return (0,require$_DOT__SLASH_flat_SLASH_intersectsextent_DOT_js.intersectsLineString)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent, this.getExtent(),);\n  }\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = (0,require$_DOT__SLASH_flat_SLASH_deflate_DOT_js.deflateCoordinates)(this.flatCoordinates, 0, coordinates, this.stride,);\n    this.changed();\n  }\n}\nconst $$default = LineString;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$_DOT__DOT__SLASH_array_DOT_js","require$_DOT__DOT__SLASH_extent_DOT_js","require$_DOT__SLASH_SimpleGeometry_DOT_js","require$_DOT__SLASH_flat_SLASH_closest_DOT_js","require$_DOT__SLASH_flat_SLASH_deflate_DOT_js","require$_DOT__SLASH_flat_SLASH_inflate_DOT_js","require$_DOT__SLASH_flat_SLASH_interpolate_DOT_js","require$_DOT__SLASH_flat_SLASH_intersectsextent_DOT_js","require$_DOT__SLASH_flat_SLASH_length_DOT_js","require$_DOT__SLASH_flat_SLASH_segments_DOT_js","require$_DOT__SLASH_flat_SLASH_simplify_DOT_js","default$$require$_DOT__SLASH_SimpleGeometry_DOT_js","esmDefault","LineString","constructor","coordinates","layout","flatMidpoint_","maxDeltaRevision_","maxDelta_","flatMidpointRevision_","undefined","Array","isArray","setCoordinates","setFlatCoordinates","appendCoordinate","coordinate","extend","flatCoordinates","changed","clone","lineString","slice","applyProperties","closestPointXY","x","y","closestPoint","minSquaredDistance","closestSquaredDistanceXY","getExtent","getRevision","Math","sqrt","maxSquaredDelta","length","stride","assignClosestPoint","forEachSegment","callback","forEach","getCoordinateAtM","m","extrapolate","lineStringCoordinateAtM","getCoordinates","inflateCoordinates","getCoordinateAt","fraction","dest","interpolatePoint","getLength","lineStringLength","getFlatMidpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","douglasPeucker","getType","intersectsExtent","extent","intersectsLineString","setLayout","deflateCoordinates"]
}
