{
"version":3,
"file":"module$node_modules$ol$geom$flat$geodesic.js",
"lineCount":51,
"mappings":"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",
"sources":["node_modules/ol/geom/flat/geodesic.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$geom$flat$geodesic\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, greatCircleArc:{enumerable:true, get:function() {\n  return greatCircleArc;\n}}, meridian:{enumerable:true, get:function() {\n  return meridian;\n}}, parallel:{enumerable:true, get:function() {\n  return parallel;\n}}});\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js = require(\"../../math.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js = require(\"../../proj.js\");\nfunction line(interpolate, transform, squaredTolerance) {\n  const flatCoordinates = [];\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n  let a = transform(geoA);\n  let b = transform(geoB);\n  const geoStack = [geoB, geoA];\n  const stack = [b, a];\n  const fractionStack = [1, 0];\n  const fractions = {};\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if ((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.squaredSegmentDistance)(m[0], m[1], a[0], a[1], b[0], b[1]) < squaredTolerance) {\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n  return flatCoordinates;\n}\nfunction greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance,) {\n  const geoProjection = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js.get)(\"EPSG:4326\");\n  const cosLat1 = Math.cos((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.toRadians)(lat1));\n  const sinLat1 = Math.sin((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.toRadians)(lat1));\n  const cosLat2 = Math.cos((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.toRadians)(lat2));\n  const sinLat2 = Math.sin((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.toRadians)(lat2));\n  const cosDeltaLon = Math.cos((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.toRadians)(lon2 - lon1));\n  const sinDeltaLon = Math.sin((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.toRadians)(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n  return line(function(frac) {\n    if (1 <= d) {\n      return [lon2, lat2];\n    }\n    const D = frac * Math.acos(d);\n    const cosD = Math.cos(D);\n    const sinD = Math.sin(D);\n    const y = sinDeltaLon * cosLat2;\n    const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n    const theta = Math.atan2(y, x);\n    const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n    const lon = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.toRadians)(lon1) + Math.atan2(Math.sin(theta) * sinD * cosLat1, cosD - sinLat1 * Math.sin(lat),);\n    return [(0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.toDegrees)(lon), (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js.toDegrees)(lat)];\n  }, (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js.getTransform)(geoProjection, projection), squaredTolerance,);\n}\nfunction meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js.get)(\"EPSG:4326\");\n  return line(function(frac) {\n    return [lon, lat1 + (lat2 - lat1) * frac];\n  }, (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js.getTransform)(epsg4326Projection, projection), squaredTolerance,);\n}\nfunction parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js.get)(\"EPSG:4326\");\n  return line(function(frac) {\n    return [lon1 + (lon2 - lon1) * frac, lat];\n  }, (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js.getTransform)(epsg4326Projection, projection), squaredTolerance,);\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","line","interpolate","transform","squaredTolerance","flatCoordinates","geoA","geoB","a","b","geoStack","stack","fractionStack","fractions","maxIterations","geoM","m","fracA","fracB","fracM","length","pop","key","toString","push","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_math_DOT_js","squaredSegmentDistance","greatCircleArc","lon1","lat1","lon2","lat2","projection","geoProjection","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_proj_DOT_js","get","cosLat1","Math","cos","toRadians","sinLat1","sin","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","d","frac","D","acos","cosD","sinD","theta","atan2","lat","asin","lon","toDegrees","getTransform","meridian","epsg4326Projection","parallel","Object","defineProperties","__esModule","enumerable","value"]
}
