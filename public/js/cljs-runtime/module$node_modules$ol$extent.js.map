{
"version":3,
"file":"module$node_modules$ol$extent.js",
"lineCount":372,
"mappings":"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",
"sources":["node_modules/ol/extent.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$extent\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, applyTransform:{enumerable:true, get:function() {\n  return applyTransform;\n}}, approximatelyEquals:{enumerable:true, get:function() {\n  return approximatelyEquals;\n}}, boundingExtent:{enumerable:true, get:function() {\n  return boundingExtent;\n}}, buffer:{enumerable:true, get:function() {\n  return buffer;\n}}, clone:{enumerable:true, get:function() {\n  return clone;\n}}, closestSquaredDistanceXY:{enumerable:true, get:function() {\n  return closestSquaredDistanceXY;\n}}, containsCoordinate:{enumerable:true, get:function() {\n  return containsCoordinate;\n}}, containsExtent:{enumerable:true, get:function() {\n  return containsExtent;\n}}, containsXY:{enumerable:true, get:function() {\n  return containsXY;\n}}, coordinateRelationship:{enumerable:true, get:function() {\n  return coordinateRelationship;\n}}, createEmpty:{enumerable:true, get:function() {\n  return createEmpty;\n}}, createOrUpdate:{enumerable:true, get:function() {\n  return createOrUpdate;\n}}, createOrUpdateEmpty:{enumerable:true, get:function() {\n  return createOrUpdateEmpty;\n}}, createOrUpdateFromCoordinate:{enumerable:true, get:function() {\n  return createOrUpdateFromCoordinate;\n}}, createOrUpdateFromCoordinates:{enumerable:true, get:function() {\n  return createOrUpdateFromCoordinates;\n}}, createOrUpdateFromFlatCoordinates:{enumerable:true, get:function() {\n  return createOrUpdateFromFlatCoordinates;\n}}, createOrUpdateFromRings:{enumerable:true, get:function() {\n  return createOrUpdateFromRings;\n}}, equals:{enumerable:true, get:function() {\n  return equals;\n}}, extend:{enumerable:true, get:function() {\n  return extend;\n}}, extendCoordinate:{enumerable:true, get:function() {\n  return extendCoordinate;\n}}, extendCoordinates:{enumerable:true, get:function() {\n  return extendCoordinates;\n}}, extendFlatCoordinates:{enumerable:true, get:function() {\n  return extendFlatCoordinates;\n}}, extendRings:{enumerable:true, get:function() {\n  return extendRings;\n}}, extendXY:{enumerable:true, get:function() {\n  return extendXY;\n}}, forEachCorner:{enumerable:true, get:function() {\n  return forEachCorner;\n}}, getArea:{enumerable:true, get:function() {\n  return getArea;\n}}, getBottomLeft:{enumerable:true, get:function() {\n  return getBottomLeft;\n}}, getBottomRight:{enumerable:true, get:function() {\n  return getBottomRight;\n}}, getCenter:{enumerable:true, get:function() {\n  return getCenter;\n}}, getCorner:{enumerable:true, get:function() {\n  return getCorner;\n}}, getEnlargedArea:{enumerable:true, get:function() {\n  return getEnlargedArea;\n}}, getForViewAndSize:{enumerable:true, get:function() {\n  return getForViewAndSize;\n}}, getHeight:{enumerable:true, get:function() {\n  return getHeight;\n}}, getIntersection:{enumerable:true, get:function() {\n  return getIntersection;\n}}, getIntersectionArea:{enumerable:true, get:function() {\n  return getIntersectionArea;\n}}, getMargin:{enumerable:true, get:function() {\n  return getMargin;\n}}, getRotatedViewport:{enumerable:true, get:function() {\n  return getRotatedViewport;\n}}, getSize:{enumerable:true, get:function() {\n  return getSize;\n}}, getTopLeft:{enumerable:true, get:function() {\n  return getTopLeft;\n}}, getTopRight:{enumerable:true, get:function() {\n  return getTopRight;\n}}, getWidth:{enumerable:true, get:function() {\n  return getWidth;\n}}, intersects:{enumerable:true, get:function() {\n  return intersects;\n}}, intersectsSegment:{enumerable:true, get:function() {\n  return intersectsSegment;\n}}, isEmpty:{enumerable:true, get:function() {\n  return isEmpty;\n}}, returnOrUpdate:{enumerable:true, get:function() {\n  return returnOrUpdate;\n}}, scaleFromCenter:{enumerable:true, get:function() {\n  return scaleFromCenter;\n}}, wrapAndSliceX:{enumerable:true, get:function() {\n  return wrapAndSliceX;\n}}, wrapX:{enumerable:true, get:function() {\n  return wrapX;\n}}});\nvar require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js = require(\"./extent/Relationship.js\");\nvar default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js = require.esmDefault(require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js);\nfunction boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\nfunction buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [extent[0] - value, extent[1] - value, extent[2] + value, extent[3] + value,];\n}\nfunction clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\nfunction closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\nfunction containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\nfunction containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] && extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\nfunction containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\nfunction coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.ABOVE;\n  }\n  if (relationship === default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.UNKNOWN) {\n    relationship = default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.INTERSECTING;\n  }\n  return relationship;\n}\nfunction createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\nfunction createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\nfunction createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\nfunction createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\nfunction createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\nfunction createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, dest,) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\nfunction createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\nfunction equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] && extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\nfunction approximatelyEquals(extent1, extent2, tolerance) {\n  return Math.abs(extent1[0] - extent2[0]) < tolerance && Math.abs(extent1[2] - extent2[2]) < tolerance && Math.abs(extent1[1] - extent2[1]) < tolerance && Math.abs(extent1[3] - extent2[3]) < tolerance;\n}\nfunction extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\nfunction extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\nfunction extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\nfunction extendFlatCoordinates(extent, flatCoordinates, offset, end, stride,) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\nfunction extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\nfunction extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\nfunction forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\nfunction getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\nfunction getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\nfunction getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\nfunction getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\nfunction getCorner(extent, corner) {\n  let coordinate;\n  if (corner === \"bottom-left\") {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === \"bottom-right\") {\n    coordinate = getBottomRight(extent);\n  } else if (corner === \"top-left\") {\n    coordinate = getTopLeft(extent);\n  } else if (corner === \"top-right\") {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error(\"Invalid corner\");\n  }\n  return coordinate;\n}\nfunction getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\nfunction getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(center, resolution, rotation, size,);\n  return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), dest,);\n}\nfunction getRotatedViewport(center, resolution, rotation, size) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [x - xCos + ySin, y - xSin - yCos, x - xCos - ySin, y - xSin + yCos, x + xCos - ySin, y + xSin + yCos, x + xCos + ySin, y + xSin - yCos, x - xCos + ySin, y - xSin - yCos,];\n}\nfunction getHeight(extent) {\n  return extent[3] - extent[1];\n}\nfunction getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\nfunction getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\nfunction getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\nfunction getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\nfunction getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\nfunction getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\nfunction getWidth(extent) {\n  return extent[2] - extent[0];\n}\nfunction intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] && extent1[2] >= extent2[0] && extent1[1] <= extent2[3] && extent1[3] >= extent2[1];\n}\nfunction isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\nfunction returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\nfunction scaleFromCenter(extent, value) {\n  const deltaX = (extent[2] - extent[0]) / 2 * (value - 1);\n  const deltaY = (extent[3] - extent[1]) / 2 * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\nfunction intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.INTERSECTING || endRel === default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.ABOVE) && !(startRel & default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.ABOVE)) {\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.RIGHT) && !(startRel & default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.RIGHT)) {\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.BELOW) && !(startRel & default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.BELOW)) {\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.LEFT) && !(startRel & default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.LEFT)) {\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\nfunction applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(extent[0] + width * i / stops, extent[1], extent[2], extent[1] + height * i / stops, extent[2] - width * i / stops, extent[3], extent[0], extent[3] - height * i / stops,);\n    }\n  } else {\n    coordinates = [extent[0], extent[1], extent[2], extent[1], extent[2], extent[3], extent[0], extent[3],];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\nfunction wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (projection.canWrapX() && (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth,);\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\nfunction wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      return [[extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]], [projectionExtent[0], extent[1], extent[2], extent[3]],];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      return [[extent[0], extent[1], projectionExtent[2], extent[3]], [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],];\n    }\n  }\n  return [extent];\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","boundingExtent","coordinates","extent","createEmpty","i","ii","length","extendCoordinate","buffer","value","dest","clone","slice","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minY","maxX","maxY","relationship","default$$require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js","default","UNKNOWN","minX","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","equals","approximatelyEquals","tolerance","Math","abs","extend","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","Error","getEnlargedArea","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersectionArea","intersection","getIntersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","endX","endY","slope","startY","startX","applyTransform","transformFn","stops","width","height","push","xs","ys","l","apply","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","worldsAway","wrapAndSliceX","multiWorld","isFinite","Object","defineProperties","__esModule","enumerable","get","require$_DOT__SLASH_extent_SLASH_Relationship_DOT_js","esmDefault"]
}
