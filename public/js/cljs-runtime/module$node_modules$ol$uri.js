shadow$provide.module$node_modules$ol$uri = function(global, require, module, exports) {
  function appendParams(uri, params) {
    const keyParams = [];
    Object.keys(params).forEach(function(k) {
      null !== params[k] && void 0 !== params[k] && keyParams.push(k + "\x3d" + encodeURIComponent(params[k]));
    });
    const qs = keyParams.join("\x26");
    uri = uri.replace(/[?&]$/, "");
    uri += uri.includes("?") ? "\x26" : "?";
    return uri + qs;
  }
  function renderXYZTemplate(template, z, x, y, maxY) {
    return template.replace(zRegEx, z.toString()).replace(xRegEx, x.toString()).replace(yRegEx, y.toString()).replace(dashYRegEx, function() {
      if (void 0 === maxY) {
        throw Error("If the URL template has a {-y} placeholder, the grid extent must be known");
      }
      return (maxY - y).toString();
    });
  }
  function pickUrl(urls, z, x, y) {
    z = (0,require$_DOT__SLASH_tilecoord_DOT_js.hashZXY)(z, x, y);
    z = (0,require$_DOT__SLASH_math_DOT_js.modulo)(z, urls.length);
    return urls[z];
  }
  function expandUrl(url) {
    const urls = [];
    let match = /\{([a-z])-([a-z])\}/.exec(url);
    if (match) {
      for (var startCharCode = match[1].charCodeAt(0), stopCharCode = match[2].charCodeAt(0); startCharCode <= stopCharCode; ++startCharCode) {
        urls.push(url.replace(match[0], String.fromCharCode(startCharCode)));
      }
      return urls;
    }
    if (match = /\{(\d+)-(\d+)\}/.exec(url)) {
      stopCharCode = parseInt(match[2], 10);
      for (startCharCode = parseInt(match[1], 10); startCharCode <= stopCharCode; startCharCode++) {
        urls.push(url.replace(match[0], startCharCode.toString()));
      }
      return urls;
    }
    urls.push(url);
    return urls;
  }
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, appendParams:{enumerable:!0, get:function() {
    return appendParams;
  }}, expandUrl:{enumerable:!0, get:function() {
    return expandUrl;
  }}, pickUrl:{enumerable:!0, get:function() {
    return pickUrl;
  }}, renderXYZTemplate:{enumerable:!0, get:function() {
    return renderXYZTemplate;
  }}});
  var require$_DOT__SLASH_math_DOT_js = require("module$node_modules$ol$math"), require$_DOT__SLASH_tilecoord_DOT_js = require("module$node_modules$ol$tilecoord");
  const zRegEx = /\{z\}/g, xRegEx = /\{x\}/g, yRegEx = /\{y\}/g, dashYRegEx = /\{-y\}/g;
};

//# sourceMappingURL=module$node_modules$ol$uri.js.map
