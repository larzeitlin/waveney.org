{
"version":3,
"file":"module$node_modules$ol$interaction$Pointer.js",
"lineCount":63,
"mappings":"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",
"sources":["node_modules/ol/interaction/Pointer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$interaction$Pointer\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, centroid:{enumerable:true, get:function() {\n  return centroid;\n}}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH_MapBrowserEventType_DOT_js = require(\"../MapBrowserEventType.js\");\nvar require$_DOT__SLASH_Interaction_DOT_js = require(\"./Interaction.js\");\nvar default$$require$_DOT__DOT__SLASH_MapBrowserEventType_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_MapBrowserEventType_DOT_js);\nvar default$$require$_DOT__SLASH_Interaction_DOT_js = require.esmDefault(require$_DOT__SLASH_Interaction_DOT_js);\nclass PointerInteraction extends default$$require$_DOT__SLASH_Interaction_DOT_js.default {\n  constructor(options) {\n    options = options ? options : {};\n    super(options,);\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n    this.handlingDownUpSequence = false;\n    this.targetPointers = [];\n  }\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n  handleDragEvent(mapBrowserEvent) {\n  }\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == default$$require$_DOT__DOT__SLASH_MapBrowserEventType_DOT_js.default.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == default$$require$_DOT__DOT__SLASH_MapBrowserEventType_DOT_js.default.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == default$$require$_DOT__DOT__SLASH_MapBrowserEventType_DOT_js.default.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == default$$require$_DOT__DOT__SLASH_MapBrowserEventType_DOT_js.default.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n  handleMoveEvent(mapBrowserEvent) {\n  }\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n  stopDown(handled) {\n    return handled;\n  }\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\nfunction centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX:clientX / length, clientY:clientY / length};\n}\nconst $$default = PointerInteraction;\n\n};"],
"names":["shadow$provide","global","require","module","exports","centroid","pointerEvents","length","clientX","clientY","i","Object","defineProperties","__esModule","enumerable","value","get","default","$$default","require$_DOT__DOT__SLASH_MapBrowserEventType_DOT_js","require$_DOT__SLASH_Interaction_DOT_js","default$$require$_DOT__DOT__SLASH_MapBrowserEventType_DOT_js","esmDefault","default$$require$_DOT__SLASH_Interaction_DOT_js","PointerInteraction","constructor","options","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","mapBrowserEvent","handleEvent","originalEvent","stopEvent","updateTrackedPointers_","type","POINTERDRAG","preventDefault","POINTERUP","handledUp","POINTERDOWN","handled","POINTERMOVE","activePointers"]
}
