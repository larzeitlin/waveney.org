{
"version":3,
"file":"module$node_modules$ol$geom$Geometry.js",
"lineCount":95,
"mappings":"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",
"sources":["node_modules/ol/geom/Geometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$geom$Geometry\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH_Object_DOT_js = require(\"../Object.js\");\nvar require$_DOT__DOT__SLASH_extent_DOT_js = require(\"../extent.js\");\nvar require$_DOT__DOT__SLASH_functions_DOT_js = require(\"../functions.js\");\nvar require$_DOT__DOT__SLASH_proj_DOT_js = require(\"../proj.js\");\nvar require$_DOT__DOT__SLASH_transform_DOT_js = require(\"../transform.js\");\nvar require$_DOT__DOT__SLASH_util_DOT_js = require(\"../util.js\");\nvar require$_DOT__SLASH_flat_SLASH_transform_DOT_js = require(\"./flat/transform.js\");\nvar default$$require$_DOT__DOT__SLASH_Object_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_Object_DOT_js);\nconst tmpTransform = (0,require$_DOT__DOT__SLASH_transform_DOT_js.create)();\nconst tmpPoint = [NaN, NaN];\nclass Geometry extends default$$require$_DOT__DOT__SLASH_Object_DOT_js.default {\n  constructor() {\n    super();\n    this.extent_ = (0,require$_DOT__DOT__SLASH_extent_DOT_js.createEmpty)();\n    this.extentRevision_ = -1;\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = 0;\n    this.simplifyTransformedInternal = (0,require$_DOT__DOT__SLASH_functions_DOT_js.memoizeOne)((revision, squaredTolerance, transform) => {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    },);\n  }\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, transform,);\n  }\n  clone() {\n    return (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();\n  }\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();\n  }\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n  computeExtent(extent) {\n    return (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();\n  }\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        (0,require$_DOT__DOT__SLASH_extent_DOT_js.createOrUpdateEmpty)(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return (0,require$_DOT__DOT__SLASH_extent_DOT_js.returnOrUpdate)(this.extent_, extent);\n  }\n  rotate(angle, anchor) {\n    (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();\n  }\n  scale(sx, sy, anchor) {\n    (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();\n  }\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n  getSimplifiedGeometry(squaredTolerance) {\n    return (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();\n  }\n  getType() {\n    return (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();\n  }\n  applyTransform(transformFn) {\n    (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();\n  }\n  intersectsExtent(extent) {\n    return (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();\n  }\n  translate(deltaX, deltaY) {\n    (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();\n  }\n  transform(source, destination) {\n    const sourceProj = (0,require$_DOT__DOT__SLASH_proj_DOT_js.get)(source);\n    const transformFn = sourceProj.getUnits() == \"tile-pixels\" ? function(inCoordinates, outCoordinates, stride) {\n      const pixelExtent = sourceProj.getExtent();\n      const projectedExtent = sourceProj.getWorldExtent();\n      const scale = (0,require$_DOT__DOT__SLASH_extent_DOT_js.getHeight)(projectedExtent) / (0,require$_DOT__DOT__SLASH_extent_DOT_js.getHeight)(pixelExtent);\n      (0,require$_DOT__DOT__SLASH_transform_DOT_js.compose)(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0,);\n      const transformed = (0,require$_DOT__SLASH_flat_SLASH_transform_DOT_js.transform2D)(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates,);\n      const projTransform = (0,require$_DOT__DOT__SLASH_proj_DOT_js.getTransform)(sourceProj, destination);\n      if (projTransform) {\n        return projTransform(transformed, transformed, stride);\n      }\n      return transformed;\n    } : (0,require$_DOT__DOT__SLASH_proj_DOT_js.getTransform)(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\nconst $$default = Geometry;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$_DOT__DOT__SLASH_Object_DOT_js","require$_DOT__DOT__SLASH_extent_DOT_js","require$_DOT__DOT__SLASH_functions_DOT_js","require$_DOT__DOT__SLASH_proj_DOT_js","require$_DOT__DOT__SLASH_transform_DOT_js","require$_DOT__DOT__SLASH_util_DOT_js","require$_DOT__SLASH_flat_SLASH_transform_DOT_js","default$$require$_DOT__DOT__SLASH_Object_DOT_js","esmDefault","tmpTransform","create","tmpPoint","NaN","Geometry","constructor","extent_","createEmpty","extentRevision_","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifyTransformedInternal","memoizeOne","revision","squaredTolerance","transform","getSimplifiedGeometry","clone","applyTransform","simplifyTransformed","getRevision","abstract","closestPointXY","x","y","closestPoint","minSquaredDistance","containsXY","Number","MIN_VALUE","getClosestPoint","point","Infinity","intersectsCoordinate","coordinate","computeExtent","extent","getExtent","isNaN","createOrUpdateEmpty","returnOrUpdate","rotate","angle","anchor","scale","sx","sy","simplify","tolerance","getType","transformFn","intersectsExtent","translate","deltaX","deltaY","source","destination","sourceProj","getUnits","inCoordinates","outCoordinates","stride","pixelExtent","projectedExtent","getWorldExtent","getHeight","compose","transformed","transform2D","length","projTransform","getTransform"]
}
