shadow$provide.module$node_modules$ol$control$Control = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  global = require("module$node_modules$ol$MapEventType");
  module = require("module$node_modules$ol$Object");
  var require$_DOT__DOT__SLASH_events_DOT_js = require("module$node_modules$ol$events"), require$_DOT__DOT__SLASH_functions_DOT_js = require("module$node_modules$ol$functions");
  module = require.esmDefault(module);
  var default$$require$_DOT__DOT__SLASH_MapEventType_DOT_js = require.esmDefault(global);
  class Control extends module.default {
    constructor(options) {
      super();
      const element = options.element;
      !element || options.target || element.style.pointerEvents || (element.style.pointerEvents = "auto");
      this.element = element ? element : null;
      this.map_ = this.target_ = null;
      this.listenerKeys = [];
      options.render && (this.render = options.render);
      options.target && this.setTarget(options.target);
    }
    disposeInternal() {
      this.element?.remove();
      super.disposeInternal();
    }
    getMap() {
      return this.map_;
    }
    setMap(map) {
      this.map_ && this.element?.remove();
      for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {
        (0,require$_DOT__DOT__SLASH_events_DOT_js.unlistenByKey)(this.listenerKeys[i]);
      }
      this.listenerKeys.length = 0;
      if (this.map_ = map) {
        const target = this.target_ ?? map.getOverlayContainerStopEvent();
        this.element && target.appendChild(this.element);
        this.render !== require$_DOT__DOT__SLASH_functions_DOT_js.VOID && this.listenerKeys.push((0,require$_DOT__DOT__SLASH_events_DOT_js.listen)(map, default$$require$_DOT__DOT__SLASH_MapEventType_DOT_js.default.POSTRENDER, this.render, this));
        map.render();
      }
    }
    render(mapEvent) {
    }
    setTarget(target) {
      this.target_ = "string" === typeof target ? document.getElementById(target) : target;
    }
  }
  const $$default = Control;
};

//# sourceMappingURL=module$node_modules$ol$control$Control.js.map
