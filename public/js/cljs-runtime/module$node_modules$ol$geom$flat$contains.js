shadow$provide.module$node_modules$ol$geom$flat$contains = function(global, require, module, exports) {
  function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {
    return !(0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.forEachCorner)(extent, function(coordinate) {
      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);
    });
  }
  function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {
    let wn = 0, x1 = flatCoordinates[end - stride], y1 = flatCoordinates[end - stride + 1];
    for (; offset < end; offset += stride) {
      const x2 = flatCoordinates[offset], y2 = flatCoordinates[offset + 1];
      y1 <= y ? y2 > y && 0 < (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) && wn++ : y2 <= y && 0 > (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) && wn--;
      x1 = x2;
      y1 = y2;
    }
    return 0 !== wn;
  }
  function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {
    if (0 === ends.length || !linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {
      return !1;
    }
    for (let i = 1, ii = ends.length; i < ii; ++i) {
      if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {
        return !1;
      }
    }
    return !0;
  }
  function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {
    if (0 === endss.length) {
      return !1;
    }
    for (let i = 0, ii = endss.length; i < ii; ++i) {
      const ends = endss[i];
      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {
        return !0;
      }
      offset = ends[ends.length - 1];
    }
    return !1;
  }
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, linearRingContainsExtent:{enumerable:!0, get:function() {
    return linearRingContainsExtent;
  }}, linearRingContainsXY:{enumerable:!0, get:function() {
    return linearRingContainsXY;
  }}, linearRingsContainsXY:{enumerable:!0, get:function() {
    return linearRingsContainsXY;
  }}, linearRingssContainsXY:{enumerable:!0, get:function() {
    return linearRingssContainsXY;
  }}});
  var require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js = require("module$node_modules$ol$extent");
};

//# sourceMappingURL=module$node_modules$ol$geom$flat$contains.js.map
