{
"version":3,
"file":"module$node_modules$ol$reproj$Tile.js",
"lineCount":125,
"mappings":"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",
"sources":["node_modules/ol/reproj/Tile.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$reproj$Tile\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH_Tile_DOT_js = require(\"../Tile.js\");\nvar require$_DOT__DOT__SLASH_TileState_DOT_js = require(\"../TileState.js\");\nvar require$_DOT__DOT__SLASH_dom_DOT_js = require(\"../dom.js\");\nvar require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js = require(\"../events/EventType.js\");\nvar require$_DOT__DOT__SLASH_events_DOT_js = require(\"../events.js\");\nvar require$_DOT__DOT__SLASH_extent_DOT_js = require(\"../extent.js\");\nvar require$_DOT__DOT__SLASH_math_DOT_js = require(\"../math.js\");\nvar require$_DOT__DOT__SLASH_reproj_DOT_js = require(\"../reproj.js\");\nvar require$_DOT__SLASH_Triangulation_DOT_js = require(\"./Triangulation.js\");\nvar require$_DOT__SLASH_common_DOT_js = require(\"./common.js\");\nvar default$$require$_DOT__DOT__SLASH_TileState_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_TileState_DOT_js);\nvar default$$require$_DOT__SLASH_Triangulation_DOT_js = require.esmDefault(require$_DOT__SLASH_Triangulation_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_Tile_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_Tile_DOT_js);\nclass ReprojTile extends default$$require$_DOT__DOT__SLASH_Tile_DOT_js.default {\n  constructor(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, errorThreshold, renderEdges, options,) {\n    super(tileCoord, default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.IDLE, options);\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n    this.pixelRatio_ = pixelRatio;\n    this.gutter_ = gutter;\n    this.canvas_ = null;\n    this.sourceTileGrid_ = sourceTileGrid;\n    this.targetTileGrid_ = targetTileGrid;\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n    this.sourceTiles_ = [];\n    this.sourcesListenerKeys_ = null;\n    this.sourceZ_ = 0;\n    this.clipExtent_ = sourceProj.canWrapX() ? sourceProj.getExtent() : undefined;\n    const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_,);\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n    const limitedTargetExtent = maxTargetExtent ? (0,require$_DOT__DOT__SLASH_extent_DOT_js.getIntersection)(targetExtent, maxTargetExtent) : targetExtent;\n    if ((0,require$_DOT__DOT__SLASH_extent_DOT_js.getArea)(limitedTargetExtent) === 0) {\n      this.state = default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.EMPTY;\n      return;\n    }\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = (0,require$_DOT__DOT__SLASH_extent_DOT_js.getIntersection)(maxSourceExtent, sourceProjExtent);\n      }\n    }\n    const targetResolution = targetTileGrid.getResolution(this.wrappedTileCoord_[0],);\n    const sourceResolution = (0,require$_DOT__DOT__SLASH_reproj_DOT_js.calculateSourceExtentResolution)(sourceProj, targetProj, limitedTargetExtent, targetResolution,);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      this.state = default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.EMPTY;\n      return;\n    }\n    const errorThresholdInPixels = errorThreshold !== undefined ? errorThreshold : require$_DOT__SLASH_common_DOT_js.ERROR_THRESHOLD;\n    this.triangulation_ = new default$$require$_DOT__SLASH_Triangulation_DOT_js.default(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution,);\n    if (this.triangulation_.getTriangles().length === 0) {\n      this.state = default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.EMPTY;\n      return;\n    }\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3],);\n        sourceExtent[3] = (0,require$_DOT__DOT__SLASH_math_DOT_js.clamp)(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3],);\n      } else {\n        sourceExtent = (0,require$_DOT__DOT__SLASH_extent_DOT_js.getIntersection)(sourceExtent, maxSourceExtent);\n      }\n    }\n    if (!(0,require$_DOT__DOT__SLASH_extent_DOT_js.getArea)(sourceExtent)) {\n      this.state = default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = (0,require$_DOT__DOT__SLASH_extent_DOT_js.getWidth)(sourceProjExtent);\n        worldsAway = Math.floor((sourceExtent[0] - sourceProjExtent[0]) / worldWidth,);\n      }\n      const sourceExtents = (0,require$_DOT__DOT__SLASH_extent_DOT_js.wrapAndSliceX)(sourceExtent.slice(), sourceProj, true,);\n      sourceExtents.forEach(extent => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(extent, this.sourceZ_,);\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n      if (this.sourceTiles_.length === 0) {\n        this.state = default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.EMPTY;\n      }\n    }\n  }\n  getImage() {\n    return this.canvas_;\n  }\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(source => {\n      const tile = source.tile;\n      if (tile && tile.getState() == default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({extent:extent, clipExtent:clipExtent, image:tile.getImage(),});\n      }\n    });\n    this.sourceTiles_.length = 0;\n    if (sources.length === 0) {\n      this.state = default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === \"number\" ? size : size[0];\n      const height = typeof size === \"number\" ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_,);\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_,);\n      this.canvas_ = (0,require$_DOT__DOT__SLASH_reproj_DOT_js.render)(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.interpolate,);\n      this.state = default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.LOADED;\n    }\n    this.changed();\n  }\n  load() {\n    if (this.state == default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.IDLE) {\n      this.state = default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.LOADING;\n      this.changed();\n      let leftToLoad = 0;\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.IDLE || state == default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.LOADING) {\n          leftToLoad++;\n          const sourceListenKey = (0,require$_DOT__DOT__SLASH_events_DOT_js.listen)(tile, default$$require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js.default.CHANGE, e => {\n            const state = tile.getState();\n            if (state == default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.LOADED || state == default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.ERROR || state == default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.EMPTY) {\n              (0,require$_DOT__DOT__SLASH_events_DOT_js.unlistenByKey)(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == default$$require$_DOT__DOT__SLASH_TileState_DOT_js.default.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(require$_DOT__DOT__SLASH_events_DOT_js.unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n  release() {\n    if (this.canvas_) {\n      (0,require$_DOT__DOT__SLASH_dom_DOT_js.releaseCanvas)(this.canvas_.getContext(\"2d\"));\n      require$_DOT__DOT__SLASH_reproj_DOT_js.canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\nconst $$default = ReprojTile;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$_DOT__DOT__SLASH_Tile_DOT_js","require$_DOT__DOT__SLASH_TileState_DOT_js","require$_DOT__DOT__SLASH_dom_DOT_js","require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js","require$_DOT__DOT__SLASH_events_DOT_js","require$_DOT__DOT__SLASH_extent_DOT_js","require$_DOT__DOT__SLASH_math_DOT_js","require$_DOT__DOT__SLASH_reproj_DOT_js","require$_DOT__SLASH_Triangulation_DOT_js","require$_DOT__SLASH_common_DOT_js","default$$require$_DOT__DOT__SLASH_TileState_DOT_js","esmDefault","default$$require$_DOT__SLASH_Triangulation_DOT_js","default$$require$_DOT__DOT__SLASH_events_SLASH_EventType_DOT_js","default$$require$_DOT__DOT__SLASH_Tile_DOT_js","ReprojTile","constructor","sourceProj","sourceTileGrid","targetProj","targetTileGrid","tileCoord","wrappedTileCoord","pixelRatio","gutter","getTileFunction","errorThreshold","renderEdges","options","IDLE","renderEdges_","undefined","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","canWrapX","getExtent","targetExtent","getTileCoordExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","getIntersection","getArea","state","EMPTY","sourceProjExtent","targetResolution","getResolution","sourceResolution","calculateSourceExtentResolution","isFinite","triangulation_","errorThresholdInPixels","ERROR_THRESHOLD","getTriangles","length","getZForResolution","sourceExtent","calculateSourceExtent","clamp","worldWidth","worldsAway","getWidth","Math","floor","sourceExtents","wrapAndSliceX","slice","forEach","extent","sourceRange","getTileRangeForExtentAndZ","srcX","minX","maxX","srcY","minY","maxY","tile","push","offset","getImage","reproject_","sources","source","getState","LOADED","clipExtent","image","ERROR","z","size","getTileSize","width","height","render","interpolate","changed","load","LOADING","leftToLoad","sourceListenKey","listen","CHANGE","e","unlistenByKey","unlistenSources_","setTimeout","bind","i","arr","release","releaseCanvas","getContext","canvasPool"]
}
