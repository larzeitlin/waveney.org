shadow$provide.module$node_modules$ol$tilegrid = function(global, require, module, exports) {
  function getForProjection(projection) {
    let tileGrid = projection.getDefaultTileGrid();
    tileGrid || (tileGrid = createForProjection(projection), projection.setDefaultTileGrid(tileGrid));
    return tileGrid;
  }
  function wrapX(tileGrid, tileCoord, projection) {
    const z = tileCoord[0], center = tileGrid.getTileCoordCenter(tileCoord);
    projection = extentFromProjection(projection);
    return (0,require$_DOT__SLASH_extent_DOT_js.containsCoordinate)(projection, center) ? tileCoord : (tileCoord = (0,require$_DOT__SLASH_extent_DOT_js.getWidth)(projection), center[0] += tileCoord * Math.ceil((projection[0] - center[0]) / tileCoord), tileGrid.getTileCoordForCoordAndZ(center, z));
  }
  function createForExtent(extent, maxZoom, tileSize, corner) {
    corner = void 0 !== corner ? corner : "top-left";
    maxZoom = resolutionsFromExtent(extent, maxZoom, tileSize);
    return new default$$require$_DOT__SLASH_tilegrid_SLASH_TileGrid_DOT_js.default({extent, origin:(0,require$_DOT__SLASH_extent_DOT_js.getCorner)(extent, corner), resolutions:maxZoom, tileSize});
  }
  function createXYZ(options) {
    options = options || {};
    const extent = options.extent || (0,require$_DOT__SLASH_proj_DOT_js.get)("EPSG:3857").getExtent();
    options = {extent, minZoom:options.minZoom, tileSize:options.tileSize, resolutions:resolutionsFromExtent(extent, options.maxZoom, options.tileSize, options.maxResolution)};
    return new default$$require$_DOT__SLASH_tilegrid_SLASH_TileGrid_DOT_js.default(options);
  }
  function resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {
    maxZoom = void 0 !== maxZoom ? maxZoom : require$_DOT__SLASH_tilegrid_SLASH_common_DOT_js.DEFAULT_MAX_ZOOM;
    tileSize = (0,require$_DOT__SLASH_size_DOT_js.toSize)(void 0 !== tileSize ? tileSize : require$_DOT__SLASH_tilegrid_SLASH_common_DOT_js.DEFAULT_TILE_SIZE);
    var height = (0,require$_DOT__SLASH_extent_DOT_js.getHeight)(extent);
    extent = (0,require$_DOT__SLASH_extent_DOT_js.getWidth)(extent);
    maxResolution = 0 < maxResolution ? maxResolution : Math.max(extent / tileSize[0], height / tileSize[1]);
    maxZoom += 1;
    tileSize = Array(maxZoom);
    for (height = 0; height < maxZoom; ++height) {
      tileSize[height] = maxResolution / Math.pow(2, height);
    }
    return tileSize;
  }
  function createForProjection(projection, maxZoom, tileSize, corner) {
    projection = extentFromProjection(projection);
    return createForExtent(projection, maxZoom, tileSize, corner);
  }
  function extentFromProjection(projection) {
    projection = (0,require$_DOT__SLASH_proj_DOT_js.get)(projection);
    let extent = projection.getExtent();
    extent || (projection = 180 * require$_DOT__SLASH_proj_DOT_js.METERS_PER_UNIT.degrees / projection.getMetersPerUnit(), extent = (0,require$_DOT__SLASH_extent_DOT_js.createOrUpdate)(-projection, -projection, projection, projection));
    return extent;
  }
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, TileGrid:{enumerable:!0, get:function() {
    return default$$require$_DOT__SLASH_tilegrid_SLASH_TileGrid_DOT_js.default;
  }}, WMTS:{enumerable:!0, get:function() {
    return require$_DOT__SLASH_tilegrid_SLASH_WMTS_DOT_js.default;
  }}, createForExtent:{enumerable:!0, get:function() {
    return createForExtent;
  }}, createForProjection:{enumerable:!0, get:function() {
    return createForProjection;
  }}, createXYZ:{enumerable:!0, get:function() {
    return createXYZ;
  }}, extentFromProjection:{enumerable:!0, get:function() {
    return extentFromProjection;
  }}, getForProjection:{enumerable:!0, get:function() {
    return getForProjection;
  }}, wrapX:{enumerable:!0, get:function() {
    return wrapX;
  }}});
  var require$_DOT__SLASH_extent_DOT_js = require("module$node_modules$ol$extent"), require$_DOT__SLASH_proj_DOT_js = require("module$node_modules$ol$proj"), require$_DOT__SLASH_size_DOT_js = require("module$node_modules$ol$size");
  global = require("module$node_modules$ol$tilegrid$TileGrid");
  var require$_DOT__SLASH_tilegrid_SLASH_common_DOT_js = require("module$node_modules$ol$tilegrid$common"), require$_DOT__SLASH_tilegrid_SLASH_WMTS_DOT_js = require("module$node_modules$ol$tilegrid$WMTS"), default$$require$_DOT__SLASH_tilegrid_SLASH_TileGrid_DOT_js = require.esmDefault(global);
};

//# sourceMappingURL=module$node_modules$ol$tilegrid.js.map
