shadow$provide.module$node_modules$ol$geom$flat$deflate = function(global, require, module, exports) {
  function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {
    for (let i = 0, ii = coordinate.length; i < ii; ++i) {
      flatCoordinates[offset++] = coordinate[i];
    }
    return offset;
  }
  function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {
    for (let i = 0, ii = coordinates.length; i < ii; ++i) {
      const coordinate = coordinates[i];
      for (let j = 0; j < stride; ++j) {
        flatCoordinates[offset++] = coordinate[j];
      }
    }
    return offset;
  }
  function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, ends) {
    ends = ends ? ends : [];
    let i = 0;
    for (let j = 0, jj = coordinatess.length; j < jj; ++j) {
      offset = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride), ends[i++] = offset;
    }
    ends.length = i;
    return ends;
  }
  function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, endss) {
    endss = endss ? endss : [];
    let i = 0;
    for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {
      const ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);
      0 === ends.length && (ends[0] = offset);
      endss[i++] = ends;
      offset = ends[ends.length - 1];
    }
    endss.length = i;
    return endss;
  }
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, deflateCoordinate:{enumerable:!0, get:function() {
    return deflateCoordinate;
  }}, deflateCoordinates:{enumerable:!0, get:function() {
    return deflateCoordinates;
  }}, deflateCoordinatesArray:{enumerable:!0, get:function() {
    return deflateCoordinatesArray;
  }}, deflateMultiCoordinatesArray:{enumerable:!0, get:function() {
    return deflateMultiCoordinatesArray;
  }}});
};

//# sourceMappingURL=module$node_modules$ol$geom$flat$deflate.js.map
