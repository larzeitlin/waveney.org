{
"version":3,
"file":"module$node_modules$ol$render$canvas$Builder.js",
"lineCount":203,
"mappings":"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",
"sources":["node_modules/ol/render/canvas/Builder.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$render$canvas$Builder\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js = require(\"../../array.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_colorlike_DOT_js = require(\"../../colorlike.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_SLASH_Relationship_DOT_js = require(\"../../extent/Relationship.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js = require(\"../../extent.js\");\nvar require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_inflate_DOT_js = require(\"../../geom/flat/inflate.js\");\nvar require$_DOT__DOT__SLASH_VectorContext_DOT_js = require(\"../VectorContext.js\");\nvar require$_DOT__DOT__SLASH_canvas_DOT_js = require(\"../canvas.js\");\nvar require$_DOT__SLASH_Instruction_DOT_js = require(\"./Instruction.js\");\nvar default$$require$_DOT__SLASH_Instruction_DOT_js = require.esmDefault(require$_DOT__SLASH_Instruction_DOT_js);\nvar default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_SLASH_Relationship_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_SLASH_Relationship_DOT_js);\nvar default$$require$_DOT__DOT__SLASH_VectorContext_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_VectorContext_DOT_js);\nclass CanvasBuilder extends default$$require$_DOT__DOT__SLASH_VectorContext_DOT_js.default {\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n    this.tolerance = tolerance;\n    this.maxExtent = maxExtent;\n    this.pixelRatio = pixelRatio;\n    this.maxLineWidth = 0;\n    this.resolution = resolution;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_ = null;\n    this.bufferedMaxExtent_ = null;\n    this.instructions = [];\n    this.coordinates = [];\n    this.tmpCoordinate_ = [];\n    this.hitDetectionInstructions = [];\n    this.state = {};\n  }\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  }\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if ((0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.containsCoordinate)(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n  appendFlatLineCoordinates(flatCoordinates, offset, end, stride, closed, skipFirst,) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.coordinateRelationship)(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_SLASH_Relationship_DOT_js.default.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n    if (closed && skipped || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false,);\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    switch(type) {\n      case \"MultiPolygon\":\n        flatCoordinates = geometry.getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss = geometry.getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds,);\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.CUSTOM, builderBegin, builderEndss, geometry, renderer, require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_inflate_DOT_js.inflateMultiCoordinatesArray, index,]);\n        this.hitDetectionInstructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.CUSTOM, builderBegin, builderEndss, geometry, hitDetectionRenderer || renderer, require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_inflate_DOT_js.inflateMultiCoordinatesArray, index,]);\n        break;\n      case \"Polygon\":\n      case \"MultiLineString\":\n        builderEnds = [];\n        flatCoordinates = type == \"Polygon\" ? geometry.getOrientedFlatCoordinates() : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(flatCoordinates, 0, geometry.getEnds(), stride, builderEnds,);\n        this.instructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.CUSTOM, builderBegin, builderEnds, geometry, renderer, require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_inflate_DOT_js.inflateCoordinatesArray, index,]);\n        this.hitDetectionInstructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.CUSTOM, builderBegin, builderEnds, geometry, hitDetectionRenderer || renderer, require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_inflate_DOT_js.inflateCoordinatesArray, index,]);\n        break;\n      case \"LineString\":\n      case \"Circle\":\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false,);\n        this.instructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.CUSTOM, builderBegin, builderEnd, geometry, renderer, require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_inflate_DOT_js.inflateCoordinates, index,]);\n        this.hitDetectionInstructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.CUSTOM, builderBegin, builderEnd, geometry, hitDetectionRenderer || renderer, require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_inflate_DOT_js.inflateCoordinates, index,]);\n        break;\n      case \"MultiPoint\":\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        if (builderEnd > builderBegin) {\n          this.instructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.CUSTOM, builderBegin, builderEnd, geometry, renderer, require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_inflate_DOT_js.inflateCoordinates, index,]);\n          this.hitDetectionInstructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.CUSTOM, builderBegin, builderEnd, geometry, hitDetectionRenderer || renderer, require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_inflate_DOT_js.inflateCoordinates, index,]);\n        }\n        break;\n      case \"Point\":\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n        this.instructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.CUSTOM, builderBegin, builderEnd, geometry, renderer, undefined, index,]);\n        this.hitDetectionInstructions.push([default$$require$_DOT__SLASH_Instruction_DOT_js.default.CUSTOM, builderBegin, builderEnd, geometry, hitDetectionRenderer || renderer, undefined, index,]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [default$$require$_DOT__SLASH_Instruction_DOT_js.default.BEGIN_GEOMETRY, feature, 0, geometry, index,];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [default$$require$_DOT__SLASH_Instruction_DOT_js.default.BEGIN_GEOMETRY, feature, 0, geometry, index,];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n  finish() {\n    return {instructions:this.instructions, hitDetectionInstructions:this.hitDetectionInstructions, coordinates:this.coordinates,};\n  }\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    hitDetectionInstructions.reverse();\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = instruction[0];\n      if (type == default$$require$_DOT__SLASH_Instruction_DOT_js.default.END_GEOMETRY) {\n        begin = i;\n      } else if (type == default$$require$_DOT__SLASH_Instruction_DOT_js.default.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js.reverseSubArray)(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n  fillStyleToState(fillStyle, state = {},) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale = fillStyleColor && typeof fillStyleColor === \"object\" && \"src\" in fillStyleColor ? this.pixelRatio : 1;\n      state.fillStyle = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_colorlike_DOT_js.asColorLike)(fillStyleColor ? fillStyleColor : require$_DOT__DOT__SLASH_canvas_DOT_js.defaultFillStyle,);\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n  strokeStyleToState(strokeStyle, state = {},) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_colorlike_DOT_js.asColorLike)(strokeStyleColor ? strokeStyleColor : require$_DOT__DOT__SLASH_canvas_DOT_js.defaultStrokeStyle,);\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ? strokeStyleLineCap : require$_DOT__DOT__SLASH_canvas_DOT_js.defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ? strokeStyleLineDash.slice() : require$_DOT__DOT__SLASH_canvas_DOT_js.defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ? strokeStyleLineDashOffset : require$_DOT__DOT__SLASH_canvas_DOT_js.defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ? strokeStyleLineJoin : require$_DOT__DOT__SLASH_canvas_DOT_js.defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ? strokeStyleWidth : require$_DOT__DOT__SLASH_canvas_DOT_js.defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ? strokeStyleMiterLimit : require$_DOT__DOT__SLASH_canvas_DOT_js.defaultMiterLimit;\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    const fillInstruction = [default$$require$_DOT__SLASH_Instruction_DOT_js.default.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== \"string\") {\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n  createStroke(state) {\n    return [default$$require$_DOT__SLASH_Instruction_DOT_js.default.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash ? this.applyPixelRatio(state.lineDash) : null, state.lineDashOffset * this.pixelRatio,];\n  }\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== \"string\" || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle || state.currentLineCap != lineCap || lineDash != state.currentLineDash && !(0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js.equals)(state.currentLineDash, lineDash) || state.currentLineDashOffset != lineDashOffset || state.currentLineJoin != lineJoin || state.currentLineWidth != lineWidth || state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [default$$require$_DOT__SLASH_Instruction_DOT_js.default.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.clone)(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = this.resolution * (this.maxLineWidth + 1) / 2;\n        (0,require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js.buffer)(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\nconst $$default = CanvasBuilder;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_array_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_colorlike_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_SLASH_Relationship_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_DOT_js","require$_DOT__DOT__SLASH__DOT__DOT__SLASH_geom_SLASH_flat_SLASH_inflate_DOT_js","require$_DOT__DOT__SLASH_VectorContext_DOT_js","require$_DOT__DOT__SLASH_canvas_DOT_js","require$_DOT__SLASH_Instruction_DOT_js","default$$require$_DOT__SLASH_Instruction_DOT_js","esmDefault","default$$require$_DOT__DOT__SLASH__DOT__DOT__SLASH_extent_SLASH_Relationship_DOT_js","default$$require$_DOT__DOT__SLASH_VectorContext_DOT_js","CanvasBuilder","constructor","tolerance","maxExtent","resolution","pixelRatio","maxLineWidth","bufferedMaxExtent_","beginGeometryInstruction2_","beginGeometryInstruction1_","instructions","coordinates","tmpCoordinate_","hitDetectionInstructions","state","applyPixelRatio","dashArray","map","dash","appendFlatPointCoordinates","flatCoordinates","stride","extent","getBufferedMaxExtent","tmpCoord","myEnd","length","i","ii","containsCoordinate","appendFlatLineCoordinates","offset","end","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","coordinateRelationship","INTERSECTING","drawCustomCoordinates_","ends","builderEnds","builderEnd","push","drawCustom","geometry","feature","renderer","hitDetectionRenderer","index","beginGeometry","type","getType","getStride","builderBegin","getOrientedFlatCoordinates","builderEndss","endss","getEndss","myEnds","CUSTOM","inflateMultiCoordinatesArray","getFlatCoordinates","getEnds","inflateCoordinatesArray","inflateCoordinates","undefined","endGeometry","BEGIN_GEOMETRY","finish","reverseHitDetectionInstructions","reverse","n","instruction","begin","END_GEOMETRY","reverseSubArray","fillStyleToState","fillStyle","fillStyleColor","getColor","fillPatternScale","asColorLike","defaultFillStyle","strokeStyleToState","strokeStyle","strokeStyleColor","defaultStrokeStyle","strokeStyleLineCap","getLineCap","lineCap","defaultLineCap","strokeStyleLineDash","getLineDash","lineDash","slice","defaultLineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","getLineJoin","lineJoin","defaultLineJoin","strokeStyleWidth","getWidth","lineWidth","defaultLineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","defaultMiterLimit","setFillStrokeStyle","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","call","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","equals","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","clone","buffer"]
}
