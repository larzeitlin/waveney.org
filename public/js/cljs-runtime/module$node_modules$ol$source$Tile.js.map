{
"version":3,
"file":"module$node_modules$ol$source$Tile.js",
"lineCount":78,
"mappings":"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",
"sources":["node_modules/ol/source/Tile.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$source$Tile\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, TileSourceEvent:{enumerable:true, get:function() {\n  return TileSourceEvent;\n}}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH_events_SLASH_Event_DOT_js = require(\"../events/Event.js\");\nvar require$_DOT__DOT__SLASH_size_DOT_js = require(\"../size.js\");\nvar require$_DOT__DOT__SLASH_tilecoord_DOT_js = require(\"../tilecoord.js\");\nvar require$_DOT__DOT__SLASH_tilegrid_DOT_js = require(\"../tilegrid.js\");\nvar require$_DOT__DOT__SLASH_util_DOT_js = require(\"../util.js\");\nvar require$_DOT__SLASH_Source_DOT_js = require(\"./Source.js\");\nvar default$$require$_DOT__DOT__SLASH_events_SLASH_Event_DOT_js = require.esmDefault(require$_DOT__DOT__SLASH_events_SLASH_Event_DOT_js);\nvar default$$require$_DOT__SLASH_Source_DOT_js = require.esmDefault(require$_DOT__SLASH_Source_DOT_js);\nclass TileSource extends default$$require$_DOT__SLASH_Source_DOT_js.default {\n  constructor(options) {\n    super({attributions:options.attributions, attributionsCollapsible:options.attributionsCollapsible, projection:options.projection, state:options.state, wrapX:options.wrapX, interpolate:options.interpolate,});\n    this.on;\n    this.once;\n    this.un;\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      (0,require$_DOT__DOT__SLASH_size_DOT_js.toSize)(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n    this.tmpSize = [0, 0];\n    this.key_ = options.key || (0,require$_DOT__DOT__SLASH_util_DOT_js.getUid)(this);\n    this.tileOptions = {transition:options.transition, interpolate:options.interpolate,};\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n  getGutterForProjection(projection) {\n    return 0;\n  }\n  getKey() {\n    return this.key_;\n  }\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n  getResolutions(projection) {\n    const tileGrid = projection ? this.getTileGridForProjection(projection) : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n  getTile(z, x, y, pixelRatio, projection) {\n    return (0,require$_DOT__DOT__SLASH_util_DOT_js.abstract)();\n  }\n  getTileGrid() {\n    return this.tileGrid;\n  }\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return (0,require$_DOT__DOT__SLASH_tilegrid_DOT_js.getForProjection)(projection);\n    }\n    return this.tileGrid;\n  }\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = (0,require$_DOT__DOT__SLASH_size_DOT_js.toSize)(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return (0,require$_DOT__DOT__SLASH_size_DOT_js.scale)(tileSize, tilePixelRatio, this.tmpSize);\n  }\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = projection !== undefined ? this.getTileGridForProjection(gridProjection) : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = (0,require$_DOT__DOT__SLASH_tilegrid_DOT_js.wrapX)(tileGrid, tileCoord, gridProjection);\n    }\n    return (0,require$_DOT__DOT__SLASH_tilecoord_DOT_js.withinExtentAndZ)(tileCoord, tileGrid) ? tileCoord : null;\n  }\n  clear() {\n  }\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\nclass TileSourceEvent extends default$$require$_DOT__DOT__SLASH_events_SLASH_Event_DOT_js.default {\n  constructor(type, tile) {\n    super(type);\n    this.tile = tile;\n  }\n}\nconst $$default = TileSource;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperties","__esModule","enumerable","value","TileSourceEvent","get","default","$$default","require$_DOT__DOT__SLASH_events_SLASH_Event_DOT_js","require$_DOT__DOT__SLASH_size_DOT_js","require$_DOT__DOT__SLASH_tilecoord_DOT_js","require$_DOT__DOT__SLASH_tilegrid_DOT_js","require$_DOT__DOT__SLASH_util_DOT_js","require$_DOT__SLASH_Source_DOT_js","default$$require$_DOT__DOT__SLASH_events_SLASH_Event_DOT_js","esmDefault","default$$require$_DOT__SLASH_Source_DOT_js","TileSource","constructor","options","attributions","attributionsCollapsible","projection","state","wrapX","interpolate","on","once","un","tilePixelRatio_","undefined","tilePixelRatio","tileGrid","tileSize","toSize","getTileSize","getMinZoom","tmpSize","key_","key","getUid","tileOptions","transition","zDirection","getGutterForProjection","getKey","setKey","changed","getResolutions","getTileGridForProjection","getTile","z","x","y","pixelRatio","abstract","getTileGrid","getForProjection","getTilePixelRatio","getTilePixelSize","scale","getTileCoordForTileUrlFunction","tileCoord","gridProjection","getProjection","getWrapX","isGlobal","withinExtentAndZ","clear","refresh","type","tile"]
}
