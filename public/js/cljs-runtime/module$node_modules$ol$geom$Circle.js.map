{
"version":3,
"file":"module$node_modules$ol$geom$Circle.js",
"lineCount":107,
"mappings":"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",
"sources":["node_modules/ol/geom/Circle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$geom$Circle\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, default:{enumerable:true, get:function() {\n  return $$default;\n}}});\nvar require$_DOT__DOT__SLASH_extent_DOT_js = require(\"../extent.js\");\nvar require$_DOT__SLASH_SimpleGeometry_DOT_js = require(\"./SimpleGeometry.js\");\nvar require$_DOT__SLASH_flat_SLASH_deflate_DOT_js = require(\"./flat/deflate.js\");\nvar require$_DOT__SLASH_flat_SLASH_transform_DOT_js = require(\"./flat/transform.js\");\nvar default$$require$_DOT__SLASH_SimpleGeometry_DOT_js = require.esmDefault(require$_DOT__SLASH_SimpleGeometry_DOT_js);\nclass Circle extends default$$require$_DOT__SLASH_SimpleGeometry_DOT_js.default {\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n  clone() {\n    const circle = new Circle(this.flatCoordinates.slice(), undefined, this.layout,);\n    circle.applyProperties(this);\n    return circle;\n  }\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return (0,require$_DOT__DOT__SLASH_extent_DOT_js.createOrUpdate)(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent,);\n  }\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n  getType() {\n    return \"Circle\";\n  }\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if ((0,require$_DOT__DOT__SLASH_extent_DOT_js.intersects)(extent, circleExtent)) {\n      const center = this.getCenter();\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n      return (0,require$_DOT__DOT__SLASH_extent_DOT_js.forEachCorner)(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const flatCoordinates = this.flatCoordinates;\n    let offset = (0,require$_DOT__SLASH_flat_SLASH_deflate_DOT_js.deflateCoordinate)(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n  getCoordinates() {\n    return null;\n  }\n  setCoordinates(coordinates, layout) {\n  }\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter((0,require$_DOT__SLASH_flat_SLASH_transform_DOT_js.rotate)(center, 0, center.length, stride, angle, anchor, center),);\n    this.changed();\n  }\n}\nCircle.prototype.transform;\nconst $$default = Circle;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperties","__esModule","enumerable","value","default","get","$$default","require$_DOT__DOT__SLASH_extent_DOT_js","require$_DOT__SLASH_SimpleGeometry_DOT_js","require$_DOT__SLASH_flat_SLASH_deflate_DOT_js","require$_DOT__SLASH_flat_SLASH_transform_DOT_js","default$$require$_DOT__SLASH_SimpleGeometry_DOT_js","esmDefault","Circle","constructor","center","radius","layout","undefined","setFlatCoordinates","setCenterAndRadius","clone","circle","flatCoordinates","slice","applyProperties","closestPointXY","x","y","closestPoint","minSquaredDistance","dx","dy","squaredDistance","i","stride","delta","getRadius","Math","sqrt","length","containsXY","getRadiusSquared_","getCenter","computeExtent","extent","createOrUpdate","getType","intersectsExtent","circleExtent","getExtent","intersects","forEachCorner","intersectsCoordinate","bind","setCenter","changed","setLayout","offset","deflateCoordinate","ii","getCoordinates","setCoordinates","coordinates","setRadius","rotate","angle","anchor","getStride","prototype","transform"]
}
