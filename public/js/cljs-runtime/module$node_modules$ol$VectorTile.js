shadow$provide.module$node_modules$ol$VectorTile = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  global = require("module$node_modules$ol$Tile");
  module = require("module$node_modules$ol$TileState");
  var default$$require$_DOT__SLASH_TileState_DOT_js = require.esmDefault(module);
  require = require.esmDefault(global);
  class VectorTile extends require.default {
    constructor(tileCoord, state, src, format, tileLoadFunction, options) {
      super(tileCoord, state, options);
      this.extent = null;
      this.format_ = format;
      this.features_ = null;
      this.loader_;
      this.projection = null;
      this.resolution;
      this.tileLoadFunction_ = tileLoadFunction;
      this.key = this.url_ = src;
    }
    getTileUrl() {
      return this.url_;
    }
    getFormat() {
      return this.format_;
    }
    getFeatures() {
      return this.features_;
    }
    load() {
      this.state == default$$require$_DOT__SLASH_TileState_DOT_js.default.IDLE && (this.setState(default$$require$_DOT__SLASH_TileState_DOT_js.default.LOADING), this.tileLoadFunction_(this, this.url_), this.loader_ && this.loader_(this.extent, this.resolution, this.projection));
    }
    onLoad(features, dataProjection) {
      this.setFeatures(features);
    }
    onError() {
      this.setState(default$$require$_DOT__SLASH_TileState_DOT_js.default.ERROR);
    }
    setFeatures(features) {
      this.features_ = features;
      this.setState(default$$require$_DOT__SLASH_TileState_DOT_js.default.LOADED);
    }
    setLoader(loader) {
      this.loader_ = loader;
    }
  }
  const $$default = VectorTile;
};

//# sourceMappingURL=module$node_modules$ol$VectorTile.js.map
