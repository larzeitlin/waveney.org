{
"version":3,
"file":"module$node_modules$ol$transform.js",
"lineCount":129,
"mappings":"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",
"sources":["node_modules/ol/transform.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$transform\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, apply:{enumerable:true, get:function() {\n  return apply;\n}}, compose:{enumerable:true, get:function() {\n  return compose;\n}}, composeCssTransform:{enumerable:true, get:function() {\n  return composeCssTransform;\n}}, create:{enumerable:true, get:function() {\n  return create;\n}}, determinant:{enumerable:true, get:function() {\n  return determinant;\n}}, invert:{enumerable:true, get:function() {\n  return invert;\n}}, makeInverse:{enumerable:true, get:function() {\n  return makeInverse;\n}}, makeScale:{enumerable:true, get:function() {\n  return makeScale;\n}}, multiply:{enumerable:true, get:function() {\n  return multiply;\n}}, reset:{enumerable:true, get:function() {\n  return reset;\n}}, rotate:{enumerable:true, get:function() {\n  return rotate;\n}}, scale:{enumerable:true, get:function() {\n  return scale;\n}}, set:{enumerable:true, get:function() {\n  return set;\n}}, setFromArray:{enumerable:true, get:function() {\n  return setFromArray;\n}}, toString:{enumerable:true, get:function() {\n  return toString;\n}}, translate:{enumerable:true, get:function() {\n  return translate;\n}}});\nvar require$_DOT__SLASH_asserts_DOT_js = require(\"./asserts.js\");\nconst tmp_ = new Array(6);\nfunction create() {\n  return [1, 0, 0, 1, 0, 0];\n}\nfunction reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\nfunction multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n  return transform1;\n}\nfunction set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\nfunction setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\nfunction apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\nfunction rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\nfunction scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\nfunction makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\nfunction translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\nfunction compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\nfunction composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\nfunction invert(source) {\n  return makeInverse(source, source);\n}\nfunction makeInverse(target, source) {\n  const det = determinant(source);\n  (0,require$_DOT__SLASH_asserts_DOT_js.assert)(det !== 0, \"Transformation matrix cannot be inverted\");\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n  return target;\n}\nfunction determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\nfunction toString(mat) {\n  const transformString = \"matrix(\" + mat.map((value, i) => Math.round(value * matrixPrecision[i]) / matrixPrecision[i],).join(\", \") + \")\";\n  return transformString;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","create","reset","transform","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","a","b","c","d","e","f","setFromArray","apply","coordinate","x","y","rotate","angle","cos","Math","sin","tmp_","scale","makeScale","target","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","composeCssTransform","toString","invert","source","makeInverse","det","determinant","require$_DOT__SLASH_asserts_DOT_js","assert","mat","map","value","i","round","matrixPrecision","join","Object","defineProperties","__esModule","enumerable","get","Array"]
}
