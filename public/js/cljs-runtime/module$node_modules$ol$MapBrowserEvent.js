shadow$provide.module$node_modules$ol$MapBrowserEvent = function(global, require, module, exports) {
  Object.defineProperties(exports, {__esModule:{enumerable:!0, value:!0}, default:{enumerable:!0, get:function() {
    return $$default;
  }}});
  global = require("module$node_modules$ol$MapEvent");
  require = require.esmDefault(global);
  class MapBrowserEvent extends require.default {
    constructor(type, map, originalEvent, dragging, frameState, activePointers) {
      super(type, map, frameState);
      this.originalEvent = originalEvent;
      this.coordinate_ = this.pixel_ = null;
      this.dragging = void 0 !== dragging ? dragging : !1;
      this.activePointers = activePointers;
    }
    get pixel() {
      this.pixel_ || (this.pixel_ = this.map.getEventPixel(this.originalEvent));
      return this.pixel_;
    }
    set pixel(pixel) {
      this.pixel_ = pixel;
    }
    get coordinate() {
      this.coordinate_ || (this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel));
      return this.coordinate_;
    }
    set coordinate(coordinate) {
      this.coordinate_ = coordinate;
    }
    preventDefault() {
      super.preventDefault();
      "preventDefault" in this.originalEvent && this.originalEvent.preventDefault();
    }
    stopPropagation() {
      super.stopPropagation();
      "stopPropagation" in this.originalEvent && this.originalEvent.stopPropagation();
    }
  }
  const $$default = MapBrowserEvent;
};

//# sourceMappingURL=module$node_modules$ol$MapBrowserEvent.js.map
