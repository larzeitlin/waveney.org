{
"version":3,
"file":"module$node_modules$ol$proj.js",
"lineCount":304,
"mappings":"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",
"sources":["node_modules/ol/proj.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$proj\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, METERS_PER_UNIT:{enumerable:true, get:function() {\n  return require$_DOT__SLASH_proj_SLASH_Units_DOT_js.METERS_PER_UNIT;\n}}, Projection:{enumerable:true, get:function() {\n  return default$$require$_DOT__SLASH_proj_SLASH_Projection_DOT_js.default;\n}}, addCommon:{enumerable:true, get:function() {\n  return addCommon;\n}}, addCoordinateTransforms:{enumerable:true, get:function() {\n  return addCoordinateTransforms;\n}}, addEquivalentProjections:{enumerable:true, get:function() {\n  return addEquivalentProjections;\n}}, addEquivalentTransforms:{enumerable:true, get:function() {\n  return addEquivalentTransforms;\n}}, addProjection:{enumerable:true, get:function() {\n  return addProjection;\n}}, addProjections:{enumerable:true, get:function() {\n  return addProjections;\n}}, clearAllProjections:{enumerable:true, get:function() {\n  return clearAllProjections;\n}}, clearUserProjection:{enumerable:true, get:function() {\n  return clearUserProjection;\n}}, cloneTransform:{enumerable:true, get:function() {\n  return cloneTransform;\n}}, createProjection:{enumerable:true, get:function() {\n  return createProjection;\n}}, createSafeCoordinateTransform:{enumerable:true, get:function() {\n  return createSafeCoordinateTransform;\n}}, createTransformFromCoordinateTransform:{enumerable:true, get:function() {\n  return createTransformFromCoordinateTransform;\n}}, disableCoordinateWarning:{enumerable:true, get:function() {\n  return disableCoordinateWarning;\n}}, equivalent:{enumerable:true, get:function() {\n  return equivalent;\n}}, fromLonLat:{enumerable:true, get:function() {\n  return fromLonLat;\n}}, fromUserCoordinate:{enumerable:true, get:function() {\n  return fromUserCoordinate;\n}}, fromUserExtent:{enumerable:true, get:function() {\n  return fromUserExtent;\n}}, fromUserResolution:{enumerable:true, get:function() {\n  return fromUserResolution;\n}}, get:{enumerable:true, get:function() {\n  return get;\n}}, getPointResolution:{enumerable:true, get:function() {\n  return getPointResolution;\n}}, getTransform:{enumerable:true, get:function() {\n  return getTransform;\n}}, getTransformFromProjections:{enumerable:true, get:function() {\n  return getTransformFromProjections;\n}}, getUserProjection:{enumerable:true, get:function() {\n  return getUserProjection;\n}}, identityTransform:{enumerable:true, get:function() {\n  return identityTransform;\n}}, setUserProjection:{enumerable:true, get:function() {\n  return setUserProjection;\n}}, toLonLat:{enumerable:true, get:function() {\n  return toLonLat;\n}}, toUserCoordinate:{enumerable:true, get:function() {\n  return toUserCoordinate;\n}}, toUserExtent:{enumerable:true, get:function() {\n  return toUserExtent;\n}}, toUserResolution:{enumerable:true, get:function() {\n  return toUserResolution;\n}}, transform:{enumerable:true, get:function() {\n  return transform;\n}}, transformExtent:{enumerable:true, get:function() {\n  return transformExtent;\n}}, transformWithProjections:{enumerable:true, get:function() {\n  return transformWithProjections;\n}}, useGeographic:{enumerable:true, get:function() {\n  return useGeographic;\n}}});\nvar require$_DOT__SLASH_console_DOT_js = require(\"./console.js\");\nvar require$_DOT__SLASH_coordinate_DOT_js = require(\"./coordinate.js\");\nvar require$_DOT__SLASH_extent_DOT_js = require(\"./extent.js\");\nvar require$_DOT__SLASH_math_DOT_js = require(\"./math.js\");\nvar require$_DOT__SLASH_proj_SLASH_Projection_DOT_js = require(\"./proj/Projection.js\");\nvar require$_DOT__SLASH_proj_SLASH_Units_DOT_js = require(\"./proj/Units.js\");\nvar require$_DOT__SLASH_proj_SLASH_epsg3857_DOT_js = require(\"./proj/epsg3857.js\");\nvar require$_DOT__SLASH_proj_SLASH_epsg4326_DOT_js = require(\"./proj/epsg4326.js\");\nvar require$_DOT__SLASH_proj_SLASH_projections_DOT_js = require(\"./proj/projections.js\");\nvar require$_DOT__SLASH_proj_SLASH_transforms_DOT_js = require(\"./proj/transforms.js\");\nvar require$_DOT__SLASH_proj_SLASH_utm_DOT_js = require(\"./proj/utm.js\");\nvar require$_DOT__SLASH_sphere_DOT_js = require(\"./sphere.js\");\nvar default$$require$_DOT__SLASH_proj_SLASH_Projection_DOT_js = require.esmDefault(require$_DOT__SLASH_proj_SLASH_Projection_DOT_js);\nconst transformFactories = [require$_DOT__SLASH_proj_SLASH_utm_DOT_js.makeTransforms];\nconst projectionFactories = [require$_DOT__SLASH_proj_SLASH_utm_DOT_js.makeProjection];\nlet showCoordinateWarning = true;\nfunction disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\nfunction cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\nfunction identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\nfunction addProjection(projection) {\n  (0,require$_DOT__SLASH_proj_SLASH_projections_DOT_js.add)(projection.getCode(), projection);\n  (0,require$_DOT__SLASH_proj_SLASH_transforms_DOT_js.add)(projection, projection, cloneTransform);\n}\nfunction addProjections(projections) {\n  projections.forEach(addProjection);\n}\nfunction get(projectionLike) {\n  if (!(typeof projectionLike === \"string\")) {\n    return projectionLike;\n  }\n  const projection = (0,require$_DOT__SLASH_proj_SLASH_projections_DOT_js.get)(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\nfunction getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution = pointResolution * metersPerUnit / require$_DOT__SLASH_proj_SLASH_Units_DOT_js.METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if (projUnits == \"degrees\" && !units || units == \"degrees\") {\n      pointResolution = resolution;\n    } else {\n      const toEPSG4326 = getTransformFromProjections(projection, get(\"EPSG:4326\"),);\n      if (!toEPSG4326 && projUnits !== \"degrees\") {\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [point[0] - resolution / 2, point[1], point[0] + resolution / 2, point[1], point[0], point[1] - resolution / 2, point[0], point[1] + resolution / 2,];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = (0,require$_DOT__SLASH_sphere_DOT_js.getDistance)(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = (0,require$_DOT__SLASH_sphere_DOT_js.getDistance)(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units ? require$_DOT__SLASH_proj_SLASH_Units_DOT_js.METERS_PER_UNIT[units] : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\nfunction addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        (0,require$_DOT__SLASH_proj_SLASH_transforms_DOT_js.add)(source, destination, cloneTransform);\n      }\n    });\n  });\n}\nfunction addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform,) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      (0,require$_DOT__SLASH_proj_SLASH_transforms_DOT_js.add)(projection1, projection2, forwardTransform);\n      (0,require$_DOT__SLASH_proj_SLASH_transforms_DOT_js.add)(projection2, projection1, inverseTransform);\n    });\n  });\n}\nfunction clearAllProjections() {\n  (0,require$_DOT__SLASH_proj_SLASH_projections_DOT_js.clear)();\n  (0,require$_DOT__SLASH_proj_SLASH_transforms_DOT_js.clear)();\n}\nfunction createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === \"string\") {\n    return get(projection);\n  }\n  return projection;\n}\nfunction createTransformFromCoordinateTransform(coordTransform) {\n  return function(input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension !== undefined ? dimension : 2;\n    stride = stride ?? dimension;\n    output = output !== undefined ? output : new Array(length);\n    for (let i = 0; i < length; i += stride) {\n      const point = coordTransform(input.slice(i, i + dimension));\n      const pointLength = point.length;\n      for (let j = 0, jj = stride; j < jj; ++j) {\n        output[i + j] = j >= pointLength ? input[i + j] : point[j];\n      }\n    }\n    return output;\n  };\n}\nfunction addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  (0,require$_DOT__SLASH_proj_SLASH_transforms_DOT_js.add)(sourceProj, destProj, createTransformFromCoordinateTransform(forward),);\n  (0,require$_DOT__SLASH_proj_SLASH_transforms_DOT_js.add)(destProj, sourceProj, createTransformFromCoordinateTransform(inverse),);\n}\nfunction fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(coordinate, \"EPSG:4326\", projection !== undefined ? projection : \"EPSG:3857\",);\n}\nfunction toLonLat(coordinate, projection) {\n  const lonLat = transform(coordinate, projection !== undefined ? projection : \"EPSG:3857\", \"EPSG:4326\",);\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = (0,require$_DOT__SLASH_math_DOT_js.modulo)(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\nfunction equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\nfunction getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = (0,require$_DOT__SLASH_proj_SLASH_transforms_DOT_js.get)(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n  let sourceTransforms = null;\n  let destinationTransforms = null;\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n  const intermediateCode = \"EPSG:4326\";\n  if (!destinationTransforms) {\n    const toDestination = (0,require$_DOT__SLASH_proj_SLASH_transforms_DOT_js.get)(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(sourceTransforms.inverse, toDestination,);\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = (0,require$_DOT__SLASH_proj_SLASH_transforms_DOT_js.get)(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(fromSource, destinationTransforms.forward,);\n    }\n  } else {\n    transformFunc = composeTransformFuncs(sourceTransforms.inverse, destinationTransforms.forward,);\n  }\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    (0,require$_DOT__SLASH_proj_SLASH_transforms_DOT_js.add)(source, destination, transformFunc);\n  }\n  return transformFunc;\n}\nfunction composeTransformFuncs(t1, t2) {\n  return function(input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\nfunction getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\nfunction transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(`No transform available between ${sourceCode} and ${destinationCode}`,);\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\nfunction transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return (0,require$_DOT__SLASH_extent_DOT_js.applyTransform)(extent, transformFunc, undefined, stops);\n}\nfunction transformWithProjections(point, sourceProjection, destinationProjection,) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection,);\n  return transformFunc(point);\n}\nlet userProjection = null;\nfunction setUserProjection(projection) {\n  userProjection = get(projection);\n}\nfunction clearUserProjection() {\n  userProjection = null;\n}\nfunction getUserProjection() {\n  return userProjection;\n}\nfunction useGeographic() {\n  setUserProjection(\"EPSG:4326\");\n}\nfunction toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\nfunction fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (showCoordinateWarning && !(0,require$_DOT__SLASH_coordinate_DOT_js.equals)(coordinate, [0, 0]) && coordinate[0] >= -180 && coordinate[0] <= 180 && coordinate[1] >= -90 && coordinate[1] <= 90) {\n      showCoordinateWarning = false;\n      (0,require$_DOT__SLASH_console_DOT_js.warn)(\"Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.\",);\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\nfunction toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\nfunction fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\nfunction toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit ? resolution * sourceMetersPerUnit / userMetersPerUnit : resolution;\n}\nfunction fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit ? resolution * userMetersPerUnit / destMetersPerUnit : resolution;\n}\nfunction createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function(coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = (0,require$_DOT__SLASH_extent_DOT_js.getWidth)(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = (0,require$_DOT__SLASH_coordinate_DOT_js.getWorldsAway)(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = (0,require$_DOT__SLASH_math_DOT_js.clamp)(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = (0,require$_DOT__SLASH_math_DOT_js.clamp)(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      transformed[0] += worldsAway * (0,require$_DOT__SLASH_extent_DOT_js.getWidth)(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\nfunction addCommon() {\n  addEquivalentProjections(require$_DOT__SLASH_proj_SLASH_epsg3857_DOT_js.PROJECTIONS);\n  addEquivalentProjections(require$_DOT__SLASH_proj_SLASH_epsg4326_DOT_js.PROJECTIONS);\n  addEquivalentTransforms(require$_DOT__SLASH_proj_SLASH_epsg4326_DOT_js.PROJECTIONS, require$_DOT__SLASH_proj_SLASH_epsg3857_DOT_js.PROJECTIONS, require$_DOT__SLASH_proj_SLASH_epsg3857_DOT_js.fromEPSG4326, require$_DOT__SLASH_proj_SLASH_epsg3857_DOT_js.toEPSG4326,);\n}\naddCommon();\n\n};"],
"names":["shadow$provide","global","require","module","exports","disableCoordinateWarning","disable","showCoordinateWarning","undefined","cloneTransform","input","output","i","ii","length","slice","identityTransform","addProjection","projection","require$_DOT__SLASH_proj_SLASH_projections_DOT_js","add","getCode","require$_DOT__SLASH_proj_SLASH_transforms_DOT_js","addProjections","projections","forEach","get","projectionLike","makeProjection","projectionFactories","getPointResolution","resolution","point","units","getter","getPointResolutionFunc","pointResolution","getUnits","metersPerUnit","getMetersPerUnit","require$_DOT__SLASH_proj_SLASH_Units_DOT_js","METERS_PER_UNIT","projUnits","toEPSG4326","getTransformFromProjections","vertices","width","require$_DOT__SLASH_sphere_DOT_js","getDistance","height","addEquivalentProjections","source","destination","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clear","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","dimension","stride","Array","pointLength","j","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","coordinate","transform","toLonLat","lonLat","lon","require$_DOT__SLASH_math_DOT_js","modulo","equivalent","equalUnits","transformFunc","sourceCode","destinationCode","sourceTransforms","destinationTransforms","makeTransforms","transformFactories","composeTransformFuncs","fromSource","intermediateCode","toDestination","t1","t2","dimensions","getTransform","sourceProjection","destinationProjection","Error","transformExtent","extent","stops","require$_DOT__SLASH_extent_DOT_js","applyTransform","transformWithProjections","setUserProjection","userProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","require$_DOT__SLASH_coordinate_DOT_js","equals","require$_DOT__SLASH_console_DOT_js","warn","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","fromUserResolution","destMetersPerUnit","createSafeCoordinateTransform","coord","worldsAway","canWrapX","sourceExtent","getExtent","sourceExtentWidth","getWidth","getWorldsAway","clamp","transformed","addCommon","require$_DOT__SLASH_proj_SLASH_epsg3857_DOT_js","PROJECTIONS","require$_DOT__SLASH_proj_SLASH_epsg4326_DOT_js","fromEPSG4326","Object","defineProperties","__esModule","enumerable","value","Projection","default$$require$_DOT__SLASH_proj_SLASH_Projection_DOT_js","default","require$_DOT__SLASH_proj_SLASH_Projection_DOT_js","require$_DOT__SLASH_proj_SLASH_utm_DOT_js","esmDefault"]
}
