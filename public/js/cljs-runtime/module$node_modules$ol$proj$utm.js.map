{
"version":3,
"file":"module$node_modules$ol$proj$utm.js",
"lineCount":89,
"mappings":"AAAAA,cAAA,CAAA,+BAAA,GAAoD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AA+B5FC,UAASA,SAAQ,CAACC,OAAD,EAAUC,QAAV,EAAoBC,IAApB,CAA0B;AAInCC,YAAAA,IAFID,IAAKE,CAAAA,KAALC,GAAaJ,QAAbI,GAAwBJ,QAAxBI,GAAmC,QAEvCF,IAxBGG,MAwBHH,GAAU,iBAAVA;AACN,QAAMI,OAAOJ,QAAPI,GAAYC,EAAZD,GAAiBE,IAAKC,CAAAA,GAAL,CAAS,CAAT,GAAaP,QAAb,CAAjBI,GAAoCI,EAApCJ,GAAyCE,IAAKC,CAAAA,GAAL,CAAS,CAAT,GAAaP,QAAb,CAAzCI,GAA4DK,EAA5DL,GAAiEE,IAAKC,CAAAA,GAAL,CAAS,CAAT,GAAaP,QAAb,CAAjEI,GAAoFM,EAApFN,GAAyFE,IAAKC,CAAAA,GAAL,CAAS,CAAT,GAAaP,QAAb,CAA/F,EACMW,OAAOL,IAAKC,CAAAA,GAAL,CAASH,IAAT,CADb;AAEA,UAAMQ,QAAQD,IAARC,GAAeD,IAArB;AACME,YAAAA,GAAOP,IAAKQ,CAAAA,GAAL,CAASV,IAAT,CAAPS;AACN,UAAME,OAAOJ,IAAPI,GAAcF,QAApB;AACMG,QAAAA,GAAQD,IAARC,GAAeD,IAAfC;AACN,UAAMC,QAAQD,IAARC,GAAgBD,IAAtB,EAKME,IAhCKC,mBAgCLD,GAAWL,QAAXK,IAAmB,CALzB,EAMME,KAAKF,CAALE,GAASF,CANf;AAOMG,WAAAA,IAjBIxB,OAiBJwB,GAjBc,MAiBdA,KAnBEC,OAmBFD,GALYf,IAAKiB,CAAAA,IAALC,CAAU,CAAVA,GAhCVC,UAgCUD,GAAkBZ,KAAlBY,CAKZH,GAtCGlB,MAsCHkB;AACN,UAAMK,KAAKL,OAALK,GAASL,OAAf,EACMM,KAAKD,EAALC,GAAUN,OADhB,EAEMO,KAAKD,EAALC,GAAUP,OAFhB,EAGMQ,KAAKD,EAALC,GAAUR,OAHhB;AAKMS,QAAAA,GAAW1B,IAAX0B,GAAkBf,IAAlBe,IATK,SASLA,IAZQ,CAYRA,GA3CEL,UA2CFK,GAZgBlB,KAYhBkB,MAA8BJ,EAA9BI,GAAmC,CAAnCA,GAAuCF,EAAvCE,GAA4C,EAA5CA,IAAkD,CAAlDA,GAAsD,CAAtDA,GAA0Dd,IAA1Dc,GAAkE,EAAlEA,GAAuEZ,CAAvEY,GAA2E,CAA3EA,GAA+EV,EAA/EU,GAAoF,kBAApFA,KADKD,EACLC,GADUT,OACVS,GAAsG,GAAtGA,IAA6G,EAA7GA,GAAkH,EAAlHA,GAAuHd,IAAvHc,GAA+H,GAA/HA,GAAqIZ,CAArIY,GAAyI,EAAzIA,GAA8Ib,KAA9Ia,GAAsJ,kBAAtJA,GAAmK,CAAnKA,GAAuKV,EAAvKU;AAENC,QAAA,GAAY,GAAGC,oCAAqCC,CAAAA,IAAxC,GADKZ,OACL,GADSM,EACT,GADc,CACd,IADmB,CACnB,GADuB,CACvB,GAD2BX,IAC3B,GADmCE,CACnC,IADwCW,EACxC,GAD6C,GAC7C,IADoD,CACpD,GADwD,CACxD,GAD4DX,CAC5D,GADgE,EAChE,GADqEF,IACrE,GAD6E,CAC7E,GADiFI,EACjF,GADsF,kBACtF,GADiG,EACjG,GADsGH,KACtG,KADgHJ,QAChH,GAA0D,GAAGmB,oCAAqCE,CAAAA,SAAxC,EAwClD,CAxCkD,IAA0EnC,IAAKoC,CAAAA,MAA/E,GAwCvD,CAxCuD,IAwC9C,GAxC8C,GAwCxC,CAxCwC,CAA1D,EAAmJ,CAAC7B,IAAK8B,CAAAA,EAAzJ,EAA6J9B,IAAK8B,CAAAA,EAAlK,CAAZ;AACA,WAAO,CAAC,GAAGJ,oCAAqCK,CAAAA,SAAxC,EAAmDN,IAAnD,CAAD,EAAgE,GAAGC,oCAAqCK,CAAAA,SAAxC,EAAmDP,IAAnD,CAAhE,CAAP;AA3ByC;AAiC3CQ,UAASA,WAAU,CAACP,SAAD,EAAYD,QAAZ,EAAsB/B,IAAtB,CAA4B;AAC7CgC,aAAA,GAAY,GAAGC,oCAAqCC,CAAAA,IAAxC,EAA8CF,SAA9C,EAHQQ,CAAC,GAGT,EAFQC,GAER,CAAZ;AALmBC,KAAC,EAMpB,GAAIX,QAAJ,GACEA,QADF,GANmBW,CAAC,EAMpB,GALmBC,EAKnB,GAEWZ,QAFX,KAGEA,QAHF,GALmBY,EAKnB,CAAA;AAKA,QAAMC,SAAS,GAAGX,oCAAqCE,CAAAA,SAAxC,EAAmDJ,QAAnD,CAAf,EACMc,SAAStC,IAAKC,CAAAA,GAAL,CAASoC,MAAT,CADf,EAEME,SAASvC,IAAKQ,CAAAA,GAAL,CAAS6B,MAAT,CAFf;AAGA,UAAMG,SAASF,MAATE,GAAkBD,MAAxB;AACME,YAAAA,GAAUD,MAAVC,GAAmBD,MAAnBC;AACN,UAAMC,UAAUD,QAAVC,GAAoBD,QAA1B;AACA,QAAME,SAAS,GAAGjB,oCAAqCE,CAAAA,SAAxC,EAAmDH,SAAnD,CAAf,EAEMmB,gBAAgB,GAAGlB,oCAAqCE,CAAAA,SAAxC,EAkBF,CAlBE,IADoBnC,IAAKoC,CAAAA,MACzB,GAkBP,CAlBO,IAkBE,GAlBF,GAkBQ,CAlBR,CAFtB;AAGMgB,UAAAA,GAlDE7B,OAkDF6B,GAAQ7C,IAAKiB,CAAAA,IAAL,CAAU,CAAV,GApENE,UAoEM,GAAkBmB,MAAlB,IAA4B,CAA5B,CAARO;AACAjC,aAAAA,GAlEKC,mBAkELD,GAAW2B,MAAX3B,IAAqB,CAArBA;AACI2B,UAAJO,IAAa,GAAGpB,oCAAqCC,CAAAA,IAAxC,EAA8CgB,MAA9C,GAAuDC,aAAvD,EAAsE,CAAC5C,IAAK8B,CAAAA,EAA5E,EAAgF9B,IAAK8B,CAAAA,EAArF,CAAbgB;AACN,UAAMC,KAAKD,MAALC,GAASD,MAAf;AACME,UAAAA,GAAKD,EAALC,GAAUF,MAAVE;AACN,UAAMC,KAAKD,MAALC,GAAUH,MAAhB;AACMI,iBAAAA,GAAKD,EAALC,GAAUJ,MAAVI;AAIF1D,UAAAA,GA/EKK,MA+ELL,IA5DIwB,OA4DJxB,IApEK2D,iBAoEL3D,GAFgB6C,MAEhB7C,GAnEK4D,mBAmEL5D,GAF8BQ,IAAKC,CAAAA,GAAL,CAAS,CAAT,GAAaoC,MAAb,CAE9B7C,GAlEK6D,qBAkEL7D,GAF0DQ,IAAKC,CAAAA,GAAL,CAAS,CAAT,GAAaoC,MAAb,CAE1D7C,GAjEK8D,oBAiEL9D,GAFsFQ,IAAKC,CAAAA,GAAL,CAAS,CAAT,GAAaoC,MAAb,CAEtF7C,IAAqBqD,MAArBrD,GAAyBgD,MAAzBhD,IAAmCuD,EAAnCvD,GAAwC,CAAxCA,GAA4CyD,EAA5CzD,GAAiD,EAAjDA,IAAuD,CAAvDA,GAA2DiD,QAA3DjD,GAAqE,CAArEA,GAAyEoB,SAAzEpB,GAA6E,CAA7EA,GAAiFoB,SAAjFpB,IAAsF,CAAtFA,IAHO0D,aAGP1D,GAHYsD,MAGZtD,GAAgG,GAAhGA,IAAuG,EAAvGA,GAA4G,EAA5GA,GAAiHiD,QAAjHjD,GAA2HkD,OAA3HlD,GAAqI,GAArIA,GAA2IoB,SAA3IpB,GAA+I,kBAA/IA;AACCC,QAAKE,CAAAA,KAAV,KACEH,MADF,IACc,QADd;AAGA,WAAO,CAnFEK,MAmFF,GALcgD,MAKd,IALmBC,MAKnB,GALuBE,MAKvB,GAL4B,CAK5B,IALiC,CAKjC,GALqCP,QAKrC,GAL+C7B,SAK/C,IALoDsC,aAKpD,GALyD,GAKzD,IALgE,CAKhE,GALoE,EAKpE,GALyET,QAKzE,GALmFC,OAKnF,GAL6F,EAK7F,GALkG9B,SAKlG,GALsG,kBAKtG,KALoH,MAKpH,EAAUpB,MAAV,CAAP;AA9B6C;AAoC/C+D,UAASA,aAAY,CAACC,IAAD,CAAO;AAC1B,QAAIC,SAAS,CAAb;AACA,SAAK,IAAMC,EAAX,IAAiBC,WAAjB,CAA8B;AAC5B,YAAMC,QAAQJ,IAAKI,CAAAA,KAAL,CAAWF,EAAX,CAAd;AACA,UAAIE,KAAJ,CAAW;AACTH,cAAA,GAASI,QAAA,CAASD,KAAA,CAAM,CAAN,CAAT,CAAT;AACA;AAFS;AAFiB;AAO9B,QAAI,CAACH,MAAL;AACE,aAAO,IAAP;AADF;AAGI5B,QAAAA,GAAS,CAATA;AACAlC,MAAAA,GAAQ,CAAA,CAARA;AACS,SAAb,GAAI8D,MAAJ,IAA+B,KAA/B,GAAsBA,MAAtB,GACE5B,IADF,GACW4B,MADX,GACoB,KADpB,GAEoB,KAFpB,GAEWA,MAFX,IAEsC,KAFtC,GAE6BA,MAF7B,KAGE9D,EACA,GADQ,CAAA,CACR,EAAAkC,IAAA,GAAS4B,MAAT,GAAkB,KAJpB,CAAA;AAMA,WAAK5B,IAAL,GAGO,CAACA,OAAAA,IAAD,EAASlC,MAAAA,EAAT,CAHP,GACS,IADT;AApB0B;AAyB5BmE,UAASA,sBAAqB,CAACC,WAAD,EAActE,IAAd,CAAoB;AAChD,WAAO,QAAQ,CAACuE,KAAD,EAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,MAA3B,CAAmC;AAChD,YAAMC,SAASJ,KAAMI,CAAAA,MAArB;AACAF,eAAA,GAAwB,CAAZ,GAAAA,SAAA,GAAgBA,SAAhB,GAA4B,CAAxC;AACAC,YAAA,GAASA,MAAT,IAAmBD,SAAnB;AACKD,YAAL,KAEIA,MAFJ,GACkB,CAAhB,GAAIC,SAAJ,GACWF,KAAMK,CAAAA,KAAN,EADX,GAGeC,KAAJ,CAAUF,MAAV,CAJb;AAOA,WAASG,SAAT,GAAa,CAAb,EAAgBA,SAAhB,GAAoBH,MAApB,EAA4BG,SAA5B,IAAiCJ,MAAjC,CAAyC;AAGvC,cAAMK,QAAQT,WAAA,CAFJC,KAAAS,CAAMF,SAANE,CAEI,EADJT,KAAApE,CAAM2E,SAAN3E,GAAU,CAAVA,CACI,EAAkBH,IAAlB,CAAd;AACAwE,cAAA,CAAOM,SAAP,CAAA,GAAYC,KAAA,CAAM,CAAN,CAAZ;AACAP,cAAA,CAAOM,SAAP,GAAW,CAAX,CAAA,GAAgBC,KAAA,CAAM,CAAN,CAAhB;AALuC;AAOzC,aAAOP,MAAP;AAlBgD,KAAlD;AADgD;AAsBlDS,UAASA,eAAc,CAAClB,IAAD,CAAO;AAE5B,WADaD,YAAA9D,CAAa+D,IAAb/D,CACb,GAGO,IAAIkF,8CAA+CC,CAAAA,OAAnD,CAA2D,CAACpB,IAAD,EAAOqB,MAAM,GAAb,CAA3D,CAHP,GACS,IADT;AAF4B;AAO9BC,UAASA,eAAc,CAACC,UAAD,CAAa;AAElC,WAAA,CADMtF,UACN,GADa8D,YAAA,CAAawB,UAAWC,CAAAA,OAAX,EAAb,CACb,IAGO,CAACC,QAAQnB,qBAAA,CAAsB9B,UAAtB,EAAkCvC,UAAlC,CAAT,EAAkDyF,QAAQpB,qBAAA,CAAsBxE,QAAtB,EAAgCG,UAAhC,CAA1D,CAHP,GACS,IADT;AAFkC;AAzJpC0F,QAAOC,CAAAA,gBAAP,CAAwB/F,OAAxB,EAAiC,CAACgG,WAAW,CAACC,WAAW,CAAA,CAAZ,EAAkBC,MAAM,CAAA,CAAxB,CAAZ,EAA2Cb,eAAe,CAACY,WAAW,CAAA,CAAZ,EAAkBE,IAAIA,QAAQ,EAAG;AAC1H,WAAOd,cAAP;AAD0H,GAAjC,CAA1D,EAE7BI,eAAe,CAACQ,WAAW,CAAA,CAAZ,EAAkBE,IAAIA,QAAQ,EAAG;AAClD,WAAOV,cAAP;AADkD,GAAjC,CAFc,EAI7BvB,aAAa,CAAC+B,WAAW,CAAA,CAAZ,EAAkBE,IAAIA,QAAQ,EAAG;AAChD,WAAOjC,YAAP;AADgD,GAAjC,CAJgB,CAAjC,CAAA;AAOA,MAAI7B,uCAAuCvC,OAAA,CAAQ,6BAAR,CAA3C;AACIsG,QAAAA,GAAwCtG,OAAA,CAAQ,wCAAR,CAAxCsG;AACJ,MAAId,iDAAiDxF,OAAQuG,CAAAA,UAAR,CAAmBD,MAAnB,CAArD;AAMME,SAAAA,GAAS3F,IAAKiB,CAAAA,IAAL,CAAU,SAAV,CAAT0E;AACAC,SAAAA,IAAM,CAANA,GAAUD,OAAVC,KAAqB,CAArBA,GAAyBD,OAAzBC;AACAC,QAAAA,GAAMD,OAANC,GAAWD,OAAXC;AACAC,QAAAA,GAAMD,MAANC,GAAYF,OAAZE;AACAC,SAAAA,GAAMD,MAANC,GAAYH,OAAZG;AACN,QAAMC,MAAMD,OAANC,GAAYJ,OAAlB,EAKM7F,KAAK,GAALA,GAAa6F,OAAb7F,GAAkB,MAAlBA,GAA4B+F,MAA5B/F,GAAkC,UAAlCA,GAA8CiG,GALpD,EAMM9F,KAAK,MAALA,GAAe2F,MAAf3F,GAAqB,OAArBA,GAA+B6F,OANrC,EAOM5F,KAAK,GAALA,GAAW,EAAXA,GAAgB2F,MAAhB3F,GAAsB,SAAtBA,GAAkC6F,GAPxC,EAQM5F,KAAK,WAALA,GAAkB2F,OARxB,EA8EMpC,cAAc,CAAC,cAAD,EAAiB,+BAAjB,EAAkD,wDAAlD,CA9EpB;AArB4F,CAA5F;;",
"sources":["node_modules/ol/proj/utm.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ol$proj$utm\"] = function(global,require,module,exports) {\nObject.defineProperties(exports, {__esModule:{enumerable:true, value:true}, makeProjection:{enumerable:true, get:function() {\n  return makeProjection;\n}}, makeTransforms:{enumerable:true, get:function() {\n  return makeTransforms;\n}}, zoneFromCode:{enumerable:true, get:function() {\n  return zoneFromCode;\n}}});\nvar require$_DOT__DOT__SLASH_math_DOT_js = require(\"../math.js\");\nvar require$_DOT__SLASH_Projection_DOT_js = require(\"./Projection.js\");\nvar default$$require$_DOT__SLASH_Projection_DOT_js = require.esmDefault(require$_DOT__SLASH_Projection_DOT_js);\nconst K0 = 0.9996;\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\nconst M1 = 1 - E / 4 - 3 * E2 / 64 - 5 * E3 / 256;\nconst M2 = 3 * E / 8 + 3 * E2 / 32 + 45 * E3 / 1024;\nconst M3 = 15 * E2 / 256 + 45 * E3 / 1024;\nconst M4 = 35 * E3 / 3072;\nconst P2 = 3 / 2 * _E - 27 / 32 * _E3 + 269 / 512 * _E5;\nconst P3 = 21 / 16 * _E2 - 55 / 32 * _E4;\nconst P4 = 151 / 96 * _E3 - 417 / 128 * _E5;\nconst P5 = 1097 / 512 * _E4;\nconst R = 6378137;\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n  const m = y / K0;\n  const mu = m / (R * M1);\n  const pRad = mu + P2 * Math.sin(2 * mu) + P3 * Math.sin(4 * mu) + P4 * Math.sin(6 * mu) + P5 * Math.sin(8 * mu);\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n  const pCos = Math.cos(pRad);\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n  const latitude = pRad - pTan / r * (d2 / 2 - d4 / 24 * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) + d6 / 720 * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n  let longitude = (d - d3 / 6 * (1 + 2 * pTan2 + c) + d5 / 120 * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) / pCos;\n  longitude = (0,require$_DOT__DOT__SLASH_math_DOT_js.wrap)(longitude + (0,require$_DOT__DOT__SLASH_math_DOT_js.toRadians)(zoneToCentralLongitude(zone.number)), -Math.PI, Math.PI,);\n  return [(0,require$_DOT__DOT__SLASH_math_DOT_js.toDegrees)(longitude), (0,require$_DOT__DOT__SLASH_math_DOT_js.toDegrees)(latitude)];\n}\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = (0,require$_DOT__DOT__SLASH_math_DOT_js.wrap)(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n  const latRad = (0,require$_DOT__DOT__SLASH_math_DOT_js.toRadians)(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n  const lonRad = (0,require$_DOT__DOT__SLASH_math_DOT_js.toRadians)(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = (0,require$_DOT__DOT__SLASH_math_DOT_js.toRadians)(centralLon);\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n  const a = latCos * (0,require$_DOT__DOT__SLASH_math_DOT_js.wrap)(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n  const m = R * (M1 * latRad - M2 * Math.sin(2 * latRad) + M3 * Math.sin(4 * latRad) - M4 * Math.sin(6 * latRad));\n  const easting = K0 * n * (a + a3 / 6 * (1 - latTan2 + c) + a5 / 120 * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) + 500000;\n  let northing = K0 * (m + n * latTan * (a2 / 2 + a4 / 24 * (5 - latTan2 + 9 * c + 4 * c ** 2) + a6 / 720 * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n  if (!zone.north) {\n    northing += 10000000;\n  }\n  return [easting, northing];\n}\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\nconst epsgRegExes = [/^EPSG:(\\d+)$/, /^urn:ogc:def:crs:EPSG::(\\d+)$/, /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,];\nfunction zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n  return {number, north};\n}\nfunction makeTransformFunction(transformer, zone) {\n  return function(input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\nfunction makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new default$$require$_DOT__SLASH_Projection_DOT_js.default({code, units:\"m\"});\n}\nfunction makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n  return {forward:makeTransformFunction(fromLonLat, zone), inverse:makeTransformFunction(toLonLat, zone),};\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","toLonLat","easting","northing","zone","mu","north","y","K0","pRad","P2","Math","sin","P3","P4","P5","pSin","pSin2","pCos","cos","pTan","pTan2","pTan4","c","E_P2","c2","d","R","sqrt","epSinSqrt","E","d2","d3","d4","d5","latitude","longitude","require$_DOT__DOT__SLASH_math_DOT_js","wrap","toRadians","number","PI","toDegrees","fromLonLat","MIN_LONGITUDE","MAX_LONGITUDE","MIN_LATITUDE","MAX_LATITUDE","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLonRad","n","a","a2","a3","a4","a5","M1","M2","M3","M4","zoneFromCode","code","epsgId","re","epsgRegExes","match","parseInt","makeTransformFunction","transformer","input","output","dimension","stride","length","slice","Array","i","coord","x","makeProjection","default$$require$_DOT__SLASH_Projection_DOT_js","default","units","makeTransforms","projection","getCode","forward","inverse","Object","defineProperties","__esModule","enumerable","value","get","require$_DOT__SLASH_Projection_DOT_js","esmDefault","SQRT_E","_E","_E2","_E3","_E4","_E5"]
}
